(window.webpackJsonp=window.webpackJsonp||[]).push([[191],{646:function(t,a,s){"use strict";s.r(a);var e=s(17),r=Object(e.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"shell笔记"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#shell笔记"}},[t._v("$")]),t._v(" Shell笔记")]),t._v(" "),a("h2",{attrs:{id:"最佳实践"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#最佳实践"}},[t._v("$")]),t._v(" 最佳实践")]),t._v(" "),a("h3",{attrs:{id:"适用场景"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#适用场景"}},[t._v("$")]),t._v(" 适用场景")]),t._v(" "),a("p",[t._v("什么时候不应该使用bash脚本：")]),t._v(" "),a("ul",[a("li",[t._v("你的脚本太长，多达几百行")]),t._v(" "),a("li",[t._v("你需要比数组更复杂的数据结构")]),t._v(" "),a("li",[t._v("出现了复杂的转义问题")]),t._v(" "),a("li",[t._v("有太多的字符串操作")]),t._v(" "),a("li",[t._v("不太需要调用其它程序和跟其它程序管道交互")]),t._v(" "),a("li",[t._v("担心性能")])]),t._v(" "),a("h3",{attrs:{id:"执行"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#执行"}},[t._v("$")]),t._v(" 执行")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("用bash -n对脚本进行语法检查：\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("bash")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-n")]),t._v(" myscript.sh\n\n用bash -v跟踪脚本里的每个命令的执行：\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("bash")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-v")]),t._v(" myscript.sh\n\n用bash -x跟踪脚本里的每个命令的执行，并附加扩充信息：\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("bash")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-x")]),t._v(" myscript.sh\n")])])]),a("h3",{attrs:{id:"set选项"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#set选项"}},[t._v("$")]),t._v(" set选项")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("短参数")]),t._v(" "),a("th",[t._v("长参数")]),t._v(" "),a("th",[t._v("说明")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("-a")]),t._v(" "),a("td",[t._v("-o allexport")]),t._v(" "),a("td",[t._v("创建或修改的每个变量或函数都具有导出属性，并标记为导出到后续命令的环境。")])]),t._v(" "),a("tr",[a("td",[t._v("-B")]),t._v(" "),a("td",[t._v("-o braceexpand")]),t._v(" "),a("td",[t._v("立即报告停止的后台任务状态，而不是在下一次主要交互时打印")])]),t._v(" "),a("tr",[a("td"),t._v(" "),a("td",[t._v("-o emacs")]),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td",[t._v("-e")]),t._v(" "),a("td",[t._v("-o errexit")]),t._v(" "),a("td",[t._v("当pipeline返回非零状态时立即退出")])]),t._v(" "),a("tr",[a("td",[t._v("-E")]),t._v(" "),a("td",[t._v("-o errtrace")]),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td",[t._v("-T")]),t._v(" "),a("td",[t._v("-o functrace")]),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td",[t._v("-h")]),t._v(" "),a("td",[t._v("-o hashall")]),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td",[t._v("-H")]),t._v(" "),a("td",[t._v("-o histexpand")]),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td"),t._v(" "),a("td",[t._v("-o history")]),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td"),t._v(" "),a("td",[t._v("-o ignoreeof")]),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td",[t._v("-k")]),t._v(" "),a("td",[t._v("-o keyword")]),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td",[t._v("-m")]),t._v(" "),a("td",[t._v("-o monitor")]),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td",[t._v("-C")]),t._v(" "),a("td",[t._v("-o noclobber")]),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td",[t._v("-n")]),t._v(" "),a("td",[t._v("-o noexec")]),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td",[t._v("-f")]),t._v(" "),a("td",[t._v("-o noglob")]),t._v(" "),a("td",[t._v("禁止globbing(文件名扩展)")])]),t._v(" "),a("tr",[a("td"),t._v(" "),a("td",[t._v("-o nolog")]),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td",[t._v("-b")]),t._v(" "),a("td",[t._v("-o notify")]),t._v(" "),a("td",[t._v("导致立即报告终止的后台作业的状态，而不是在打印下一个主要提示之前。")])]),t._v(" "),a("tr",[a("td",[t._v("-u")]),t._v(" "),a("td",[t._v("-o nounset")]),t._v(" "),a("td",[t._v("遇到不存在的变量就会报错并停止执行。")])]),t._v(" "),a("tr",[a("td",[t._v("-t")]),t._v(" "),a("td",[t._v("-o onecmd")]),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td",[t._v("-P")]),t._v(" "),a("td",[t._v("-o physical")]),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td"),t._v(" "),a("td",[t._v("-o pipefail")]),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td"),t._v(" "),a("td",[t._v("-o posix")]),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td",[t._v("-p")]),t._v(" "),a("td",[t._v("-o privileged")]),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td",[t._v("-v")]),t._v(" "),a("td",[t._v("-o verbose")]),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td"),t._v(" "),a("td",[t._v("-o vi")]),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td",[t._v("-x")]),t._v(" "),a("td",[t._v("-o xtrace")]),t._v(" "),a("td",[t._v("用来在运行结果之前，先输出执行的那一行命令")])]),t._v(" "),a("tr",[a("td"),t._v(" "),a("td",[t._v("--")]),t._v(" "),a("td",[t._v("如果该选项后不跟参数，则重置位置参数，否则将位置参数设置为选项后的参数")])])])]),t._v(" "),a("p",[t._v("参考：")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://www.gnu.org/software/bash/manual/html_node/The-Set-Builtin.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("The Set Builtin"),a("OutboundLink")],1)]),t._v(" "),a("p",[a("a",{attrs:{href:"http://www.ruanyifeng.com/blog/2017/11/bash-set.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Bash 脚本 set 命令教程"),a("OutboundLink")],1)]),t._v(" "),a("h3",{attrs:{id:"退出状态码"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#退出状态码"}},[t._v("$")]),t._v(" 退出状态码")]),t._v(" "),a("p",[t._v("如果要根据命令的退出状态码做如下的分支操作，当状态码不为0且设置"),a("code",[t._v("set -o errexit")]),t._v("时会直接退出：")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("grep")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-q")]),t._v(" something /path/to/somefile\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("retval")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$?")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$retval")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-eq")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("then")]),t._v("\n  do_something  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# found")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v("\n  do_something_else  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# not found")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("fi")]),t._v("\n")])])]),a("p",[t._v("可以改写成：")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("grep")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-q")]),t._v(" something /path/to/somefile"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("then")]),t._v("\n  do_something  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# found")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v("\n  do_something_else  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# not found")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("fi")]),t._v("\n")])])]),a("p",[t._v("参考："),a("a",{attrs:{href:"https://stackoverflow.com/questions/44080974/if-errexit-is-on-how-do-i-run-a-command-that-might-fail-and-get-its-exit-code",target:"_blank",rel:"noopener noreferrer"}},[t._v("If errexit is on, how do I run a command that might fail and get its exit code?"),a("OutboundLink")],1)]),t._v(" "),a("h3",{attrs:{id:"封装"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#封装"}},[t._v("$")]),t._v(" 封装")]),t._v(" "),a("p",[t._v("封装提高复用性和可读性：")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function-name function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("local")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("prefix")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"['),a("span",{pre:!0,attrs:{class:"token variable"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("date")]),t._v(" +%Y/%m/%d"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v(" %H:%M:%S"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v(")")])]),t._v(']: "')]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"'),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${prefix}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$@")]),t._v('"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[t._v("&2")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\nlog "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"INFO"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"a info level message"')]),t._v("\n\n\n"),a("span",{pre:!0,attrs:{class:"token function-name function"}},[t._v("ExtractBashComments")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("egrep")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"^#"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("cat")]),t._v(" example.sh "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" ExtractBashComments "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("wc")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-l")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("comments")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token variable"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$(")]),t._v("ExtractBashComments "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" rules.sh"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v(")")])]),t._v("\n")])])]),a("h3",{attrs:{id:"变量安全性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#变量安全性"}},[t._v("$")]),t._v(" 变量安全性")]),t._v(" "),a("p",[t._v("使用readonly和local修饰变量提高安全：")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# DEFAULT_VAL可以被环境变量中的值覆盖")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("readonly")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("DEFAULT_VAL")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${DEFAULT_VAL"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":-")]),t._v("234}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function-name function"}},[t._v("myfunc")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("local")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("var")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${DEFAULT_VAL}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" var:"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$var")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h3",{attrs:{id:"使用替代品"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用替代品"}},[t._v("$")]),t._v(" 使用替代品")]),t._v(" "),a("p",[t._v('用$()代替反单引号"`"的好处：')]),t._v(" "),a("ul",[a("li",[a("p",[t._v("$()能够支持内嵌")])]),t._v(" "),a("li",[a("p",[t._v("$()不用转义")])]),t._v(" "),a("li",[a("p",[t._v("$()不容易与单引号混淆")])])]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(' "A-'),a("span",{pre:!0,attrs:{class:"token variable"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("`")]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" B-"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("`")])]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" C-"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),a("span",{pre:!0,attrs:{class:"token variable"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("`")]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" D"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("`")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("``"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"\necho "')]),t._v("A-"),a("span",{pre:!0,attrs:{class:"token variable"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$(")]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" B-"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("$(")]),t._v("echo C-"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("$(")]),t._v("echo D"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v(")")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v('"\n')])])]),a("p",[t._v("用[[]]替代[]的好处：")]),t._v(" "),a("ul",[a("li",[t._v("避免转义问题")]),t._v(" "),a("li",[t._v("支持新功能")])]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("对比项")]),t._v(" "),a("th",[t._v("[]")]),t._v(" "),a("th",[t._v("[[]]")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("逻辑或")]),t._v(" "),a("td"),t._v(" "),a("td",[t._v("||")])]),t._v(" "),a("tr",[a("td",[t._v("逻辑与")]),t._v(" "),a("td"),t._v(" "),a("td",[t._v("&&")])]),t._v(" "),a("tr",[a("td",[t._v("字符串比较（不需要转义）")]),t._v(" "),a("td"),t._v(" "),a("td",[t._v("<")])]),t._v(" "),a("tr",[a("td",[t._v("通配符(glob)字符串比较")]),t._v(" "),a("td"),t._v(" "),a("td",[t._v("==")])]),t._v(" "),a("tr",[a("td",[t._v("正则表达式字符串比较")]),t._v(" "),a("td"),t._v(" "),a("td",[t._v("=~")])])])]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("b\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"'),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${name}")]),t._v('"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"a"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-o")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${name}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"m"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"'),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${name}")]),t._v('"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"a"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"'),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${name}")]),t._v('"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"m"')]),t._v("  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])]),a("h3",{attrs:{id:"正则表达式-globbing"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#正则表达式-globbing"}},[t._v("$")]),t._v(" 正则表达式/Globbing")]),t._v(" "),a("p",[t._v("注意正则表达式和globbing表达式都不能用引号包裹：")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("t")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"abc123"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"'),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$t")]),t._v('"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" abc* "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("         "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# true (globbing比较)")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"'),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$t")]),t._v('"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=~")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("abc"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("+"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("123")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("+ "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# true (正则表达式比较)")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"'),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$t")]),t._v('"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"abc*"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("       "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# false (字面比较)")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"'),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$t")]),t._v('"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=~")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"abc*"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("       "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# false (字面比较)")]),t._v("\n")])])]),a("p",[t._v("如果表达式里有空格，可以把它存储到一个变量里：")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("r")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"a b+"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"a bbb"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=~")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$r")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# true")]),t._v("\n")])])]),a("p",[t._v("按Globbing方式的字符串比较也可以用到case语句中：")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$t")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v("\nabc*"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"matched abc*"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("esac")]),t._v("\n")])])]),a("h3",{attrs:{id:"使用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用"}},[t._v("$")]),t._v(" 使用<()")]),t._v(" "),a("p",[t._v("使用<()避免使用临时文件：")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#   下载并比较两个网页")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("diff")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("wget")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-O")]),t._v(" - https://baidu.com"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("wget")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-O")]),t._v(" - https://sogou.com"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("h3",{attrs:{id:"使用-here-documents"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用-here-documents"}},[t._v("$")]),t._v(' 使用"here documents"')]),t._v(" "),a("p",[t._v('使用"here documents"在标准输入上输入多行字符串：')]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#   任何字词都可以当作分界符")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("command")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("MARKER\n...\n"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${var}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token variable"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$(")]),t._v("cmd"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v(")")])]),t._v("\n...\nMARKER")]),t._v("\n")])])]),a("p",[t._v("如果文本里没有内嵌变量替换操作，你可以把第一个MARKER用单引号包起来：")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("command")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'MARKER'\n...\nno substitution is happening here.\n$ (dollar sign) is passed through verbatim.\n...\nMARKER")]),t._v("\n")])])]),a("h2",{attrs:{id:"登录shell"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#登录shell"}},[t._v("$")]),t._v(" 登录shell")]),t._v(" "),a("p",[t._v("交互式 shell 和非交互式 shell：")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("交互式 shell 指的是在终端有交互的模式，比如 ssh 登录")])]),t._v(" "),a("li",[a("p",[t._v("非交互式 shell 指的是 bash shell 以命令脚本的形式执行")])])]),t._v(" "),a("p",[a("strong",[t._v("登录shell")]),t._v("：登录shell是用户使用自己的 user ID 登录交互式 shell 的第一个进程。登录shell一定是"),a("strong",[t._v("交互式")]),t._v("的。")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("shell首先执行/etc/profile中的命令，为系统内的所有bash用户建立默认特征。然后依次查找"),a("code",[t._v("~/.bash_profile")]),t._v("，"),a("code",[t._v("~/.bash_login")]),t._v("，"),a("code",[t._v("~/.profile")]),t._v("并执行它找到的第1个相关文件中的命令。")])]),t._v(" "),a("li",[a("p",[t._v("退出执行"),a("code",[t._v(".bash_logout")]),t._v("文件中的命令。")])])]),t._v(" "),a("p",[a("strong",[t._v("交互式非登录shell")]),t._v("：当你在已经存在的终端 session 中开启一个 shell 会得到一个交互式非登录 shell。")]),t._v(" "),a("ul",[a("li",[t._v("交互式非登录shell执行"),a("code",[t._v("~/.bashrc")]),t._v("文件中的命令。")])]),t._v(" "),a("p",[a("strong",[t._v("非交互式非登录shell")]),t._v("：")]),t._v(" "),a("ul",[a("li",[t._v("非交互式shell并不执行前面描述的启动文件中的命令(如那些运行shell脚本的shell)，然而这些shell从登录shell继承了由这些启动文件设置的shell变量。")])]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("交互类型")]),t._v(" "),a("th",[t._v("登录类型")]),t._v(" "),a("th",[t._v("Bash启动")]),t._v(" "),a("th",[t._v("bash退出")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("交互式")]),t._v(" "),a("td",[t._v("登录shell")]),t._v(" "),a("td",[t._v("/etc/profile"),a("br"),t._v("~/.bash_profile | ~/.bash_login | ~/.profile")]),t._v(" "),a("td",[t._v(".bash_logout")])]),t._v(" "),a("tr",[a("td",[t._v("交互式")]),t._v(" "),a("td",[t._v("非登录shell")]),t._v(" "),a("td",[t._v("~/.bashrc")]),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td",[t._v("非交互式")]),t._v(" "),a("td",[t._v("非登录shell")]),t._v(" "),a("td",[t._v("继承环境变量")]),t._v(" "),a("td")])])]),t._v(" "),a("p",[t._v("参考："),a("a",{attrs:{href:"http://einverne.github.io/post/2019/01/login-shell-vs-non-login-shell.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("登录式 shell 和非登录式 shell 区别"),a("OutboundLink")],1)]),t._v(" "),a("h2",{attrs:{id:"变量"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#变量"}},[t._v("$")]),t._v(" 变量")]),t._v(" "),a("h3",{attrs:{id:"变量类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#变量类型"}},[t._v("$")]),t._v(" 变量类型")]),t._v(" "),a("p",[t._v("运行shell时，会同时存在三种变量：")]),t._v(" "),a("ol",[a("li",[t._v("局部变量：局部变量在脚本或命令中定义，仅在当前shell实例中有效，其他shell启动的程序不能访问局部变量。")]),t._v(" "),a("li",[t._v("环境变量：所有的程序，包括shell启动的程序，都能访问环境变量，有些程序需要环境变量来保证其正常运行。必要的时候shell脚本也可以定义环境变量。")]),t._v(" "),a("li",[t._v("shell变量：shell变量是由shell程序设置的特殊变量。shell变量中有一部分是环境变量，有一部分是局部变量，这些变量保证了shell的正常运行。")])]),t._v(" "),a("p",[t._v("子进程从它的父进程继承环境。由于进程的局部性，一旦子进程被产生，父进程就无法感知对环境的修改，子进程也无法感知父进程对环境变量的修改。")]),t._v(" "),a("p",[t._v("当运行export 变量时，shell将这些变量的名称放入环境中。如果没有参数，export将列出所有环境变量。")]),t._v(" "),a("h3",{attrs:{id:"定义变量"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#定义变量"}},[t._v("$")]),t._v(" 定义变量")]),t._v(" "),a("p",[t._v("Shell 变量的命名规范和大部分编程语言都一样：")]),t._v(" "),a("ul",[a("li",[t._v("变量名由数字、字母、下划线组成")]),t._v(" "),a("li",[t._v("必须以字母或者下划线开头")]),t._v(" "),a("li",[t._v("不能使用 Shell 里的关键字（通过 help 命令可以查看保留关键字）")])]),t._v(" "),a("p",[t._v("Shell 支持以下定义变量的方式：")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("variable")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("value             "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 赋值号的周围不能有空格")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("variable")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'value'")]),t._v("           "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 如果 value 包含了空白符，那么就必须使用引号包围起来。")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("variable")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"value"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("readonly")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("variable")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"value"')]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 使用 readonly 命令可以将变量定义为只读变量，只读变量的值不能被改变")]),t._v("\n")])])]),a("p",[t._v("Shell 也支持将命令的执行结果赋值给变量，常见的有以下两种方式：")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("variable")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token variable"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("`")]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("command")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("`")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("variable")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token variable"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$(")]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("command")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v(")")])]),t._v("\n")])])]),a("h3",{attrs:{id:"使用变量"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用变量"}},[t._v("$")]),t._v(" 使用变量")]),t._v(" "),a("p",[t._v("使用一个定义过的变量，只要在变量名前面加美元符号$即可，如：")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("variable")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"value"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$variable")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${variable}")]),t._v("       "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 加花括号是为了帮助解释器识别变量的边界，推荐给所有变量加上花括号{}")]),t._v("\n")])])]),a("h3",{attrs:{id:"删除变量"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#删除变量"}},[t._v("$")]),t._v(" 删除变量")]),t._v(" "),a("p",[t._v("使用 unset 命令可以删除变量，unset 命令不能删除只读变量，变量被删除后不能再次使用：")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("unset")]),t._v(" variable_name\n")])])]),a("h3",{attrs:{id:"内置变量"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#内置变量"}},[t._v("$")]),t._v(" 内置变量")]),t._v(" "),a("p",[t._v("// TODO")]),t._v(" "),a("h3",{attrs:{id:"参数替换"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#参数替换"}},[t._v("$")]),t._v(" 参数替换")]),t._v(" "),a("p",[t._v("两种形式的区别是：")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("一般形式下区分未声明变量和值为空字符串的变量")])]),t._v(" "),a("li",[a("p",[t._v("非空形式下不区分未声明变量和值为空字符串的变量，即当变量值为空字符串时视为变量未声明。")])])]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("一般形式")]),t._v(" "),a("th",[t._v("非空形式")]),t._v(" "),a("th",[t._v("说明（括号内非空形式）")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("${parameter}")]),t._v(" "),a("td"),t._v(" "),a("td",[t._v("即变量parameter的值")])]),t._v(" "),a("tr",[a("td",[t._v("${parameter-default}")]),t._v(" "),a("td",[t._v("${parameter:-default}")]),t._v(" "),a("td",[t._v("如果parameter未声明（或值为空）返回default值")])]),t._v(" "),a("tr",[a("td",[t._v("${parameter=default}")]),t._v(" "),a("td",[t._v("${parameter:=default}")]),t._v(" "),a("td",[t._v("如果parameter未声明（或值为空）则parameter值设置为default并返回")])]),t._v(" "),a("tr",[a("td",[t._v("${parameter+alt_value}")]),t._v(" "),a("td",[t._v("${parameter:+alt_value}")]),t._v(" "),a("td",[t._v("如果parameter未声明（或值为空）则返回空字符串；否则修改为alt_value并返回")])]),t._v(" "),a("tr",[a("td",[t._v("${parameter?err_msg}")]),t._v(" "),a("td",[t._v("${parameter:?err_msg}")]),t._v(" "),a("td",[t._v("如果parameter未声明（或值为空）则打印err_msg并返回退出码1")])]),t._v(" "),a("tr",[a("td",[t._v("${#var}")]),t._v(" "),a("td"),t._v(" "),a("td",[t._v("变量var字符串长度；如果var为数组则返回数组中第一个元素的长度")])]),t._v(" "),a("tr",[a("td",[t._v("${#array[*]} and ${#array[@]}")]),t._v(" "),a("td"),t._v(" "),a("td",[t._v("返回数组长度")])]),t._v(" "),a("tr",[a("td",[t._v("${var#Pattern}")]),t._v(" "),a("td"),t._v(" "),a("td",[t._v("从变量var的最前端（左端）去掉最短匹配Pattern的部分")])]),t._v(" "),a("tr",[a("td",[t._v("${var##Pattern}")]),t._v(" "),a("td"),t._v(" "),a("td",[t._v("从变量var的最前端（左端）去掉最长匹配Pattern的部分")])]),t._v(" "),a("tr",[a("td",[t._v("${var%Pattern}")]),t._v(" "),a("td"),t._v(" "),a("td",[t._v("从变量var的最后端（右端）去掉最短匹配Pattern的部分")])]),t._v(" "),a("tr",[a("td",[t._v("${var%%Pattern}")]),t._v(" "),a("td"),t._v(" "),a("td",[t._v("从变量var的最后端（右端）去掉最长匹配Pattern的部分")])]),t._v(" "),a("tr",[a("td",[t._v("${var:pos}")]),t._v(" "),a("td"),t._v(" "),a("td",[t._v("从pos位置处截取到结尾")])]),t._v(" "),a("tr",[a("td",[t._v("${var:pos:len}")]),t._v(" "),a("td"),t._v(" "),a("td",[t._v("从pos位置处截取len长度的子串")])]),t._v(" "),a("tr",[a("td",[t._v("${var/Pattern/Replacement}")]),t._v(" "),a("td"),t._v(" "),a("td",[t._v("将var中第一次匹配Pattern的部分替换成Replacement，如果Replacement为空，则相当于删除")])]),t._v(" "),a("tr",[a("td",[t._v("${var//Pattern/Replacement}")]),t._v(" "),a("td"),t._v(" "),a("td",[t._v("将var中所有匹配Pattern的部分替换成Replacement，如果Replacement为空，则相当于删除")])]),t._v(" "),a("tr",[a("td",[t._v("${var/#Pattern/Replacement}")]),t._v(" "),a("td"),t._v(" "),a("td",[t._v("如果var的前缀匹配Pattern则替换为Replacement")])]),t._v(" "),a("tr",[a("td",[t._v("${var/%Pattern/Replacement}")]),t._v(" "),a("td"),t._v(" "),a("td",[t._v("如果var的后缀匹配Pattern则替换为Replacement")])]),t._v(" "),a("tr",[a("td",[t._v("${!varprefix*}, ${!varprefix@}")]),t._v(" "),a("td"),t._v(" "),a("td",[t._v("匹配所有以varprefix开头的已声明变量")])])])]),t._v(" "),a("p",[t._v("参考：https://tldp.org/LDP/abs/html/parameter-substitution.html")]),t._v(" "),a("h2",{attrs:{id:"字符串"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#字符串"}},[t._v("$")]),t._v(" 字符串")]),t._v(" "),a("p",[t._v("单引号字符串的限制：")]),t._v(" "),a("ul",[a("li",[t._v("单引号里的任何字符都会原样输出，单引号字符串中的变量是无效的；")]),t._v(" "),a("li",[t._v("单引号字串中不能出现单独一个的单引号（对单引号使用转义符后也不行），但可成对出现，作为字符串拼接使用。")])]),t._v(" "),a("p",[t._v("双引号的优点：")]),t._v(" "),a("ul",[a("li",[t._v("双引号里可以有变量")]),t._v(" "),a("li",[t._v("双引号里可以出现转义字符")])]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("your_name")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"runoob"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 使用双引号拼接")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("greeting")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hello, "')]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$your_name")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('" !"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("greeting_1")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hello, '),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${your_name}")]),t._v(' !"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$greeting")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$greeting_1")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 使用单引号拼接")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("greeting_2")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'hello, '")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$your_name")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("' !'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("greeting_3")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'hello, ${your_name} !'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$greeting_2")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$greeting_3")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#获取字符串长度")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("string")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"abcd"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("#")]),t._v("string}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#输出 4")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#提取子字符串")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("string")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"runoob is a great site"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${string"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("1"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("4}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 输出 unoo")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#查找子字符串")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("string")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"runoob is a great site"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("`")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("expr")]),t._v(" index "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"'),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$string")]),t._v('"')]),t._v(" io"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("`")])]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 输出 4")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#判断字符串为空的正确方法,注意双引号")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-z")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"'),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$STRING")]),t._v('"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("then")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"STRING is empty"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("fi")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#或")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-n")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"'),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$STRING")]),t._v('"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("then")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"STRING is not empty"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("fi")]),t._v("\n")])])]),a("blockquote",[a("p",[t._v("注意：判断字符串为空的正确方法需要加双引号。")])]),t._v(" "),a("h2",{attrs:{id:"数组"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数组"}},[t._v("$")]),t._v(" 数组")]),t._v(" "),a("h3",{attrs:{id:"定义数组"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#定义数组"}},[t._v("$")]),t._v(" 定义数组")]),t._v(" "),a("p",[t._v("bash只支持一维数组，但参数个数没有限制。定义数组有以下方式：")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("使用"),a("code",[t._v("declare -a")]),t._v("定义数组：")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("declare")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-a")]),t._v(" array\n")])])])]),t._v(" "),a("li",[a("p",[t._v("使用[]操作符：")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("array"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'foo'")]),t._v("\narray"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'bar'")]),t._v("\n")])])])]),t._v(" "),a("li",[a("p",[t._v("使用()直接赋值：")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("array")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'foo'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'bar'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 或")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("array")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'bar'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'bar'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])]),t._v(" "),a("li",[a("p",[t._v("连接两个数组：")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("array3")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${array"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("@"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${array2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("@"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("#")]),t._v("array3"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("@"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("}")]),t._v("\n")])])])]),t._v(" "),a("li",[a("p",[t._v("从文件中读取数组：")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 将每一行读取为数组的一个元素")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("array")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token variable"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("`")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("cat")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'array.txt'")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("`")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" \n")])])])])]),t._v(" "),a("h3",{attrs:{id:"读取数组"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#读取数组"}},[t._v("$")]),t._v(" 读取数组")]),t._v(" "),a("p",[t._v("使用[]操作符和基于0的下标来取值：")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("array")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'foo'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'bar'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${array"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("}")]),t._v("                     "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 数组第n个元素")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${array"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("*"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("}")]),t._v(" 或"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${array"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("@"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("}")]),t._v("       "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 数组所有成员，使用“@”这个特殊的下标，可以将数组扩展成列表")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("array"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("*"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("}")]),t._v(" 或"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("array"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("@"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("}")]),t._v("     "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 数组所有下标")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("#")]),t._v("array"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("*"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("}")]),t._v(" 或"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("#")]),t._v("array"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("@"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("}")]),t._v("     "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 数组元素个数，没有定义的数组下标不会占用数组中元素的个数")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("#")]),t._v("array"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("0"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("}")]),t._v("                    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 数组第一个成员的长度")]),t._v("\n")])])]),a("h3",{attrs:{id:"遍历数组元素"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#遍历数组元素"}},[t._v("$")]),t._v(" 遍历数组元素")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 使用for in循环读取数组：")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token for-or-select variable"}},[t._v("item")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${array"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("@"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("do")]),t._v("\n "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$item")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("done")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 使用for循环读取数组：")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("len")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("#")]),t._v("adobe"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("@"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("((")]),t._v("i"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("i"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("$len"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("i"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("))")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("do")]),t._v("\n "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${adobe"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("$i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("do")]),t._v("\n")])])]),a("h3",{attrs:{id:"修改数组"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#修改数组"}},[t._v("$")]),t._v(" 修改数组")]),t._v(" "),a("p",[t._v("替换数组元素：")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("array")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'foo'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'bar'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 使用模式操作符替换数组中的元素")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${array"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("@"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("foo"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("foo2}")]),t._v("\n")])])]),a("p",[t._v("删除数组元素：")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("array")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'foo1'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'bar2'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'foo3'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'bar4'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'foo5'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 使用命令替换并重新赋值的方式删除数组元素")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("array")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${array"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("@"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("0"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("2}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${array\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("@"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("3}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 使用模式操作符删除数组元素")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("array")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${array"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("@"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("foo3"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("h3",{attrs:{id:"数组与循环示例"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数组与循环示例"}},[t._v("$")]),t._v(" 数组与循环示例")]),t._v(" "),a("p",[t._v("从标准输入读入n次字符串，每次输入的字符串保存在数组array里：")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("i")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("n")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"'),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$i")]),t._v('"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-lt")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$n")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("do")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Please input strings ... '),a("span",{pre:!0,attrs:{class:"token variable"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("`")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("expr")]),t._v(" $i + "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("`")])]),t._v('"')]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("read")]),t._v(" array"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$i")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"'),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${array"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("$i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("}")]),t._v('"')]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("i")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token variable"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("`")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("expr")]),t._v(" $i + "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("`")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("done")]),t._v("\n")])])]),a("p",[t._v("将字符串里的字母逐个放入数组，并输出到标准输出：")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("chars")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'abcdefghijklmnopqrstuvwxyz'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("((")]),t._v(" i"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("26")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("))")])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("do")]),t._v("\n    array"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$i")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${chars"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("$i"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("1}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${array"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("$i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("done")]),t._v("\n")])])]),a("p",[t._v("将文件中内容给数组赋值：(碰到第一个回车符之前的内容)，然后查看数组赋值情况：")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("read")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-a")]),t._v(" Words "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" /tmp/tmp.file\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("set")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("grep")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Words"')]),t._v("\n")])])]),a("h3",{attrs:{id:"关联数组"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#关联数组"}},[t._v("$")]),t._v(" 关联数组")]),t._v(" "),a("p",[t._v("由于shell的的数组只支持一维数组,并且并没有map这种数据结构也。我们使用关联数组来模拟map的效果：")]),t._v(" "),a("p",[t._v("定义一个map：")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("declare")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-A")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("map")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("（）\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("declare")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-A")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("map")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"100"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"1"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"200"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"2"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("输出所有key：")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("map"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("@"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("}")]),t._v("\n")])])]),a("p",[t._v("输出所有value：")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${map"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("@"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("}")]),t._v("\n")])])]),a("p",[t._v("添加值：")]),t._v(" "),a("div",{staticClass:"language-go extra-class"},[a("pre",{pre:!0,attrs:{class:"language-go"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("map")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"300"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"3"')]),t._v("\n")])])]),a("p",[t._v("输出key对应的值：")]),t._v(" "),a("div",{staticClass:"language-ruby extra-class"},[a("pre",{pre:!0,attrs:{class:"language-ruby"}},[a("code",[t._v("echo $"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("map"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string-literal"}},[a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"100"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("遍历map：")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token for-or-select variable"}},[t._v("key")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("map"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("@"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("do")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${map"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("$key"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("done")]),t._v("\n")])])]),a("h3",{attrs:{id:"参考"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#参考"}},[t._v("$")]),t._v(" 参考")]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://www.jb51.net/article/101241.htm",target:"_blank",rel:"noopener noreferrer"}},[t._v("Bash中数组的操作教程"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://blog.csdn.net/ilovemilk/article/details/4959747",target:"_blank",rel:"noopener noreferrer"}},[t._v("bash数组定义"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"http://c.biancheng.net/cpp/shell/",target:"_blank",rel:"noopener noreferrer"}},[t._v("30分钟玩转Shell脚本编程"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://blog.csdn.net/samxx8/article/details/8025548",target:"_blank",rel:"noopener noreferrer"}},[t._v("BASH数组用法小结及循环用法"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://blog.csdn.net/xzw_123/article/details/42920371",target:"_blank",rel:"noopener noreferrer"}},[t._v("shell中map的使用和遍历"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://blog.csdn.net/uestcyms/article/details/97511768",target:"_blank",rel:"noopener noreferrer"}},[t._v('shell 数组(含"map")操作总结'),a("OutboundLink")],1)])]),t._v(" "),a("h2",{attrs:{id:"注释"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#注释"}},[t._v("$")]),t._v(" 注释")]),t._v(" "),a("p",[t._v("多行注释还可以使用以下格式：")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v(":"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("EOF\n注释内容...\n注释内容...\n注释内容...\nEOF")]),t._v("\n")])])]),a("p",[t._v("EOF 也可以使用其他符号:")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v(":"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'\n注释内容...\n注释内容...\n注释内容...\n'")]),t._v("\n")])])]),a("h2",{attrs:{id:"传递参数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#传递参数"}},[t._v("$")]),t._v(" 传递参数")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("参数处理")]),t._v(" "),a("th",[t._v("说明")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("$0")]),t._v(" "),a("td",[t._v("脚本名称")])]),t._v(" "),a("tr",[a("td",[t._v("$n")]),t._v(" "),a("td",[t._v("传给脚本/函数的第n个参数(第10+个参数要使用花括号：${10})")])]),t._v(" "),a("tr",[a("td",[t._v("$*")]),t._v(" "),a("td",[t._v('以一个单字符串显示所有向脚本传递的参数。 如"$*"用用双引号括起来的情况、以"$1 $2 … $n"的形式输出所有参数（传递了一个参数）。')])]),t._v(" "),a("tr",[a("td",[t._v("$@")]),t._v(" "),a("td",[t._v('与$*相同，但是使用时加引号，并在引号中返回每个参数。 如"$@"用双引号括起来的情况、以"$1" "$2" … "$n" 的形式输出所有参数（传递了N个参数）。')])]),t._v(" "),a("tr",[a("td",[t._v("$#")]),t._v(" "),a("td",[t._v("传递到脚本的参数个数")])]),t._v(" "),a("tr",[a("td",[t._v("$-")]),t._v(" "),a("td",[t._v("显示Shell使用的当前选项，与set命令功能相同。")])]),t._v(" "),a("tr",[a("td",[t._v("$!")]),t._v(" "),a("td",[t._v("后台运行的最后一个进程的ID号")])]),t._v(" "),a("tr",[a("td",[t._v("$?")]),t._v(" "),a("td",[t._v("显示最后命令的退出状态。0表示没有错误，其他任何值表明有错误。")])]),t._v(" "),a("tr",[a("td",[t._v("$$")]),t._v(" "),a("td",[t._v("脚本运行的当前进程ID号")])])])]),t._v(" "),a("h2",{attrs:{id:"运算符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#运算符"}},[t._v("$")]),t._v(" 运算符")]),t._v(" "),a("p",[t._v("Shell 和其他编程语言一样，支持多种运算符，包括：")]),t._v(" "),a("ul",[a("li",[t._v("算数运算符")]),t._v(" "),a("li",[t._v("关系运算符")]),t._v(" "),a("li",[t._v("布尔运算符")]),t._v(" "),a("li",[t._v("字符串运算符")]),t._v(" "),a("li",[t._v("文件测试运算符")])]),t._v(" "),a("h3",{attrs:{id:"算术运算符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#算术运算符"}},[t._v("$")]),t._v(" 算术运算符")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("运算符")]),t._v(" "),a("th",[t._v("举例")]),t._v(" "),a("th",[t._v("说明")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("+")]),t._v(" "),a("td",[a("code",[t._v("expr $a + $b")]),t._v(" 结果为 30。")]),t._v(" "),a("td",[t._v("加法")])]),t._v(" "),a("tr",[a("td",[t._v("-")]),t._v(" "),a("td",[a("code",[t._v("expr $a - $b")]),t._v(" 结果为 -10。")]),t._v(" "),a("td",[t._v("减法")])]),t._v(" "),a("tr",[a("td",[t._v("*")]),t._v(" "),a("td",[a("code",[t._v("expr $a \\* $b")]),t._v(" 结果为  200。")]),t._v(" "),a("td",[t._v("乘法")])]),t._v(" "),a("tr",[a("td",[t._v("/")]),t._v(" "),a("td",[a("code",[t._v("expr $b / $a")]),t._v(" 结果为 2。")]),t._v(" "),a("td",[t._v("除法")])]),t._v(" "),a("tr",[a("td",[t._v("%")]),t._v(" "),a("td",[a("code",[t._v("expr $b % $a")]),t._v(" 结果为 0。")]),t._v(" "),a("td",[t._v("取余")])]),t._v(" "),a("tr",[a("td",[t._v("=")]),t._v(" "),a("td",[t._v("a=$b 将把变量 b 的值赋给 a。")]),t._v(" "),a("td",[t._v("赋值")])]),t._v(" "),a("tr",[a("td",[t._v("==")]),t._v(" "),a("td",[t._v("[ $a == $b ] 返回 false。")]),t._v(" "),a("td",[t._v("相等。用于比较两个数字，相同则返回 true。")])]),t._v(" "),a("tr",[a("td",[t._v("!=")]),t._v(" "),a("td",[t._v("[ $a != $b ] 返回 true。")]),t._v(" "),a("td",[t._v("不相等。用于比较两个数字，不相同则返回 true。")])])])]),t._v(" "),a("ul",[a("li",[t._v("乘号(*)前边必须加反斜杠()才能实现乘法运算；")]),t._v(" "),a("li",[t._v("条件表达式要放在方括号之间，并且要有空格，例如: "),a("strong",[t._v("[$a==$b]")]),t._v(" 是错误的，必须写成 "),a("strong",[t._v("[ $a == $b ]")]),t._v("。")])]),t._v(" "),a("h3",{attrs:{id:"关系运算符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#关系运算符"}},[t._v("$")]),t._v(" 关系运算符")]),t._v(" "),a("p",[t._v("关系运算符只支持数字，不支持字符串，除非字符串的值是数字。")]),t._v(" "),a("p",[t._v("下表列出了常用的关系运算符，假定变量 a 为 10，变量 b 为 20：")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("运算符")]),t._v(" "),a("th",[t._v("举例")]),t._v(" "),a("th",[t._v("说明")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("-eq")]),t._v(" "),a("td",[t._v("[ $a -eq $b ] 返回 false")]),t._v(" "),a("td",[t._v("检测两个数是否相等，相等返回 true。")])]),t._v(" "),a("tr",[a("td",[t._v("-ne")]),t._v(" "),a("td",[t._v("[ $a -ne $b ] 返回 true")]),t._v(" "),a("td",[t._v("检测两个数是否不相等，不相等返回 true。")])]),t._v(" "),a("tr",[a("td",[t._v("-gt")]),t._v(" "),a("td",[t._v("[ $a -gt $b ] 返回 false")]),t._v(" "),a("td",[t._v("检测左边的数是否大于右边的，如果是，则返回 true。")])]),t._v(" "),a("tr",[a("td",[t._v("-lt")]),t._v(" "),a("td",[t._v("[ $a -lt $b ] 返回 true")]),t._v(" "),a("td",[t._v("检测左边的数是否小于右边的，如果是，则返回 true。")])]),t._v(" "),a("tr",[a("td",[t._v("-ge")]),t._v(" "),a("td",[t._v("[ $a -ge $b ] 返回 false")]),t._v(" "),a("td",[t._v("检测左边的数是否大于等于右边的，如果是，则返回 true。")])]),t._v(" "),a("tr",[a("td",[t._v("-le")]),t._v(" "),a("td",[t._v("[ $a -le $b ] 返回 true")]),t._v(" "),a("td",[t._v("检测左边的数是否小于等于右边的，如果是，则返回 true。")])])])]),t._v(" "),a("h3",{attrs:{id:"布尔运算符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#布尔运算符"}},[t._v("$")]),t._v(" 布尔运算符")]),t._v(" "),a("p",[t._v("下表列出了常用的布尔运算符，假定变量 a 为 10，变量 b 为 20：")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("运算符")]),t._v(" "),a("th",[t._v("举例")]),t._v(" "),a("th",[t._v("说明")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("!")]),t._v(" "),a("td",[t._v("[ ! false ] 返回 true。")]),t._v(" "),a("td",[t._v("非运算，表达式为 true 则返回 false，否则返回 true。")])]),t._v(" "),a("tr",[a("td",[t._v("-o")]),t._v(" "),a("td",[t._v("[ $a -lt 20 -o $b -gt 100 ] 返回 true。")]),t._v(" "),a("td",[t._v("或运算，有一个表达式为 true 则返回 true。")])]),t._v(" "),a("tr",[a("td",[t._v("-a")]),t._v(" "),a("td",[t._v("[ $a -lt 20 -a $b -gt 100 ] 返回 false。")]),t._v(" "),a("td",[t._v("与运算，两个表达式都为 true 才返回 true。")])])])]),t._v(" "),a("h3",{attrs:{id:"逻辑运算符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#逻辑运算符"}},[t._v("$")]),t._v(" 逻辑运算符")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("运算符")]),t._v(" "),a("th",[t._v("说明")]),t._v(" "),a("th",[t._v("举例")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("&&")]),t._v(" "),a("td",[t._v("逻辑的 AND")]),t._v(" "),a("td",[t._v("[[ $a -lt 100 && $b -gt 100 ]] 返回 false")])]),t._v(" "),a("tr",[a("td",[t._v("||")]),t._v(" "),a("td",[t._v("逻辑的 OR")]),t._v(" "),a("td",[t._v("[[ $a -lt 100 || $b -gt 100 ]] 返回 true")])])])]),t._v(" "),a("p",[t._v("可以用逻辑运算符模拟三目运算符：")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" command1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("then")]),t._v("\n    command2\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v("\n    command3\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("fi")]),t._v("\n")])])]),a("p",[t._v("等价于：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("command1 && command2 || command3\n")])])]),a("h3",{attrs:{id:"字符串运算符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#字符串运算符"}},[t._v("$")]),t._v(" 字符串运算符")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("运算符")]),t._v(" "),a("th",[t._v("举例")]),t._v(" "),a("th",[t._v("说明")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("=")]),t._v(" "),a("td",[t._v("[ $a = $b ] 返回 false。")]),t._v(" "),a("td",[t._v("检测两个字符串是否相等，相等返回 true。")])]),t._v(" "),a("tr",[a("td",[t._v("!=")]),t._v(" "),a("td",[t._v("[ $a != $b ] 返回 true。")]),t._v(" "),a("td",[t._v("检测两个字符串是否相等，不相等返回 true。")])]),t._v(" "),a("tr",[a("td",[t._v("-z")]),t._v(" "),a("td",[t._v('[ -z "$a" ] 返回 false。')]),t._v(" "),a("td",[t._v("检测字符串长度是否为0，为0返回 true。")])]),t._v(" "),a("tr",[a("td",[t._v("-n")]),t._v(" "),a("td",[t._v('[ -n "$a" ] 返回 true。')]),t._v(" "),a("td",[t._v("检测字符串长度是否为0，不为0返回 true。")])]),t._v(" "),a("tr",[a("td",[t._v("str")]),t._v(" "),a("td",[t._v("[ $a ] 返回 true。")]),t._v(" "),a("td",[t._v("检测字符串是否为空，不为空返回 true。")])])])]),t._v(" "),a("h3",{attrs:{id:"文件测试运算符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#文件测试运算符"}},[t._v("$")]),t._v(" 文件测试运算符")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("操作符")]),t._v(" "),a("th",[t._v("举例")]),t._v(" "),a("th",[t._v("说明")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("-b file")]),t._v(" "),a("td",[t._v("[ -b $file ] 返回 false")]),t._v(" "),a("td",[t._v("检测文件是否是块设备文件，如果是，则返回 true。")])]),t._v(" "),a("tr",[a("td",[t._v("-c file")]),t._v(" "),a("td",[t._v("[ -c $file ] 返回 false。")]),t._v(" "),a("td",[t._v("检测文件是否是字符设备文件，如果是，则返回 true。")])]),t._v(" "),a("tr",[a("td",[t._v("-d file")]),t._v(" "),a("td",[t._v("[ -d $file ] 返回 false。")]),t._v(" "),a("td",[t._v("检测文件是否是目录，如果是，则返回 true。")])]),t._v(" "),a("tr",[a("td",[t._v("-f file")]),t._v(" "),a("td",[t._v("[ -f $file ] 返回 true。")]),t._v(" "),a("td",[t._v("检测文件是否是普通文件（既不是目录，也不是设备文件），"),a("br"),t._v("如果是，则返回 true。")])]),t._v(" "),a("tr",[a("td",[t._v("-g file")]),t._v(" "),a("td",[t._v("[ -g $file ] 返回 false。")]),t._v(" "),a("td",[t._v("检测文件是否设置了 SGID 位，如果是，则返回 true。")])]),t._v(" "),a("tr",[a("td",[t._v("-k file")]),t._v(" "),a("td",[t._v("[ -k $file ] 返回 false。")]),t._v(" "),a("td",[t._v("检测文件是否设置了粘着位(Sticky Bit)，如果是，则返回 true。")])]),t._v(" "),a("tr",[a("td",[t._v("-p file")]),t._v(" "),a("td",[t._v("[ -p $file ] 返回 false。")]),t._v(" "),a("td",[t._v("检测文件是否是有名管道，如果是，则返回 true。")])]),t._v(" "),a("tr",[a("td",[t._v("-u file")]),t._v(" "),a("td",[t._v("[ -u $file ] 返回 false。")]),t._v(" "),a("td",[t._v("检测文件是否设置了 SUID 位，如果是，则返回 true。")])]),t._v(" "),a("tr",[a("td",[t._v("-r file")]),t._v(" "),a("td",[t._v("[ -r $file ] 返回 true。")]),t._v(" "),a("td",[t._v("检测文件是否可读，如果是，则返回 true。")])]),t._v(" "),a("tr",[a("td",[t._v("-w file")]),t._v(" "),a("td",[t._v("[ -w $file ] 返回 true。")]),t._v(" "),a("td",[t._v("检测文件是否可写，如果是，则返回 true。")])]),t._v(" "),a("tr",[a("td",[t._v("-x file")]),t._v(" "),a("td",[t._v("[ -x $file ] 返回 true。")]),t._v(" "),a("td",[t._v("检测文件是否可执行，如果是，则返回 true。")])]),t._v(" "),a("tr",[a("td",[t._v("-s file")]),t._v(" "),a("td",[t._v("[ -s $file ] 返回 true。")]),t._v(" "),a("td",[t._v("检测文件是否为空（文件大小是否大于0），不为空返回 true。")])]),t._v(" "),a("tr",[a("td",[t._v("-e file")]),t._v(" "),a("td",[t._v("[ -e $file ] 返回 true。")]),t._v(" "),a("td",[t._v("检测文件（包括目录）是否存在，如果是，则返回 true。")])])])]),t._v(" "),a("p",[a("code",[t._v("test")]),t._v(" 和 "),a("code",[t._v("[")]),t._v(" 属于 Shell 的内建命令，所以需要跟它的参数使用空格隔开，然后 ] 作为最后一个参数表示条件结束，"),a("code",[t._v("[[")]),t._v(" 属于 Shell 的保留关键字:")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("$ "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("type")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"test"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"["')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"[["')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("test")]),t._v(" is a shell "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("builtin")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" is a shell "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("builtin")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" is a reserved word\n")])])]),a("blockquote",[a("p",[a("a",{attrs:{href:"http://www.runoob.com/w3cnote/linux-shell-brackets-features.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("shell 中各种括号的作用"),a("OutboundLink")],1)])]),t._v(" "),a("h2",{attrs:{id:"符号命令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#符号命令"}},[t._v("$")]),t._v(" 符号命令")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("符号")]),t._v(" "),a("th",[t._v("命令")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("()")]),t._v(" "),a("td",[t._v("子shell")])]),t._v(" "),a("tr",[a("td",[t._v("$()")]),t._v(" "),a("td",[t._v("替换命令")])]),t._v(" "),a("tr",[a("td",[t._v("$(())")]),t._v(" "),a("td",[t._v("算术扩展式")])]),t._v(" "),a("tr",[a("td",[t._v("(())")]),t._v(" "),a("td",[t._v("计算算术表达式，let的同义词(当被括起来的值中包含等号时使用)")])]),t._v(" "),a("tr",[a("td",[t._v("[]")]),t._v(" "),a("td",[t._v("test命令")])]),t._v(" "),a("tr",[a("td",[t._v("[[]]")]),t._v(" "),a("td",[t._v("条件表达式，类似于[]，但添加了字符串比较")])])])]),t._v(" "),a("p",[t._v("参考：")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://blog.csdn.net/yumushui/article/details/53469845",target:"_blank",rel:"noopener noreferrer"}},[t._v("shell脚本中整数型变量自增（加1）的实现方式"),a("OutboundLink")],1)]),t._v(" "),a("p",[a("a",{attrs:{href:"https://stackoverflow.com/questions/3985193/what-is-bin-sh-c",target:"_blank",rel:"noopener noreferrer"}},[t._v("What is /bin/sh -c?"),a("OutboundLink")],1)]),t._v(" "),a("h2",{attrs:{id:"管道"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#管道"}},[t._v("$")]),t._v(" 管道")]),t._v(" "),a("h3",{attrs:{id:"管道与退出状态码"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#管道与退出状态码"}},[t._v("$")]),t._v(" 管道与退出状态码")]),t._v(" "),a("p",[t._v("对于非管道命令使用 $? 能够检查前一个命令的退出状态；对于管道命令也有 PIPESTATUS 变量允许检查从管道所有部分返回的代码。")]),t._v(" "),a("p",[t._v("对于管道：")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("cmd1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" cmd2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" cmd3\n")])])]),a("p",[t._v("cmd1 退出代码在 "),a("code",[t._v("${PIPESTATUS[0]}")]),t._v(" 中，cmd3 退出代码在 "),a("code",[t._v("${PIPESTATUS[2]}")]),t._v(" 中，因此 "),a("code",[t._v("$?")]),t._v(" 总是与 "),a("code",[t._v("${PIPESTATUS: -1}")]),t._v(" 相同。")]),t._v(" "),a("p",[t._v("参考："),a("a",{attrs:{href:"https://www.qiansw.com/bash-shell-gets-the-exit-status-code-before-the-pipe.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("bash shell 获取管道前的退出状态码"),a("OutboundLink")],1)]),t._v(" "),a("h3",{attrs:{id:"管道与循环"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#管道与循环"}},[t._v("$")]),t._v(" 管道与循环")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("producer-command "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("read")]),t._v(" line\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("do")]),t._v("\n\tconsumer-command\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("done")]),t._v("\n")])])]),a("h2",{attrs:{id:"todo"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#todo"}},[t._v("$")]),t._v(" TODO")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("Shell替换：Shell变量替换，命令替换，转义字符\n数据类型\n流程控制\nif\nswitch\nwhile\nfor\n函数\n操作符\n模式操作符\nread和数组\n")])])])])}),[],!1,null,null,null);a.default=r.exports}}]);