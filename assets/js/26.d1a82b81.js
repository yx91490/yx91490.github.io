(window.webpackJsonp=window.webpackJsonp||[]).push([[26],{332:function(t,a,e){t.exports=e.p+"assets/img/image-20231008231411236.1834c107.png"},333:function(t,a,e){t.exports=e.p+"assets/img/image-20231008231755739.beb2d1fd.png"},492:function(t,a,e){"use strict";e.r(a);var s=e(18),_=Object(s.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"impala开发笔记"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#impala开发笔记"}},[t._v("$")]),t._v(" Impala开发笔记")]),t._v(" "),a("h2",{attrs:{id:"编译构建"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#编译构建"}},[t._v("$")]),t._v(" 编译构建")]),t._v(" "),a("h3",{attrs:{id:"先决条件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#先决条件"}},[t._v("$")]),t._v(" 先决条件")]),t._v(" "),a("p",[t._v("硬件要求：")]),t._v(" "),a("ul",[a("li",[t._v("CPU 必须至少支持 SSSE3")]),t._v(" "),a("li",[t._v("最小内存：16GB")]),t._v(" "),a("li",[t._v("硬盘空间：120GB（用于测试数据）")])]),t._v(" "),a("p",[t._v("支持的操作系统包括：")]),t._v(" "),a("ul",[a("li",[t._v("Ubuntu 14.04, 16.04, 18.04")]),t._v(" "),a("li",[t._v("CentOS 7")])]),t._v(" "),a("h3",{attrs:{id:"全量构建"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#全量构建"}},[t._v("$")]),t._v(" 全量构建")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# cd ~/Impala")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("bash")]),t._v(" bin/bootstrap_system.sh\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("source")]),t._v(" bin/impala-config.sh\nbuildall.sh "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-release")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-notests")]),t._v("\n")])])]),a("ul",[a("li",[t._v("如果要跳过构建BE测试，将 "),a("code",[t._v("-notests")]),t._v(" 传递给 buildall.sh 命令")]),t._v(" "),a("li",[t._v("如果不需要完全清理，则将 "),a("code",[t._v("-noclean")]),t._v(" 传递给 buildall.sh 命令")])]),t._v(" "),a("h4",{attrs:{id:"参考"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#参考"}},[t._v("$")]),t._v(" 参考")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://cwiki.apache.org/confluence/display/IMPALA/Building+Impala",target:"_blank",rel:"noopener noreferrer"}},[t._v("Building Impala"),a("OutboundLink")],1)]),t._v(" "),a("h3",{attrs:{id:"增量构建"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#增量构建"}},[t._v("$")]),t._v(" 增量构建")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 重新生成cmake文件")]),t._v("\n./buildall.sh "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-cmake_only")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 重新构建impalad二进制文件")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("make")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-j")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${IMPALA_BUILD_THREADS}")]),t._v(" impalad\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 重新构建java侧的fe")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("make")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-j")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${IMPALA_BUILD_THREADS}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("java")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 仅重新构建一个BE测试二进制")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("make")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-j")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${IMPALA_BUILD_THREADS}")]),t._v(" buffered-block-mgr-test\n \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 仅重新构建 FE")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("make")]),t._v(" fe\n")])])]),a("p",[t._v("可以使用ninja加速增量构建：")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 安装 ninja")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("apt-get")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" ninja-build\n \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 代替命令 ./buildall.sh ...:")]),t._v("\n./buildall.sh "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(". "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-ninja")]),t._v("\n \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 代替命令  make -j ${IMPALA_BUILD_THREADS} <targets>:")]),t._v("\nninja "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-j")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${IMPALA_BUILD_THREADS}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("targets"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 使用alias以指定ninja构建线程数")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("alias")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("ninja")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'ninja -j ${IMPALA_BUILD_THREADS}'")]),t._v("\n")])])]),a("p",[t._v("使用distcc，参考：https://github.com/apache/impala/blob/4.0.0/bin/distcc/README.md")]),t._v(" "),a("p",[t._v("跳过检查toolchain依赖项：")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"export SKIP_TOOLCHAIN_BOOTSTRAP=true"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),t._v(" bin/impala-config-local.sh\n")])])]),a("h4",{attrs:{id:"参考-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#参考-2"}},[t._v("$")]),t._v(" 参考")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://cwiki.apache.org/confluence/display/IMPALA/Tips+for+Faster+Impala+Builds",target:"_blank",rel:"noopener noreferrer"}},[t._v("Tips for Faster Impala Builds"),a("OutboundLink")],1)]),t._v(" "),a("h3",{attrs:{id:"国内镜像加速"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#国内镜像加速"}},[t._v("$")]),t._v(" 国内镜像加速")]),t._v(" "),a("p",[t._v("编译Impala源码的时候会下载大量的依赖包，由于大部分地址在国内的访问速度堪忧，给国内开发者增加了门槛。现提供一个非官方的镜像地址及相应配置方式，适用于Impala 4.0.0以上，仅供参考。")]),t._v(" "),a("p",[t._v("注：由于服务端限制单个文件不超过 500MB，需要对某些包做裁剪（软链接重复文件），裁剪情况如下：")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("版本")]),t._v(" "),a("th",[t._v("c++依赖包（ToolchainPackage）")]),t._v(" "),a("th",[t._v("cluster组件（CdpComponent）")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("4.0.0")]),t._v(" "),a("td",[t._v("裁剪了kudu")]),t._v(" "),a("td",[t._v("完整")])]),t._v(" "),a("tr",[a("td",[t._v("4.1.0")]),t._v(" "),a("td",[t._v("裁剪了kudu")]),t._v(" "),a("td",[t._v("裁剪ranger")])])])]),t._v(" "),a("p",[t._v("编译Impala时会下载的依赖主要包括4个部分：")]),t._v(" "),a("ol",[a("li",[t._v("预置的 maven jar包")]),t._v(" "),a("li",[t._v("python包")]),t._v(" "),a("li",[t._v("maven jar 包")]),t._v(" "),a("li",[t._v("toolchain包")])]),t._v(" "),a("p",[t._v("其中：")]),t._v(" "),a("p",[t._v("第 1 部分不是必须的，4.2.0以下可以在bootstrap_system.sh脚本中注释掉，参考："),a("a",{attrs:{href:"http://issues.apache.org/jira/browse/IMPALA-11439",target:"_blank",rel:"noopener noreferrer"}},[t._v("IMPALA-11439"),a("OutboundLink")],1),t._v("。4.2.0以上在初始化的时候通过环境变量跳过：")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 不下载预置maven包")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("export")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("PREPOPULATE_M2_REPOSITORY")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("false\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 初始化编译环境")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${IMPALA_HOME}")]),t._v("/bin/bootstrap_system.sh\n")])])]),a("p",[t._v("第 2 部分可以通过配置PYPI的国内镜像地址（4.1.0以下需要打个 patch："),a("a",{attrs:{href:"http://issues.apache.org/jira/browse/IMPALA-10994",target:"_blank",rel:"noopener noreferrer"}},[t._v("IMPALA-10994"),a("OutboundLink")],1),t._v("）来加速，如：")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("export")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("PYPI_MIRROR")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("https://pypi.tuna.tsinghua.edu.cn\n")])])]),a("p",[t._v("通过下面命令单独下载python包：")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${IMPALA_HOME}")]),t._v("/infra/python/deps/download_requirements\n")])])]),a("p",[t._v("第 3 部分：配置~/.m2/settings.xml如下（变量repoId，username，password请在“图解代码”公众号发送关键字“Impala镜像”获取）：")]),t._v(" "),a("div",{staticClass:"language-xml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-xml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token prolog"}},[t._v('<?xml version="1.0" encoding="UTF-8"?>')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("settings")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[a("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("xsi:")]),t._v("schemaLocation")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("http://maven.apache.org/SETTINGS/1.0.0 http://maven.apache.org/xsd/settings-1.0.0.xsd"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v("\n          "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("xmlns")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("http://maven.apache.org/SETTINGS/1.0.0"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v("\n          "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[a("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("xmlns:")]),t._v("xsi")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("http://www.w3.org/2001/XMLSchema-instance"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("servers")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("server")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("id")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("rdc-releases"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("id")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("username")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("${username}"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("username")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("password")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("${password}"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("password")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("server")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("servers")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("mirrors")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("mirror")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("id")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("aliyunmaven"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("id")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("mirrorOf")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("central"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("mirrorOf")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("url")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("https://maven.aliyun.com/repository/public"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("url")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("mirror")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("mirror")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("id")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("rdc-releases"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("id")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("mirrorOf")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("*,!central"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("mirrorOf")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("url")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("https://packages.aliyun.com/maven/repository/${repoId}"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("url")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("mirror")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("mirrors")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("settings")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),a("p",[t._v("之后再运行 mvn 命令的时候就能使用镜像地址进行加速了。")]),t._v(" "),a("p",[t._v("第 4 部分：写入~/.netrc文件（变量username，password的获取参考第 3 部分）：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("machine packages.aliyun.com login ${username} password ${password}\n")])])]),a("p",[t._v("运行以下命令下载 toolchain（变量repoId的获取参考第 3 部分）：")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 禁止重复下载python包")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("export")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("SKIP_PYTHON_DOWNLOAD")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("true\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 下载minicluster依赖的组件")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("export")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("DOWNLOAD_CDH_COMPONENTS")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("true\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 下载c++的依赖包")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("export")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("SKIP_TOOLCHAIN_BOOTSTRAP")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("false\n\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("export")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("IMPALA_TOOLCHAIN_HOST")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("packages.aliyun.com/maven/repository/"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${repoId}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("export")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("IMPALA_HADOOP_URL")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'https://${toolchain_host}/build/hadoop/${version}/hadoop-${version}.tar.gz'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("export")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("IMPALA_HBASE_URL")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'https://${toolchain_host}/build/hbase/${version}/hbase-${version}-bin.tar.gz'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("export")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("IMPALA_HIVE_URL")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'https://${toolchain_host}/build/apache-hive/${version}/apache-hive-${version}-bin.tar.gz'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("export")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("IMPALA_HIVE_SOURCE_URL")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'https://${toolchain_host}/build/hive/${version}/hive-${version}-source.tar.gz'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("export")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("IMPALA_RANGER_URL")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'https://${toolchain_host}/build/ranger/${version}/ranger-${version}-admin.tar.gz'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("export")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("IMPALA_TEZ_URL")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'https://${toolchain_host}/build/tez/${version}/tez-${version}-minimal.tar.gz'")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 执行下载动作")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${IMPALA_HOME}")]),t._v("/bin/bootstrap_toolchain.py\n")])])]),a("h3",{attrs:{id:"buildall-sh详细用法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#buildall-sh详细用法"}},[t._v("$")]),t._v(" buildall.sh详细用法")]),t._v(" "),a("p",[t._v("主要作用是编译代码，启动impala依赖的minicluster集群（包括HDFS，Hive，HBase，Kudu等），启动Impala集群（包括catalogd, statestored, impalad），加载测试元数据及数据，执行测试。")]),t._v(" "),a("p",[t._v("参数说明：")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("参数")]),t._v(" "),a("th",[t._v("内部变量")]),t._v(" "),a("th",[t._v("默认值")]),t._v(" "),a("th",[t._v("说明")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("-noclean")]),t._v(" "),a("td",[t._v("CLEAN_ACTION")]),t._v(" "),a("td",[t._v("False")]),t._v(" "),a("td",[t._v("不清理编译输出目录。")])]),t._v(" "),a("tr",[a("td",[t._v("-format")]),t._v(" "),a("td",[t._v("FORMAT_CLUSTER, "),a("br"),t._v("FORMAT_METASTORE,"),a("br"),t._v("FORMAT_RANGER_POLICY_DB")]),t._v(" "),a("td",[t._v("False")]),t._v(" "),a("td",[t._v("格式化 minicluster, metastore db, 和 ranger policy db")])]),t._v(" "),a("tr",[a("td",[t._v("-format_cluster")]),t._v(" "),a("td",[t._v("FORMAT_CLUSTER")]),t._v(" "),a("td",[t._v("False")]),t._v(" "),a("td",[t._v("格式化 minicluster")])]),t._v(" "),a("tr",[a("td",[t._v("-format_metastore")]),t._v(" "),a("td",[t._v("FORMAT_METASTORE")]),t._v(" "),a("td",[t._v("False")]),t._v(" "),a("td",[t._v("格式化 metastore db")])]),t._v(" "),a("tr",[a("td",[t._v("-format_ranger_policy_db")]),t._v(" "),a("td",[t._v("FORMAT_RANGER_POLICY_DB")]),t._v(" "),a("td",[t._v("False")]),t._v(" "),a("td",[t._v("格式化 Ranger policy db")])]),t._v(" "),a("tr",[a("td",[t._v("-upgrade_metastore_db")]),t._v(" "),a("td",[t._v("UPGRADE_METASTORE_SCHEMA")]),t._v(" "),a("td",[t._v("False")]),t._v(" "),a("td",[t._v("升级metastore db的schema")])]),t._v(" "),a("tr",[a("td",[t._v("-release_and_debug")]),t._v(" "),a("td",[t._v("BUILD_RELEASE_AND_DEBUG")]),t._v(" "),a("td",[t._v("false")]),t._v(" "),a("td",[t._v("同时构建 release 和 debug 二进制文件. 覆盖其他的构建类型")])]),t._v(" "),a("tr",[a("td",[t._v("-release")]),t._v(" "),a("td",[t._v("CMAKE_BUILD_TYPE")]),t._v(" "),a("td",[t._v("debug")]),t._v(" "),a("td",[t._v("构建Release")])]),t._v(" "),a("tr",[a("td",[t._v("-codecoverage")]),t._v(" "),a("td",[t._v("CODE_COVERAGE")]),t._v(" "),a("td",[t._v("False")]),t._v(" "),a("td",[t._v("Build with code coverage")])]),t._v(" "),a("tr",[a("td",[t._v("-asan")]),t._v(" "),a("td",[t._v("BUILD_ASAN")]),t._v(" "),a("td",[t._v("False")]),t._v(" "),a("td",[t._v("构建Address sanitizer")])]),t._v(" "),a("tr",[a("td",[t._v("-tidy")]),t._v(" "),a("td",[t._v("BUILD_TIDY")]),t._v(" "),a("td",[t._v("False")]),t._v(" "),a("td",[t._v("构建clang-tidy")])]),t._v(" "),a("tr",[a("td",[t._v("-tsan")]),t._v(" "),a("td",[t._v("BUILD_TSAN")]),t._v(" "),a("td",[t._v("False")]),t._v(" "),a("td",[t._v("构建Thread sanitizer, 和参数 ignore_noninstrumented_modules=1一起运行. 当此flag是 true, TSAN 忽略从 non-instrumented libraries的内存访问. 这降低了假阳性数量, 但会漏掉真正的问题. -full_tsan参数会禁用此 flag")])]),t._v(" "),a("tr",[a("td",[t._v("-full_tsan")]),t._v(" "),a("td",[t._v("BUILD_TSAN_FULL")]),t._v(" "),a("td",[t._v("False")]),t._v(" "),a("td",[t._v("构建Thread sanitizer, 和参数 ignore_noninstrumented_modules=0 一起运行(看-tsan 的描述阐述了这个flag做了什么)")])]),t._v(" "),a("tr",[a("td",[t._v("-ubsan")]),t._v(" "),a("td",[t._v("BUILD_UBSAN")]),t._v(" "),a("td",[t._v("False")]),t._v(" "),a("td",[t._v("构建Undefined behavior sanitizer")])]),t._v(" "),a("tr",[a("td",[t._v("-full_ubsan")]),t._v(" "),a("td",[t._v("BUILD_UBSAN_FULL")]),t._v(" "),a("td",[t._v("False")]),t._v(" "),a("td",[t._v("构建Undefined behavior sanitizer, 包交叉编译生成的 LLVM IR代码. 比单纯的-ubsan查询更慢")])]),t._v(" "),a("tr",[a("td",[t._v("-skiptests")]),t._v(" "),a("td",[t._v("TESTS_ACTION")]),t._v(" "),a("td",[t._v("False")]),t._v(" "),a("td",[t._v("跳过执行所有的测试")])]),t._v(" "),a("tr",[a("td",[t._v("-notests")]),t._v(" "),a("td",[t._v("BUILD_TESTS, TESTS_ACTION")]),t._v(" "),a("td",[t._v("False")]),t._v(" "),a("td",[t._v("跳过构建和执行所有的测试")])]),t._v(" "),a("tr",[a("td",[t._v("-start_minicluster")]),t._v(" "),a("td",[t._v("NEED_MINICLUSTER")]),t._v(" "),a("td",[t._v("如果运行测试或加载数据为True，否则为False")]),t._v(" "),a("td",[t._v("启动测试集群，包括Impala和它依赖的集群。如果已经在运行，所有服务都会重启，重新生成 test cluster 配置文件")])]),t._v(" "),a("tr",[a("td",[t._v("-start_impala_cluster")]),t._v(" "),a("td",[t._v("START_IMPALA_CLUSTER")]),t._v(" "),a("td",[t._v("False")]),t._v(" "),a("td",[t._v("在构建完成后启动 Impala minicluster")])]),t._v(" "),a("tr",[a("td",[t._v("-testpairwise")]),t._v(" "),a("td",[t._v("EXPLORATION_STRATEGY")]),t._v(" "),a("td",[t._v("ore")]),t._v(" "),a("td",[t._v("以'pairwise' 模式运行测试 (会增加测试执行时间)")])]),t._v(" "),a("tr",[a("td",[t._v("-testexhaustive")]),t._v(" "),a("td",[t._v("EXPLORATION_STRATEGY")]),t._v(" "),a("td",[t._v("core")]),t._v(" "),a("td",[t._v("以 'exhaustive' 模式运行测试, 会显著增加测试执行时间.仅应用于workload套件：functional-query, targeted-stress")])]),t._v(" "),a("tr",[a("td",[t._v("-testdata")]),t._v(" "),a("td",[t._v("TESTDATA_ACTION")]),t._v(" "),a("td",[t._v("False")]),t._v(" "),a("td",[t._v("加载测试数据. 如果指定了-snapshot_file 默认为True. 如果-snapshot_file没有指定, 数据会被重新生成。")])]),t._v(" "),a("tr",[a("td",[t._v("-snapshot_file <file name>")]),t._v(" "),a("td",[t._v("SNAPSHOT_FILE")]),t._v(" "),a("td",[t._v("-")]),t._v(" "),a("td",[t._v("从一个snapshot file加载测试数据")])]),t._v(" "),a("tr",[a("td",[t._v("-metastore_snapshot_file <file_name>: Load the hive metastore snapshot")]),t._v(" "),a("td",[t._v("METASTORE_SNAPSHOT_FILE")]),t._v(" "),a("td",[t._v("-")]),t._v(" "),a("td",[t._v("加载Hive metastore 快照")])]),t._v(" "),a("tr",[a("td",[t._v("-so|-build_shared_libs")]),t._v(" "),a("td",[t._v("BUILD_SHARED_LIBS")]),t._v(" "),a("td",[t._v("static")]),t._v(" "),a("td",[t._v("动态连接可执行文件")])]),t._v(" "),a("tr",[a("td",[t._v("-fe_only")]),t._v(" "),a("td",[t._v("BUILD_FE_ONLY")]),t._v(" "),a("td",[t._v("0")]),t._v(" "),a("td",[t._v("仅构建fe")])]),t._v(" "),a("tr",[a("td",[t._v("-ninja")]),t._v(" "),a("td",[t._v("MAKE_CMD")]),t._v(" "),a("td"),t._v(" "),a("td",[t._v("使用 ninja 替代 make")])]),t._v(" "),a("tr",[a("td",[t._v("-cmake_only")]),t._v(" "),a("td",[t._v("GEN_CMAKE_ONLY")]),t._v(" "),a("td",[t._v("0")]),t._v(" "),a("td",[t._v("仅生成 makefiles, 而不是执行全量构建")])]),t._v(" "),a("tr",[a("td",[t._v("-v|-debug")]),t._v(" "),a("td",[t._v("-")]),t._v(" "),a("td",[t._v("-")]),t._v(" "),a("td",[t._v("使用调试模式执行shell脚本")])])])]),t._v(" "),a("p",[t._v("外部环境变量：")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("变量名")]),t._v(" "),a("th",[t._v("候选值")]),t._v(" "),a("th",[t._v("默认值")]),t._v(" "),a("th",[t._v("说明")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("CMAKE_BUILD_TYPE")]),t._v(" "),a("td",[t._v("Debug, Release")]),t._v(" "),a("td",[t._v("Debug")]),t._v(" "),a("td",[t._v("编译Debug版还是Release版，可以通过命令行参数"),a("code",[t._v("-release")]),t._v("覆盖")])]),t._v(" "),a("tr",[a("td",[t._v("DOWNLOAD_CDH_COMPONENTS")]),t._v(" "),a("td",[t._v("true,false")]),t._v(" "),a("td",[t._v("无")]),t._v(" "),a("td",[t._v("控制是否下载toolchain的开关之一")])]),t._v(" "),a("tr",[a("td",[t._v("EXPLORATION_STRATEGY")]),t._v(" "),a("td",[t._v("core, pairwise, exhaustive")]),t._v(" "),a("td",[t._v("core")]),t._v(" "),a("td",[t._v("运行测试的模式，可以通过命令行参数"),a("code",[t._v("-testpairwise")]),t._v(" 或 "),a("code",[t._v("testexhaustive")]),t._v("覆盖")])]),t._v(" "),a("tr",[a("td",[t._v("IMPALA_ALL_LOGS_DIRS")]),t._v(" "),a("td",[t._v("任意")]),t._v(" "),a("td",[t._v("无")]),t._v(" "),a("td",[t._v("impala所有日志根目录")])]),t._v(" "),a("tr",[a("td",[t._v("IMPALA_BUILD_THREADS")]),t._v(" "),a("td",[t._v("任意")]),t._v(" "),a("td",[t._v("4")]),t._v(" "),a("td",[t._v("编译线程数")])]),t._v(" "),a("tr",[a("td",[t._v("IMPALA_HOME")]),t._v(" "),a("td",[t._v("任意")]),t._v(" "),a("td",[t._v("无")]),t._v(" "),a("td",[t._v("impala源码目录")])]),t._v(" "),a("tr",[a("td",[t._v("IMPALA_MAKE_FLAGS")]),t._v(" "),a("td",[t._v("任意")]),t._v(" "),a("td",[t._v("无")]),t._v(" "),a("td",[t._v("make命令flags")])]),t._v(" "),a("tr",[a("td",[t._v("SKIP_PYTHON_DOWNLOAD")]),t._v(" "),a("td",[t._v("true, false")]),t._v(" "),a("td",[t._v("无")]),t._v(" "),a("td",[t._v("不下载python依赖库")])]),t._v(" "),a("tr",[a("td",[t._v("SKIP_TOOLCHAIN_BOOTSTRAP")]),t._v(" "),a("td",[t._v("true, false")]),t._v(" "),a("td",[t._v("无")]),t._v(" "),a("td",[t._v("控制是否下载toolchain的开关之一")])]),t._v(" "),a("tr",[a("td",[t._v("TARGET_FILESYSTEM")]),t._v(" "),a("td",[t._v("hdfs,s3,local")]),t._v(" "),a("td",[t._v("dfs")]),t._v(" "),a("td",[t._v("加载测试数据的文件系统")])]),t._v(" "),a("tr",[a("td",[t._v("CDP_FILE")]),t._v(" "),a("td",[t._v("-")]),t._v(" "),a("td",[t._v("${IMPALA_HOME}/.cdp")]),t._v(" "),a("td",[t._v("内容为$CDP_BUILD_NUMBER")])])])]),t._v(" "),a("p",[t._v("常见用例：")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 构建并运行所有测试")]),t._v("\n./buildall.sh\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 构建并跳过测试")]),t._v("\n./buildall.sh "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-skiptests")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 构建,然后刷新配置重启minicluster和Impala")]),t._v("\n./buildall.sh "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-notests")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-start_minicluster")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-start_impala_cluster")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 增量构建并跳过测试.保持现有的minicluster服务运行并重启Impala")]),t._v("\n./buildall.sh "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-skiptests")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-noclean")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-start_impala_cluster")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 构建,加载一个snapshot文件, 运行测试")]),t._v("\n./buildall.sh "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-snapshot_file")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("file"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 构建,加载hive metastore和hdfs snapshot, 运行测试")]),t._v("\n./buildall.sh "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-snapshot_file")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("file"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-metastore_snapshot_file")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("file"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 构建,生成,和增量加载测试数据，并且不格式化mini-cluster (重用HDFS上已存在的数据). 比从snapshot加载更快")]),t._v("\n./buildall.sh "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-testdata")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 构建, 格式化mini-cluster和metastore,加载所有测试数据,运行测试")]),t._v("\n./buildall.sh "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-testdata")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-format")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 构建并升级metastore schema至最新版.")]),t._v("\n./buildall.sh "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-upgrade_metastore_db")]),t._v("\n")])])]),a("h3",{attrs:{id:"组件默认端口"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#组件默认端口"}},[t._v("$")]),t._v(" 组件默认端口")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("组件")]),t._v(" "),a("th",[t._v("端口")]),t._v(" "),a("th",[t._v("描述")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("KMS")]),t._v(" "),a("td",[t._v("9600")]),t._v(" "),a("td",[t._v("Web UI 端口")])]),t._v(" "),a("tr",[a("td",[t._v("NameNode")]),t._v(" "),a("td",[t._v("5070")]),t._v(" "),a("td",[t._v("Web UI 端口")])]),t._v(" "),a("tr",[a("td",[t._v("NameNode")]),t._v(" "),a("td",[t._v("20500")]),t._v(" "),a("td",[t._v("服务端口")])]),t._v(" "),a("tr",[a("td",[t._v("ResourceManager")]),t._v(" "),a("td",[t._v("8088")]),t._v(" "),a("td",[t._v("Web UI 端口")])]),t._v(" "),a("tr",[a("td",[t._v("PostgreSQL")]),t._v(" "),a("td",[t._v("5432")]),t._v(" "),a("td",[t._v("服务端口")])]),t._v(" "),a("tr",[a("td",[t._v("HiveServer2")]),t._v(" "),a("td",[t._v("10001")]),t._v(" "),a("td",[t._v("HTTP JDBC 端口")])]),t._v(" "),a("tr",[a("td",[t._v("HiveServer2")]),t._v(" "),a("td",[t._v("10002")]),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td",[t._v("HiveServer2")]),t._v(" "),a("td",[t._v("11050")]),t._v(" "),a("td",[t._v("JDBC端口")])]),t._v(" "),a("tr",[a("td",[t._v("HiveServer2")]),t._v(" "),a("td",[t._v("30020")]),t._v(" "),a("td",[t._v("JVM调试端口")])]),t._v(" "),a("tr",[a("td",[t._v("HiveMetaStore")]),t._v(" "),a("td",[t._v("9083")]),t._v(" "),a("td",[t._v("服务端口")])]),t._v(" "),a("tr",[a("td",[t._v("HiveMetaStore")]),t._v(" "),a("td",[t._v("30010")]),t._v(" "),a("td",[t._v("JVM调试端口")])]),t._v(" "),a("tr",[a("td",[t._v("Ranger")]),t._v(" "),a("td",[t._v("6080")]),t._v(" "),a("td",[t._v("Web UI 端口")])]),t._v(" "),a("tr",[a("td",[t._v("Ranger")]),t._v(" "),a("td",[t._v("6085")]),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td",[t._v("Ranger")]),t._v(" "),a("td",[t._v("30130")]),t._v(" "),a("td",[t._v("JVM调试端口")])]),t._v(" "),a("tr",[a("td",[t._v("HRegionServer")]),t._v(" "),a("td",[t._v("16030,16032,16033")]),t._v(" "),a("td",[t._v("Web UI 端口")])]),t._v(" "),a("tr",[a("td",[t._v("ZooKeeper")]),t._v(" "),a("td",[t._v("2181")]),t._v(" "),a("td",[t._v("服务端口")])]),t._v(" "),a("tr",[a("td",[t._v("ZooKeeper")]),t._v(" "),a("td",[t._v("8080")]),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td",[t._v("kudu master")]),t._v(" "),a("td",[t._v("7051")]),t._v(" "),a("td",[t._v("服务端口")])]),t._v(" "),a("tr",[a("td",[t._v("kudu master")]),t._v(" "),a("td",[t._v("8051")]),t._v(" "),a("td",[t._v("Web UI 端口")])])])]),t._v(" "),a("h4",{attrs:{id:"参考-3"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#参考-3"}},[t._v("$")]),t._v(" 参考")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://docs.cloudera.com/HDPDocuments/HDP3/HDP-3.1.0/administration/content/ranger-ports.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Ranger service ports"),a("OutboundLink")],1)]),t._v(" "),a("h3",{attrs:{id:"编译时间优化"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#编译时间优化"}},[t._v("$")]),t._v(" 编译时间优化")]),t._v(" "),a("h4",{attrs:{id:"编译展开分析"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#编译展开分析"}},[t._v("$")]),t._v(" 编译展开分析")]),t._v(" "),a("p",[t._v('在cmake中指定编译选型"-save-temps"保留编译中间文件：')]),t._v(" "),a("div",{staticClass:"language-cmake extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cmake"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# be/CMakeLists.txt")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("set")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("CMAKE_CXX_FLAGS")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"'),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("${")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("CMAKE_CXX_FLAGS")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),t._v(' -save-temps"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("h4",{attrs:{id:"头文件依赖分析"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#头文件依赖分析"}},[t._v("$")]),t._v(" 头文件依赖分析")]),t._v(" "),a("p",[t._v("通过工具统计出编译源文件直接和间接依赖的头文件的总个数。")]),t._v(" "),a("h4",{attrs:{id:"编译耗时统计"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#编译耗时统计"}},[t._v("$")]),t._v(" 编译耗时统计")]),t._v(" "),a("p",[t._v("从结果上看各个文件的编译耗时以及各个编译阶段的耗时情况，正常情况下，是和文件展开大小以及头文件引用个数是正相关的。")]),t._v(" "),a("p",[t._v("cmake通过指定环境变量能打印出编译和链接阶段的耗时情况：")]),t._v(" "),a("div",{staticClass:"language-cmake extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cmake"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# export IMPALA_BUILD_THREADS=1")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# be/CMakeLists.txt")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("set_property")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("GLOBAL PROPERTY "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("RULE_LAUNCH_COMPILE")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"'),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("${")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("CMAKE_COMMAND")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),t._v(' -E time"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("set_property")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("GLOBAL PROPERTY "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("RULE_LAUNCH_LINK")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"'),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("${")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("CMAKE_COMMAND")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),t._v(' -E time"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("h4",{attrs:{id:"参考-4"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#参考-4"}},[t._v("$")]),t._v(" 参考")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://tech.meituan.com/2020/12/10/apache-kylin-practice-in-meituan.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("C++服务编译耗时优化原理及实践"),a("OutboundLink")],1)]),t._v(" "),a("h2",{attrs:{id:"代码调试"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#代码调试"}},[t._v("$")]),t._v(" 代码调试")]),t._v(" "),a("h3",{attrs:{id:"参考-5"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#参考-5"}},[t._v("$")]),t._v(" 参考")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://cwiki.apache.org/confluence/display/IMPALA/Impala+Debugging+Tips",target:"_blank",rel:"noopener noreferrer"}},[t._v("Impala Debugging Tips"),a("OutboundLink")],1)]),t._v(" "),a("h2",{attrs:{id:"源码分析"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#源码分析"}},[t._v("$")]),t._v(" 源码分析")]),t._v(" "),a("p",[t._v("以下代码以"),a("a",{attrs:{href:"https://github.com/apache/impala/blob/4.0.0",target:"_blank",rel:"noopener noreferrer"}},[t._v("4.0.0源码"),a("OutboundLink")],1),t._v("为例。")]),t._v(" "),a("h3",{attrs:{id:"术语表"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#术语表"}},[t._v("$")]),t._v(" 术语表")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("术语")]),t._v(" "),a("th",[t._v("说明")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("lhs, rhs")]),t._v(" "),a("td",[t._v("Left-side-hand, right-side-hand缩写")])]),t._v(" "),a("tr",[a("td",[t._v("c'tor")]),t._v(" "),a("td",[t._v("constructor缩写")])]),t._v(" "),a("tr",[a("td",[t._v("localViews_")]),t._v(" "),a("td",[t._v("a view definition in this analyzer's scope")])]),t._v(" "),a("tr",[a("td"),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td"),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td"),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td"),t._v(" "),a("td")])])]),t._v(" "),a("h3",{attrs:{id:"bootstrap-system-sh"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#bootstrap-system-sh"}},[t._v("$")]),t._v(" bootstrap_system.sh")]),t._v(" "),a("p",[t._v("为开发环境做些准备，大体执行流程：")]),t._v(" "),a("ul",[a("li",[t._v("设置环境变量 IMPALA_HOME")]),t._v(" "),a("li",[t._v("如果是交互模式，询问是否愿意更改环境配置，是则继续，否则退出；如果不是交互模式，直接执行。")]),t._v(" "),a("li",[t._v("判断Linux发行版版本（REDHAT6，REDHAT7，UBUNTU16.04），以及是否在Docker内")]),t._v(" "),a("li",[t._v("安装一堆软件包，包括编译相关工具，kerberos，postgresql等")]),t._v(" "),a("li",[t._v("下载apache-ant-1.9.14和apache-maven-3.5.4并安装到目录"),a("code",[t._v("/usr/local")]),t._v("下")]),t._v(" "),a("li",[t._v("启动ssh服务")]),t._v(" "),a("li",[t._v("初始化postgresql并启动")]),t._v(" "),a("li",[t._v("为HMS创建账号，用户名：hiveuser，密码：password")]),t._v(" "),a("li",[t._v("配置到localhost的免密登录")]),t._v(" "),a("li",[t._v("配置"),a("code",[t._v("/etc/hosts")])]),t._v(" "),a("li",[t._v("创建目录："),a("code",[t._v("/var/lib/hadoop-hdfs")])]),t._v(" "),a("li",[t._v("配置系统最大打开文件数为1048576，最大进程数为unlimited")]),t._v(" "),a("li",[t._v("如果IMPALA_HOME目录不存在，则checkout Impala源码，并导出环境变量 IMPALA_HOME到"),a("code",[t._v("~/.bashrc")])]),t._v(" "),a("li",[t._v("配置JAVA_HOME，并固化到"),a("code",[t._v("bin/impala-config-local.sh")])]),t._v(" "),a("li",[t._v("下载maven软件包到本地仓库")])]),t._v(" "),a("p",[t._v("在Docker里运行此脚本需要做的准备：")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 添加参数--privileged")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker")]),t._v(" run "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--privileged")]),t._v(" --cap-add SYS_TIME "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-d")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-it")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--name")]),t._v(" impala_build ubuntu:16.04 "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("bash")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 赋予容器一个非root无需密码的sudoer：")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("apt-get")]),t._v(" update\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("apt-get")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v("\nadduser --disabled-password "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--gecos")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("''")]),t._v(" impdev\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'impdev ALL=(ALL) NOPASSWD:ALL'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),t._v(" /etc/sudoers\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 使用新建的用户运行：")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("su")]),t._v(" - impdev "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-c")]),t._v(" bin/bootstrap_development.sh\n")])])]),a("h3",{attrs:{id:"buildall-sh"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#buildall-sh"}},[t._v("$")]),t._v(" buildall.sh")]),t._v(" "),a("p",[t._v("编译前的准备步骤包括：")]),t._v(" "),a("ul",[a("li",[a("p",[a("a",{attrs:{href:"https://github.com/apache/impala/blob/4.0.0/buildall.sh#L55,L85",target:"_blank",rel:"noopener noreferrer"}},[t._v("第55行至85行"),a("OutboundLink")],1),t._v(" 设置内部变量的默认值。")])]),t._v(" "),a("li",[a("p",[a("a",{attrs:{href:"https://github.com/apache/impala/blob/4.0.0/buildall.sh#L88,L286",target:"_blank",rel:"noopener noreferrer"}},[t._v("第88行至286行"),a("OutboundLink")],1),t._v("解析命令行参数并设置内部变量。")])]),t._v(" "),a("li",[a("p",[a("a",{attrs:{href:"https://github.com/apache/impala/blob/4.0.0/buildall.sh#L344,L349",target:"_blank",rel:"noopener noreferrer"}},[t._v("第344行至349行"),a("OutboundLink")],1),t._v("校验启用kerberos的集群上不支持运行测试或者加载测试数据。")])]),t._v(" "),a("li",[a("p",[a("a",{attrs:{href:"https://github.com/apache/impala/blob/4.0.0/buildall.sh#L351,L356",target:"_blank",rel:"noopener noreferrer"}},[t._v("第351行至356行"),a("OutboundLink")],1),t._v("校验加载测试数据的hive元数据快照仅支持hdfs文件系统。")])]),t._v(" "),a("li",[a("p",[a("a",{attrs:{href:"https://github.com/apache/impala/blob/4.0.0/buildall.sh#L575",target:"_blank",rel:"noopener noreferrer"}},[t._v("第575行至578行"),a("OutboundLink")],1),t._v("调用脚本"),a("code",[t._v("bin/clean.sh")]),t._v("清理之前的构建目录。")])]),t._v(" "),a("li",[a("p",[t._v("在函数"),a("a",{attrs:{href:"https://github.com/apache/impala/blob/4.0.0/buildall.sh#L365,L380",target:"_blank",rel:"noopener noreferrer"}},[a("code",[t._v("create_log_dirs()")]),a("OutboundLink")],1),t._v("中创建统一的日志目录。")])]),t._v(" "),a("li",[a("p",[t._v("在函数"),a("a",{attrs:{href:"https://github.com/apache/impala/blob/4.0.0/buildall.sh#L382,L422",target:"_blank",rel:"noopener noreferrer"}},[a("code",[t._v("bootstrap_dependencies()")]),a("OutboundLink")],1),t._v("，中下载python依赖和toolchain：")]),t._v(" "),a("ul",[a("li",[t._v("如果"),a("code",[t._v("SKIP_PYTHON_DOWNLOAD=false")]),t._v("则执行脚本"),a("code",[t._v("infra/python/deps/download_requirements")]),t._v("下载python的依赖。")]),t._v(" "),a("li",[t._v("如果"),a("code",[t._v("SKIP_TOOLCHAIN_BOOTSTRAP=true")]),t._v("且"),a("code",[t._v("DOWNLOAD_CDH_COMPONENTS=true")]),t._v("，或者"),a("code",[t._v("SKIP_TOOLCHAIN_BOOTSTRAP=false")]),t._v("，则执行脚本"),a("code",[t._v("bin/bootstrap_toolchain.py")]),t._v("下载toolchain。")])])])]),t._v(" "),a("p",[t._v("编译过程首先调用cmake命令生成Makefile，即函数"),a("a",{attrs:{href:"https://github.com/apache/impala/blob/4.0.0/buildall.sh#L460,L501",target:"_blank",rel:"noopener noreferrer"}},[a("code",[t._v("generate_cmake_files()")]),a("OutboundLink")],1),t._v("，cmake的参数包括："),a("code",[t._v("-DCMAKE_BUILD_TYPE")]),t._v("，"),a("code",[t._v("-DBUILD_SHARED_LIBS")]),t._v("，"),a("code",[t._v("-GNinja")]),t._v("，"),a("code",[t._v("-DCMAKE_TOOLCHAIN_FILE")]),t._v("，"),a("code",[t._v("-DCACHELINESIZE_AARCH64")]),t._v(" 。不同构建需求的区别主要在于参数"),a("code",[t._v("CMAKE_BUILD_TYPE")]),t._v("的不同，它的默认值是"),a("code",[t._v("Debug")]),t._v("，除了默认值之外还有9种互斥的情况：")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("CODE_COVERAGE_DEBUG")]),t._v("，由参数"),a("code",[t._v("-codecoverage")]),t._v("和"),a("code",[t._v("-release")]),t._v("确定。")]),t._v(" "),a("li",[a("code",[t._v("CODE_COVERAGE_RELEASE")]),t._v("，由参数"),a("code",[t._v("-codecoverage")]),t._v("和"),a("code",[t._v("-release")]),t._v("确定。")]),t._v(" "),a("li",[a("code",[t._v("RELEASE")]),t._v("，由参数"),a("code",[t._v("-release")]),t._v("确定。")]),t._v(" "),a("li",[a("code",[t._v("ADDRESS_SANITIZER")]),t._v("，由参数"),a("code",[t._v("-asan")]),t._v("确定。")]),t._v(" "),a("li",[a("code",[t._v("TIDY")]),t._v("，由参数"),a("code",[t._v("-tidy")]),t._v("确定。")]),t._v(" "),a("li",[a("code",[t._v("UBSAN")]),t._v("，由参数"),a("code",[t._v("-ubsan")]),t._v("确定。")]),t._v(" "),a("li",[a("code",[t._v("UBSAN_FULL")]),t._v("，由参数"),a("code",[t._v("-full_ubsan")]),t._v("确定。")]),t._v(" "),a("li",[a("code",[t._v("TSAN")]),t._v("，由参数"),a("code",[t._v("-tsan")]),t._v("确定。")]),t._v(" "),a("li",[a("code",[t._v("TSAN_FULL")]),t._v("，由参数"),a("code",[t._v("-full_tsan")]),t._v("确定。")])]),t._v(" "),a("p",[t._v("如果指定了参数"),a("code",[t._v("-cmake_only")]),t._v("则仅会根据参数"),a("code",[t._v("CMAKE_BUILD_TYPE")]),t._v("生成Makefile。")]),t._v(" "),a("p",[t._v("如果指定了参数"),a("code",[t._v("-fe_only")]),t._v("则在生成Makefile之后仅编译"),a("code",[t._v("FE")]),t._v("部分。")]),t._v(" "),a("p",[t._v("如果以上两个参数都没有指定，则会调用函数"),a("a",{attrs:{href:"https://github.com/apache/impala/blob/4.0.0/buildall.sh#L435,L455",target:"_blank",rel:"noopener noreferrer"}},[a("code",[t._v("build_all_components()")]),a("OutboundLink")],1),t._v("构建所有组件（包括FE和BE等）。")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("如果指定了参数"),a("code",[t._v("-release_and_debug")]),t._v("，则会依次生成RELEASE和DEBUG类型的Makefile；否则根据参数确定的"),a("code",[t._v("CMAKE_BUILD_TYPE")]),t._v("来生成Makefile。")])]),t._v(" "),a("li",[a("p",[t._v("然后调用"),a("code",[t._v("make")]),t._v("命令执行编译过程，make命令的目标有三种情况：")])])]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("编译测试文件")]),t._v(" "),a("th",[t._v("是否编译不相关目标")]),t._v(" "),a("th",[t._v("MAKE目标")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("False")]),t._v(" "),a("td",[t._v("True")]),t._v(" "),a("td",[t._v("notests_all_targets")])]),t._v(" "),a("tr",[a("td",[t._v("False")]),t._v(" "),a("td",[t._v("False")]),t._v(" "),a("td",[t._v("notests_regular_targets")])]),t._v(" "),a("tr",[a("td",[t._v("True")]),t._v(" "),a("td",[t._v("任意")]),t._v(" "),a("td",[t._v("（空）")])])])]),t._v(" "),a("p",[t._v("接下来是minicluster相关，"),a("a",{attrs:{href:"https://github.com/apache/impala/blob/4.0.0/buildall.sh#L506,L534",target:"_blank",rel:"noopener noreferrer"}},[t._v("第506行至534行"),a("OutboundLink")],1),t._v("定义了函数"),a("code",[t._v("reconfigure_test_cluster()")]),t._v("，主要作用是调用"),a("code",[t._v("bin/create-test-configuration.sh")]),t._v("脚本生成impala依赖的hadoop配置文件，同时还会执行格式化元数据相关操作（会先kill掉minicluster集群）：")]),t._v(" "),a("ul",[a("li",[a("p",[a("code",[t._v("-format_cluster")]),t._v("的操作最终是删除了hdfs和kudu的数据目录：")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/apache/impala/blob/4.0.0/buildall.sh#L542",target:"_blank",rel:"noopener noreferrer"}},[t._v("buildall.sh"),a("OutboundLink")],1),t._v(" => "),a("a",{attrs:{href:"https://github.com/apache/impala/blob/4.0.0/testdata/bin/run-all.sh#L54",target:"_blank",rel:"noopener noreferrer"}},[t._v("testdata/bin/run-all.sh"),a("OutboundLink")],1),t._v(" => "),a("a",{attrs:{href:"https://github.com/apache/impala/blob/4.0.0/testdata/bin/run-mini-dfs.sh#L38",target:"_blank",rel:"noopener noreferrer"}},[t._v("testdata/bin/run-mini-dfs.sh"),a("OutboundLink")],1),t._v(" => "),a("a",{attrs:{href:"https://github.com/apache/impala/blob/4.0.0/testdata/cluster/admin#L459,L463",target:"_blank",rel:"noopener noreferrer"}},[t._v("testdata/cluster/admin"),a("OutboundLink")],1)])]),t._v(" "),a("li",[a("p",[a("code",[t._v("-format_metastore")]),t._v("操作最终在pg数据库里删除重建了metastore的db，并执行"),a("code",[t._v("schematool -initSchema")]),t._v("命令：")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/apache/impala/blob/4.0.0/buildall.sh#L533",target:"_blank",rel:"noopener noreferrer"}},[t._v("buildall.sh"),a("OutboundLink")],1),t._v(" => "),a("a",{attrs:{href:"https://github.com/apache/impala/blob/4.0.0/bin/create-test-configuration.sh#L162,L165",target:"_blank",rel:"noopener noreferrer"}},[t._v("bin/create-test-configuration.sh"),a("OutboundLink")],1)])]),t._v(" "),a("li",[a("p",[a("code",[t._v("-format_ranger_policy_db")]),t._v("的操作同样删除重建了Ranger Policy的db，并在"),a("code",[t._v("RANGER_HOME")]),t._v("目录下生成"),a("code",[t._v("install.properties")]),t._v("配置文件，并执行"),a("code",[t._v("db_setup.py")]),t._v("：")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/apache/impala/blob/4.0.0/buildall.sh#L533",target:"_blank",rel:"noopener noreferrer"}},[t._v("buildall.sh"),a("OutboundLink")],1),t._v(" => "),a("a",{attrs:{href:"https://github.com/apache/impala/blob/4.0.0/bin/create-test-configuration.sh#L185,L193",target:"_blank",rel:"noopener noreferrer"}},[t._v("bin/create-test-configuration.sh"),a("OutboundLink")],1)])]),t._v(" "),a("li",[a("p",[a("code",[t._v("-upgrade_metastore_db")]),t._v("最终是执行"),a("code",[t._v("schematool -upgradeSchema")]),t._v("命令：")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/apache/impala/blob/4.0.0/buildall.sh#L533",target:"_blank",rel:"noopener noreferrer"}},[t._v("buildall.sh"),a("OutboundLink")],1),t._v(" => "),a("a",{attrs:{href:"https://github.com/apache/impala/blob/4.0.0/bin/create-test-configuration.sh#L181",target:"_blank",rel:"noopener noreferrer"}},[t._v("bin/create-test-configuration.sh"),a("OutboundLink")],1)])])]),t._v(" "),a("p",[t._v("如果指定了参数"),a("code",[t._v("-metastore_snapshot_file")]),t._v("，则调用脚本"),a("a",{attrs:{href:"https://github.com/apache/impala/blob/4.0.0/buildall.sh#L620,L623",target:"_blank",rel:"noopener noreferrer"}},[a("code",[t._v("testdata/bin/load-metastore-snapshot.sh")]),a("OutboundLink")],1),t._v("加载Hive metastore的元数据。")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/apache/impala/blob/4.0.0/buildall.sh#L537,L543",target:"_blank",rel:"noopener noreferrer"}},[t._v("第537行至543行"),a("OutboundLink")],1),t._v("定义了函数"),a("code",[t._v("start_test_cluster_dependencies()")]),t._v("，主要是调用脚本"),a("code",[t._v("testdata/bin/run-all.sh")]),t._v("启动minicluster集群。")]),t._v(" "),a("p",[t._v("在minicluster集群启动之后，"),a("a",{attrs:{href:"https://github.com/apache/impala/blob/4.0.0/buildall.sh#L548,L565",target:"_blank",rel:"noopener noreferrer"}},[t._v("第548行至565行"),a("OutboundLink")],1),t._v("定义了函数"),a("code",[t._v("load_test_data()")]),t._v("，用来执行数据加载步骤：")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("执行脚本"),a("code",[t._v("$IMPALA_HOME/bin/create_testdata.sh")])])]),t._v(" "),a("li",[a("p",[t._v("执行脚本"),a("code",[t._v("${IMPALA_HOME}/testdata/bin/create-load-data.sh")]),t._v("。根据变量"),a("code",[t._v("SNAPSHOT_FILE")]),t._v(" 和变量"),a("code",[t._v("METASTORE_SNAPSHOT_FILE")]),t._v("的值是否为空，传递的参数有4种组合情况：")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("SNAPSHOT_FILE")]),t._v(" "),a("th",[t._v("METASTORE_SNAPSHOT_FILE")]),t._v(" "),a("th",[t._v("CREATE_LOAD_DATA_ARGS")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("不为空")]),t._v(" "),a("td",[t._v("不为空")]),t._v(" "),a("td",[t._v("-snapshot_file, -skip_metadata_load")])]),t._v(" "),a("tr",[a("td",[t._v("不为空")]),t._v(" "),a("td",[t._v("空")]),t._v(" "),a("td",[t._v("-snapshot_file")])]),t._v(" "),a("tr",[a("td",[t._v("空")]),t._v(" "),a("td",[t._v("不为空")]),t._v(" "),a("td",[t._v("-skip_metadata_load -skip_snapshot_load")])]),t._v(" "),a("tr",[a("td",[t._v("空")]),t._v(" "),a("td",[t._v("空")]),t._v(" "),a("td",[t._v("空")])])])])])]),t._v(" "),a("p",[t._v("在数据加载完成之后，"),a("a",{attrs:{href:"https://github.com/apache/impala/blob/4.0.0/buildall.sh#L567,L573",target:"_blank",rel:"noopener noreferrer"}},[t._v("第567行至573行"),a("OutboundLink")],1),t._v("定义了函数"),a("code",[t._v("run_all_tests()")]),t._v("，调用脚本"),a("code",[t._v("bin/run-all-tests.sh")]),t._v("运行测试。")]),t._v(" "),a("h3",{attrs:{id:"report-build-error-sh"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#report-build-error-sh"}},[t._v("$")]),t._v(" report_build_error.sh")]),t._v(" "),a("p",[t._v("setup_report_build_error函数功能：如果接收到错误，打印行号。")]),t._v(" "),a("h3",{attrs:{id:"clean-sh"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#clean-sh"}},[t._v("$")]),t._v(" clean.sh")]),t._v(" "),a("p",[t._v("清理编译输出目录，包括：")]),t._v(" "),a("ul",[a("li",[t._v("扩展数据源输出目录")]),t._v(" "),a("li",[t._v("fe输出目录")]),t._v(" "),a("li",[t._v("be输出目录")]),t._v(" "),a("li",[t._v("shell输出目录")]),t._v(" "),a("li",[t._v("python中间文件和目录")]),t._v(" "),a("li",[t._v("llvm输出目录")]),t._v(" "),a("li",[t._v("cmake生成文件")])]),t._v(" "),a("h3",{attrs:{id:"download-requirements"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#download-requirements"}},[t._v("$")]),t._v(" download_requirements")]),t._v(" "),a("p",[t._v("替代pip命令从PyPI源下载python包，可以通过环境变量"),a("code",[t._v("PYPI_MIRROR")]),t._v("设置PyPI源镜像地址，下载的python包列表在"),a("code",[t._v("infra/python/deps/requirements.txt")]),t._v("等文件中指定。")]),t._v(" "),a("p",[t._v("至于为什么不用pip命令下载，注释说的意思是不同操作系统下载不稳定和不一致（Impala也只支持Linux啊，感觉站不住脚），还有避免执行可能会失败的某些包的setup.py，参考："),a("a",{attrs:{href:"http://issues.apache.org/jira/browse/IMPALA-3778",target:"_blank",rel:"noopener noreferrer"}},[t._v("IMPALA-3778"),a("OutboundLink")],1),t._v("。")]),t._v(" "),a("h3",{attrs:{id:"bootstrap-toolchain-py"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#bootstrap-toolchain-py"}},[t._v("$")]),t._v(" bootstrap_toolchain.py")]),t._v(" "),a("h3",{attrs:{id:"create-test-configuration-sh"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#create-test-configuration-sh"}},[t._v("$")]),t._v(" create-test-configuration.sh")]),t._v(" "),a("p",[t._v("使用说明：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("[-create_metastore] : If true, creates a new metastore.\n[-create_ranger_policy_db] : If true, creates a new Ranger policy db.\n[-upgrade_metastore_db] : If true, upgrades the schema of HMS db.\n")])])]),a("h3",{attrs:{id:"load-metastore-snapshot-sh"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#load-metastore-snapshot-sh"}},[t._v("$")]),t._v(" load-metastore-snapshot.sh")]),t._v(" "),a("h3",{attrs:{id:"create-testdata-sh"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#create-testdata-sh"}},[t._v("$")]),t._v(" create_testdata.sh")]),t._v(" "),a("h3",{attrs:{id:"create-load-data-sh"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#create-load-data-sh"}},[t._v("$")]),t._v(" create-load-data.sh")]),t._v(" "),a("h3",{attrs:{id:"run-all-sh"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#run-all-sh"}},[t._v("$")]),t._v(" run-all.sh")]),t._v(" "),a("h3",{attrs:{id:"run-mini-dfs-sh"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#run-mini-dfs-sh"}},[t._v("$")]),t._v(" run-mini-dfs.sh")]),t._v(" "),a("h3",{attrs:{id:"run-all-tests-sh"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#run-all-tests-sh"}},[t._v("$")]),t._v(" run-all-tests.sh")]),t._v(" "),a("h3",{attrs:{id:"frontend"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#frontend"}},[t._v("$")]),t._v(" Frontend")]),t._v(" "),a("p",[t._v("impalad服务端接收请求入口："),a("code",[t._v("impala-beeswax-server.cc#ImpalaServer::query()")])]),t._v(" "),a("p",[t._v("Frontend.cc#Frontend::GetExecRequest() 通过JNI接口调用")]),t._v(" "),a("p",[t._v("org.apache.impala.planner.Planner.createPlan()")]),t._v(" "),a("h4",{attrs:{id:"org-apache-impala-planner-plannode"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#org-apache-impala-planner-plannode"}},[t._v("$")]),t._v(" org.apache.impala.planner.PlanNode")]),t._v(" "),a("p",[t._v("slot, materialized, conjuncts,")]),t._v(" "),a("h4",{attrs:{id:"org-apache-impala-planner-plannodeid"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#org-apache-impala-planner-plannodeid"}},[t._v("$")]),t._v(" org.apache.impala.planner.PlanNodeId")]),t._v(" "),a("h4",{attrs:{id:"org-apache-impala-analysis-tupledescriptor"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#org-apache-impala-analysis-tupledescriptor"}},[t._v("$")]),t._v(" org.apache.impala.analysis.TupleDescriptor")]),t._v(" "),a("h4",{attrs:{id:"org-apache-impala-catalog-feview"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#org-apache-impala-catalog-feview"}},[t._v("$")]),t._v(" org.apache.impala.catalog.FeView")]),t._v(" "),a("p",[t._v("LocalView")]),t._v(" "),a("p",[t._v("=======")]),t._v(" "),a("h4",{attrs:{id:"类型系统"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#类型系统"}},[t._v("$")]),t._v(" 类型系统")]),t._v(" "),a("h5",{attrs:{id:"org-apache-impala-catalog-primitivetype"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#org-apache-impala-catalog-primitivetype"}},[t._v("$")]),t._v(" org.apache.impala.catalog.PrimitiveType")]),t._v(" "),a("p",[t._v("为什么有了对应的thrift类还要有PrimitiveType？")]),t._v(" "),a("p",[t._v("org.apache.impala.catalog.Type")]),t._v(" "),a("p",[t._v("org.apache.impala.catalog.ScalarType")]),t._v(" "),a("h4",{attrs:{id:"sql解析"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sql解析"}},[t._v("$")]),t._v(" SQL解析")]),t._v(" "),a("h5",{attrs:{id:"org-apache-impala-analysis-statementbase"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#org-apache-impala-analysis-statementbase"}},[t._v("$")]),t._v(" org.apache.impala.analysis.StatementBase")]),t._v(" "),a("p",[t._v("子类：")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("类名")]),t._v(" "),a("th",[t._v("抽象类")]),t._v(" "),a("th",[t._v("说明")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("QueryStmt")]),t._v(" "),a("td",[t._v("T")]),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td",[t._v("ModifyStmt")]),t._v(" "),a("td",[t._v("T")]),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td",[t._v("AlterDbStmt")]),t._v(" "),a("td",[t._v("T")]),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td",[t._v("AlterTableStmt")]),t._v(" "),a("td",[t._v("T")]),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td",[t._v("AlterTableSetColumnStats")]),t._v(" "),a("td",[t._v("T")]),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td",[t._v("AlterTableOrViewSetOwnerStmt")]),t._v(" "),a("td",[t._v("T")]),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td",[t._v("CommentOnStmt")]),t._v(" "),a("td",[t._v("T")]),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td",[t._v("CommentOnTableOrViewStmt")]),t._v(" "),a("td",[t._v("T")]),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td",[t._v("CreateFunctionStmtBase")]),t._v(" "),a("td",[t._v("T")]),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td",[t._v("CreateOrAlterViewStmtBase")]),t._v(" "),a("td",[t._v("T")]),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td",[t._v("AdminFnStmt")]),t._v(" "),a("td"),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td",[t._v("AlterDbSetOwnerStmt")]),t._v(" "),a("td"),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td",[t._v("AlterTableAddColsStmt")]),t._v(" "),a("td"),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td",[t._v("AlterTableAddDropRangePartitionStmt")]),t._v(" "),a("td"),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td",[t._v("AlterTableAddPartitionStmt")]),t._v(" "),a("td"),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td",[t._v("AlterTableAlterColStmt")]),t._v(" "),a("td"),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td",[t._v("AlterTableDropColStmt")]),t._v(" "),a("td"),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td",[t._v("AlterTableDropPartitionStmt")]),t._v(" "),a("td"),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td",[t._v("AlterTableOrViewRenameStmt")]),t._v(" "),a("td"),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td",[t._v("AlterTableRecoverPartitionsStmt")]),t._v(" "),a("td"),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td",[t._v("AlterTableReplaceColsStmt")]),t._v(" "),a("td"),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td",[t._v("AlterTableSetCachedStmt")]),t._v(" "),a("td"),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td",[t._v("AlterTableSetFileFormatStmt")]),t._v(" "),a("td"),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td",[t._v("AlterTableSetLocationStmt")]),t._v(" "),a("td"),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td",[t._v("AlterTableSetOwnerStmt")]),t._v(" "),a("td"),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td",[t._v("AlterTableSetRowFormatStmt")]),t._v(" "),a("td"),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td",[t._v("AlterTableSetStmt")]),t._v(" "),a("td"),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td",[t._v("AlterTableSetTblProperties")]),t._v(" "),a("td"),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td",[t._v("AlterTableSortByStmt")]),t._v(" "),a("td"),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td",[t._v("AlterViewSetOwnerStmt")]),t._v(" "),a("td"),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td",[t._v("AlterViewStmt")]),t._v(" "),a("td"),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td",[t._v("AuthorizationStmt")]),t._v(" "),a("td"),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td",[t._v("CommentOnColumnStmt")]),t._v(" "),a("td"),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td",[t._v("CommentOnDbStmt")]),t._v(" "),a("td"),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td",[t._v("CommentOnTableStmt")]),t._v(" "),a("td"),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td",[t._v("CommentOnViewStmt")]),t._v(" "),a("td"),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td",[t._v("ComputeStatsStmt")]),t._v(" "),a("td"),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td",[t._v("CopyTestCaseStmt")]),t._v(" "),a("td"),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td",[t._v("CreateDataSrcStmt")]),t._v(" "),a("td"),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td",[t._v("CreateDbStmt")]),t._v(" "),a("td"),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td",[t._v("CreateDropRoleStmt")]),t._v(" "),a("td"),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td",[t._v("CreateTableAsSelectStmt")]),t._v(" "),a("td"),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td",[t._v("CreateTableDataSrcStmt")]),t._v(" "),a("td"),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td",[t._v("CreateTableLikeFileStmt")]),t._v(" "),a("td"),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td",[t._v("CreateTableLikeStmt")]),t._v(" "),a("td"),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td",[t._v("CreateTableStmt")]),t._v(" "),a("td"),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td",[t._v("CreateUdaStmt")]),t._v(" "),a("td"),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td",[t._v("CreateUdfStmt")]),t._v(" "),a("td"),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td",[t._v("CreateUdtStmt")]),t._v(" "),a("td"),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td",[t._v("CreateViewStmt")]),t._v(" "),a("td"),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td",[t._v("DeleteStmt")]),t._v(" "),a("td"),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td",[t._v("DescribeDbStmt")]),t._v(" "),a("td"),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td",[t._v("DescribeTableStmt")]),t._v(" "),a("td"),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td",[t._v("DropDataSrcStmt")]),t._v(" "),a("td"),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td",[t._v("DropDbStmt")]),t._v(" "),a("td"),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td",[t._v("DropFunctionStmt")]),t._v(" "),a("td"),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td",[t._v("DropStatsStmt")]),t._v(" "),a("td"),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td",[t._v("DropTableOrViewStmt")]),t._v(" "),a("td"),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td",[t._v("GrantRevokePrivStmt")]),t._v(" "),a("td"),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td",[t._v("GrantRevokeRoleStmt")]),t._v(" "),a("td"),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td",[t._v("InsertStmt")]),t._v(" "),a("td"),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td",[t._v("LoadDataStmt")]),t._v(" "),a("td"),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td",[t._v("ResetMetadataStmt")]),t._v(" "),a("td"),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td",[t._v("SelectStmt")]),t._v(" "),a("td"),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td",[t._v("SetStmt")]),t._v(" "),a("td"),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td",[t._v("ShowCreateFunctionStmt")]),t._v(" "),a("td"),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td",[t._v("ShowCreateTableStmt")]),t._v(" "),a("td"),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td",[t._v("ShowDataSrcsStmt")]),t._v(" "),a("td"),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td",[t._v("ShowDbsStmt")]),t._v(" "),a("td"),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td",[t._v("ShowFilesStmt")]),t._v(" "),a("td"),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td",[t._v("ShowFunctionsStmt")]),t._v(" "),a("td"),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td",[t._v("ShowGrantPrincipalStmt")]),t._v(" "),a("td"),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td",[t._v("ShowRolesStmt")]),t._v(" "),a("td"),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td",[t._v("ShowStatsStmt")]),t._v(" "),a("td"),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td",[t._v("ShowTablesStmt")]),t._v(" "),a("td"),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td",[t._v("TruncateStmt")]),t._v(" "),a("td"),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td",[t._v("UnionStmt")]),t._v(" "),a("td"),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td",[t._v("UpdateStmt")]),t._v(" "),a("td"),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td",[t._v("UseStmt")]),t._v(" "),a("td"),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td",[t._v("ValuesStmt")]),t._v(" "),a("td"),t._v(" "),a("td")])])]),t._v(" "),a("h3",{attrs:{id:"backend"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#backend"}},[t._v("$")]),t._v(" Backend")]),t._v(" "),a("h4",{attrs:{id:"be-src-rpc-tacceptqueueserver-cc"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#be-src-rpc-tacceptqueueserver-cc"}},[t._v("$")]),t._v(" be/src/rpc/TAcceptQueueServer.cc")]),t._v(" "),a("p",[t._v("Impala中所有Thrift Server处理连接的逻辑都在这个类里，包括HiverServer2 Server，Beeswax Server等。")]),t._v(" "),a("p",[t._v("在TAcceptQueueServer构造函数中进行一些初始化：")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("参数")]),t._v(" "),a("th",[t._v("描述")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("processor")]),t._v(" "),a("td",[t._v("Thrift框架相关")])]),t._v(" "),a("tr",[a("td",[t._v("serverTransport")]),t._v(" "),a("td",[t._v("Thrift框架相关")])]),t._v(" "),a("tr",[a("td",[t._v("transportFactory")]),t._v(" "),a("td",[t._v("Thrift框架相关")])]),t._v(" "),a("tr",[a("td",[t._v("protocolFactory")]),t._v(" "),a("td",[t._v("Thrift框架相关")])]),t._v(" "),a("tr",[a("td",[t._v("threadFactory")]),t._v(" "),a("td",[t._v("用于创建task线程")])]),t._v(" "),a("tr",[a("td",[t._v("name")]),t._v(" "),a("td",[t._v("服务名")])]),t._v(" "),a("tr",[a("td",[t._v("maxTasks")]),t._v(" "),a("td",[t._v("处理连接逻辑的最大task数")])]),t._v(" "),a("tr",[a("td",[t._v("queue_timeout_ms")]),t._v(" "),a("td",[t._v("在accept之后，建立task之前的超时时间")])]),t._v(" "),a("tr",[a("td",[t._v("idle_poll_period_ms")]),t._v(" "),a("td",[t._v("等待客户端socket超时的时间")])])])]),t._v(" "),a("p",[t._v("Thrift Server的启动和接受请求以及停止逻辑都在TAcceptQueueServer::serve()中：")]),t._v(" "),a("ol",[a("li",[t._v("启动端口监听")]),t._v(" "),a("li",[t._v("创建用于accept请求的线程池connection_setup_pool，并调用Init()方法进行初始化。")]),t._v(" "),a("li",[t._v("当没有stop时，在循环中执行：\n"),a("ol",[a("li",[t._v("接受一个client的请求，并封装为TAcceptQueueEntry")]),t._v(" "),a("li",[t._v("调用connection_setup_pool.Offer()入队")])])]),t._v(" "),a("li",[t._v("当stop时，关闭serverTransport_和连接池connection_setup_pool，等待tasks队列中所有任务执行完毕。")])]),t._v(" "),a("p",[t._v("一个客户端请求被accept之后，主流程就会启动一个服务线程异步地处理客户端的请求，主要逻辑在TAcceptQueueServer::SetupConnection()中：")]),t._v(" "),a("ol",[a("li",[t._v("创建TAcceptQueueServer::Task，并创建一个对应的线程")]),t._v(" "),a("li",[t._v("当task数量超过maxTasks限制时，出让时间片等待；如果等待超时则清理资源并退出。")]),t._v(" "),a("li",[t._v("当task数量没有超过maxTasks限制，或者提前被唤醒时，则将task加入tasks列表，并启动线程。")])]),t._v(" "),a("p",[t._v("服务线程的的主要逻辑在TAcceptQueueServer::Task::run()中：")]),t._v(" "),a("ol",[a("li",[t._v("调用eventHandler->processContext()处理上下文")]),t._v(" "),a("li",[t._v("处理客户端的请求，或者调用peek()阻塞等待客户端的请求")])]),t._v(" "),a("p",[t._v("可以看出这个类里主要有两个线程池/线程集：")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("名称")]),t._v(" "),a("th",[t._v("connection_setup_pool")]),t._v(" "),a("th",[t._v("maxTasks")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("描述")]),t._v(" "),a("td",[t._v("负责接受请求并分配服务线程")]),t._v(" "),a("td",[t._v("负责处理客户端的请求")])]),t._v(" "),a("tr",[a("td",[t._v("线程最大数")]),t._v(" "),a("td",[t._v("由FLAGS_accepted_cnxn_setup_thread_pool_size设置，默认值是2")]),t._v(" "),a("td",[t._v("由构造函数参数传入")])]),t._v(" "),a("tr",[a("td",[t._v("队列长度")]),t._v(" "),a("td",[t._v("由FLAGS_accepted_cnxn_queue_depth设置，默认值是10000")]),t._v(" "),a("td",[t._v("无限制")])])])]),t._v(" "),a("p",[t._v("Impala之所以要自定义一个TServer，就是想将accept线程和setupConnection线程解耦，从而提高accept的吞吐量。FLAGS_accepted_cnxn_queue_depth默认值是10000，也解释了21050端口的连接数量超过fe_service_thread后为什么会阻塞而不会报错的原因。")]),t._v(" "),a("p",[t._v("其中还记录了一些metric：")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("名称")]),t._v(" "),a("th",[t._v("类型")]),t._v(" "),a("th",[t._v("key")]),t._v(" "),a("th",[t._v("描述")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("queue_size_metric_")]),t._v(" "),a("td",[t._v("Gauge")]),t._v(" "),a("td",[t._v('".connection-setup-queue-size"')]),t._v(" "),a("td",[t._v("connection_setup_pool队列大小")])]),t._v(" "),a("tr",[a("td",[t._v("timedout_cnxns_metric_")]),t._v(" "),a("td",[t._v("Gauge")]),t._v(" "),a("td",[t._v('".timedout-cnxn-requests"')]),t._v(" "),a("td",[t._v("建立连接超时的请求数量")])]),t._v(" "),a("tr",[a("td",[t._v("cnxns_setup_time_us_metric_")]),t._v(" "),a("td",[t._v("Histogram")]),t._v(" "),a("td",[t._v('".connection-setup-time"')]),t._v(" "),a("td",[t._v("建立连接的时间统计")])]),t._v(" "),a("tr",[a("td",[t._v("thread_wait_time_us_metric_")]),t._v(" "),a("td",[t._v("Histogram")]),t._v(" "),a("td",[t._v('".svc-thread-wait-time"')]),t._v(" "),a("td",[t._v("建立连接到处理请求的时间统计")])])])]),t._v(" "),a("p",[t._v("参考："),a("a",{attrs:{href:"https://issues.apache.org/jira/browse/IMPALA-4135",target:"_blank",rel:"noopener noreferrer"}},[t._v("IMPALA-4135"),a("OutboundLink")],1)]),t._v(" "),a("h4",{attrs:{id:"be-src-statestore-statestore-cc"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#be-src-statestore-statestore-cc"}},[t._v("$")]),t._v(" be/src/statestore/statestore.cc")]),t._v(" "),a("h4",{attrs:{id:"be-src-statestore-statestore-subscriber-cc"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#be-src-statestore-statestore-subscriber-cc"}},[t._v("$")]),t._v(" be/src/statestore/statestore-subscriber.cc")]),t._v(" "),a("p",[a("code",[t._v("Statestored")]),t._v("类似于一个在内存中维护着一组 "),a("code",[t._v("Topic")]),t._v("的消息队列，但是和常见消息队列的客户端有"),a("code",[t._v("Producer")]),t._v("和"),a("code",[t._v("Consumer")]),t._v("不同的是，它的客户端只有一个"),a("code",[t._v("Subscriber")]),t._v("角色。")]),t._v(" "),a("p",[t._v("如下图所示，"),a("code",[t._v("Subscriber")]),t._v("通过交换"),a("code",[t._v("Topic")]),t._v("更新消息定期与"),a("code",[t._v("Statestored")]),t._v("通信："),a("code",[t._v("Subscriber")]),t._v("首先向"),a("code",[t._v("Statestored")]),t._v("d注册"),a("code",[t._v("Topic")]),t._v("，"),a("code",[t._v("Statestored")]),t._v("向"),a("code",[t._v("Subscriber")]),t._v("发送其订阅的"),a("code",[t._v("Topic")]),t._v("列表的更新，"),a("code",[t._v("Subscriber")]),t._v("返回"),a("code",[t._v("Topic")]),t._v("的变更。"),a("code",[t._v("Statestored")]),t._v("还会频繁地发送心跳信息以确认连接是有效。如果"),a("code",[t._v("Subscriber")]),t._v("一段时间没有收到"),a("code",[t._v("Statestored")]),t._v('的心跳信息会进入"恢复模式"，不断尝试向'),a("code",[t._v("Statestored")]),t._v("重新注册。")]),t._v(" "),a("p",[a("img",{attrs:{src:e(332),alt:"image-20231008231411236"}})]),t._v(" "),a("p",[a("code",[t._v("Statestored")]),t._v("内部维护的数据结构如下图所示：")]),t._v(" "),a("p",[a("img",{attrs:{src:e(333),alt:"image-20231008231755739"}})]),t._v(" "),a("h5",{attrs:{id:"statestoresubscriber的注册流程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#statestoresubscriber的注册流程"}},[t._v("$")]),t._v(" StatestoreSubscriber的注册流程")]),t._v(" "),a("p",[t._v("StatestoreSubscriber的"),a("a",{attrs:{href:"https://github.com/apache/impala/blob/4.2.0/be/src/statestore/statestore-subscriber.h#L76-L79",target:"_blank",rel:"noopener noreferrer"}},[t._v("构造函数"),a("OutboundLink")],1),t._v("主要指明了"),a("code",[t._v("Statestored")]),t._v("的地址和"),a("code",[t._v("Statestored")]),t._v("向"),a("code",[t._v("Subscriber")]),t._v("发送心跳的地址，参数如下：")]),t._v(" "),a("ol",[a("li",[t._v("subscriber_id："),a("code",[t._v("Subscriber")]),t._v("编号")]),t._v(" "),a("li",[t._v("heartbeat_address："),a("code",[t._v("Statestored")]),t._v("向"),a("code",[t._v("Subscriber")]),t._v("发送心跳的地址")]),t._v(" "),a("li",[t._v("statestore_address："),a("code",[t._v("Statestored")]),t._v("的地址")])]),t._v(" "),a("p",[a("code",[t._v("Subscriber")]),t._v("在"),a("a",{attrs:{href:"https://github.com/apache/impala/blob/4.2.0/be/src/statestore/statestore-subscriber.cc#L158-L177",target:"_blank",rel:"noopener noreferrer"}},[t._v("AddTopic()函数"),a("OutboundLink")],1),t._v("中将"),a("code",[t._v("Topic")]),t._v("相关信息添加到内部的topic_registrations_结构中，AddTopic()参数跟"),a("a",{attrs:{href:"https://github.com/apache/impala/blob/4.2.0/common/thrift/StatestoreService.thrift#L161-L180",target:"_blank",rel:"noopener noreferrer"}},[t._v("TTopicRegistration"),a("OutboundLink")],1),t._v("的结构基本是一一对应的：")]),t._v(" "),a("ol",[a("li",[t._v("topic_id："),a("code",[t._v("Topic")]),t._v("编号")]),t._v(" "),a("li",[t._v("is_transient："),a("code",[t._v("Subscriber")]),t._v("断开连接后Statestored需要删除的消息")]),t._v(" "),a("li",[t._v("populate_min_subscriber_topic_version：在"),a("code",[t._v("Statestored")]),t._v("发送给"),a("code",[t._v("Subscriber")]),t._v("的"),a("code",[t._v("Topic")]),t._v("更新中填充min_subscriber_topic_version字段，用于需要确定所有的"),a("code",[t._v("Subscriber")]),t._v("都处理完了某个特定更新的场景")]),t._v(" "),a("li",[t._v("filter_prefix：只接收匹配该前缀的消息")]),t._v(" "),a("li",[t._v("callback："),a("code",[t._v("Subscriber")]),t._v("接收到"),a("code",[t._v("Statestored")]),t._v("发送的"),a("code",[t._v("Topic")]),t._v("更新后执行的回调函数")])]),t._v(" "),a("p",[t._v("AddTopic()之后就可以调用StatestoreSubscriber的Start()函数了，主要完成三件事：")]),t._v(" "),a("ul",[a("li",[t._v("启动用于接收"),a("code",[t._v("Statestored")]),t._v("心跳请求的Thrift Server")]),t._v(" "),a("li",[t._v("调用Register()函数向"),a("code",[t._v("Statestored")]),t._v("发送注册请求")]),t._v(" "),a("li",[t._v("启动检测恢复模式的RecoveryModeChecker线程")])]),t._v(" "),a("p",[a("code",[t._v("StatestoreSubscriber")]),t._v("在"),a("a",{attrs:{href:"https://github.com/apache/impala/blob/4.2.0/be/src/statestore/statestore-subscriber.cc#L179-L224",target:"_blank",rel:"noopener noreferrer"}},[t._v("Register()函数"),a("OutboundLink")],1),t._v("中向 "),a("code",[t._v("Statestored")]),t._v(" 发送注册"),a("code",[t._v("Topic")]),t._v("的请求"),a("a",{attrs:{href:"https://github.com/apache/impala/blob/4.2.0/common/thrift/StatestoreService.thrift#L182-L194",target:"_blank",rel:"noopener noreferrer"}},[t._v("TRegisterSubscriberRequest"),a("OutboundLink")],1),t._v("，将AddTopic()函数中保存的"),a("code",[t._v("Topic")]),t._v("信息topic_registrations发送到"),a("code",[t._v("Statestored")]),t._v("。其中TRegisterSubscriberRequest结构如下：")]),t._v(" "),a("ol",[a("li",[t._v("protocol_version：协议版本号")]),t._v(" "),a("li",[t._v("subscriber_id：集群唯一的"),a("code",[t._v("Subscriber")]),t._v("编号")]),t._v(" "),a("li",[t._v("subscriber_location："),a("code",[t._v("Statestored")]),t._v("向"),a("code",[t._v("Subscriber")]),t._v("发送心跳的地址")]),t._v(" "),a("li",[t._v("topic_registrations："),a("code",[t._v("Topic")]),t._v("的描述")])]),t._v(" "),a("p",[t._v("注册请求会返回给客户端一个registration_id用于维持与"),a("code",[t._v("Statestored")]),t._v("心跳时候的校验。")]),t._v(" "),a("h5",{attrs:{id:"statestored接收subscriber注册的流程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#statestored接收subscriber注册的流程"}},[t._v("$")]),t._v(" Statestored接收Subscriber注册的流程")]),t._v(" "),a("p",[t._v("当"),a("code",[t._v("Statestored")]),t._v(" 接收到"),a("code",[t._v("Subscriber")]),t._v("注册请求时：")]),t._v(" "),a("ol",[a("li",[t._v("首先依次检查"),a("code",[t._v("Topic")]),t._v("是否存在，不存在则创建")]),t._v(" "),a("li",[t._v("如果"),a("code",[t._v("Subscriber")]),t._v("已经注册过，则取消之前的注册，包括清除之前"),a("code",[t._v("Subscriber")]),t._v("关联的连接，failure_detector_，metric以及所有的transient记录。")]),t._v(" "),a("li",[t._v("把subscriber_id，registration_id封装成"),a("code",[t._v("ScheduledSubscriberUpdate")]),t._v("，放入三个线程池队列中进行调度。")])]),t._v(" "),a("p",[a("code",[t._v("Statestored")]),t._v("中分了三个独立的线程池来保证互相之间不会阻塞：")]),t._v(" "),a("ul",[a("li",[t._v("subscriber_topic_update_threadpool_：负责"),a("code",[t._v("Topic")]),t._v("更新")]),t._v(" "),a("li",[t._v("subscriber_priority_topic_update_threadpool_：优先"),a("code",[t._v("Topic")]),t._v("更新，优先"),a("code",[t._v("Topic")]),t._v("指的是数据量很小但是对延迟很敏感的"),a("code",[t._v("Topic")])]),t._v(" "),a("li",[t._v("subscriber_heartbeat_threadpool_：用于维持心跳检测")])]),t._v(" "),a("p",[t._v("如何实现三个线程池周期性调度的呢？后面的流程可以看到每次执行任务之后又会往线程池队列中提交一个新的任务。")]),t._v(" "),a("h5",{attrs:{id:"statestored向subscriber发送heartbeat请求"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#statestored向subscriber发送heartbeat请求"}},[t._v("$")]),t._v(" Statestored向Subscriber发送Heartbeat请求")]),t._v(" "),a("p",[a("code",[t._v("Subscriber")]),t._v("注册后相关任务放入"),a("code",[t._v("Statestored")]),t._v("线程池中，线程池立即会向"),a("code",[t._v("Subscriber")]),t._v("发送一个Heartbeat请求，具体的处理逻辑在"),a("a",{attrs:{href:"https://github.com/apache/impala/blob/4.2.0/be/src/statestore/statestore.cc#L884-L1011",target:"_blank",rel:"noopener noreferrer"}},[t._v("DoSubscriberUpdate()函数"),a("OutboundLink")],1),t._v("中：")]),t._v(" "),a("ol",[a("li",[t._v("检查"),a("code",[t._v("Statestored")]),t._v("侧的"),a("code",[t._v("Subscriber")]),t._v("结构是否存在，不存在意味着"),a("code",[t._v("Subscriber")]),t._v("已经重新发送了注册请求，此次心跳对应的旧"),a("code",[t._v("Subscriber")]),t._v("结构已经被删除")]),t._v(" "),a("li",[t._v("每次的"),a("code",[t._v("ScheduledSubscriberUpdate")]),t._v("记录了一个deadline时间点，执行线程通过sleep达到延迟相应时间段的目的")]),t._v(" "),a("li",[t._v("向"),a("code",[t._v("Subscriber")]),t._v("发送Heartbeat请求：\n"),a("ol",[a("li",[t._v("如果成功则记录timestamp用于监测，同时计算下一次heartbeat的dealine，封装成ScheduledSubscriberUpdate，放入线程池的队列")]),t._v(" "),a("li",[t._v("如果失败了则取消注册的"),a("code",[t._v("Subscriber")])])])])]),t._v(" "),a("h5",{attrs:{id:"subscriber的失败检查和恢复流程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#subscriber的失败检查和恢复流程"}},[t._v("$")]),t._v(" Subscriber的失败检查和恢复流程")]),t._v(" "),a("p",[t._v("在"),a("code",[t._v("StatestoreSubscriber")]),t._v("的构造函数中初始化了一个"),a("a",{attrs:{href:"https://github.com/apache/impala/blob/4.2.0/be/src/statestore/statestore-subscriber.cc#L131",target:"_blank",rel:"noopener noreferrer"}},[t._v("TimeoutFailureDetector"),a("OutboundLink")],1),t._v("，TimeoutFailureDetector中维护了StatestoreSubscriber"),a("a",{attrs:{href:"https://github.com/apache/impala/blob/4.2.0/be/src/statestore/statestore-subscriber.cc#L357-L366",target:"_blank",rel:"noopener noreferrer"}},[t._v("最近一次收到心跳请求的时间"),a("OutboundLink")],1),t._v("，同时StatestoreSubscriber会启动线程周期性地（每5秒）检查最后一次收到心跳请求的时间间隔，如果超过一定的阈值（默认30秒）则认为与"),a("code",[t._v("Statestored")]),t._v("的连接已经断开并进入恢复模式，恢复线程会在此过程中加锁，同时在死循环中不断地重试注册过程，流程见"),a("a",{attrs:{href:"https://github.com/apache/impala/blob/4.2.0/be/src/statestore/statestore-subscriber.cc#L288-L339",target:"_blank",rel:"noopener noreferrer"}},[t._v("RecoveryModeChecker()"),a("OutboundLink")],1),t._v(" 。")]),t._v(" "),a("h5",{attrs:{id:"statestored向subscriber发送updatestate请求"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#statestored向subscriber发送updatestate请求"}},[t._v("$")]),t._v(" Statestored向Subscriber发送UpdateState请求")]),t._v(" "),a("p",[t._v("整体流程和"),a("code",[t._v("Statestored")]),t._v("向"),a("code",[t._v("Subscriber")]),t._v("发送Heartbeat请求的流程类似，其中"),a("code",[t._v("Statestored")]),t._v("是如何构建发送给"),a("code",[t._v("Subscriber")]),t._v("的增量更新呢？")]),t._v(" "),a("p",[t._v("在"),a("a",{attrs:{href:"https://github.com/apache/impala/blob/4.2.0/be/src/statestore/statestore.cc#L242-L292",target:"_blank",rel:"noopener noreferrer"}},[t._v("Statestore::Topic::BuildDelta()函数"),a("OutboundLink")],1),t._v("中实现了"),a("code",[t._v("Statestored")]),t._v("侧构建增量更新的逻辑：")]),t._v(" "),a("ol",[a("li",[t._v("将记录的last_processed_version设置到TTopicDelta的from_version字段")]),t._v(" "),a("li",[a("code",[t._v("topic_update_log_")]),t._v("中按版本号记录了消息，在"),a("code",[t._v("topic_update_log_")]),t._v("中首先定位到last_processed_version的条目，然后依次将剩余的消息条目加入增量更新TTopicDelta列表中。如果是全量更新的话则忽略标记为删除的消息，前缀匹配也是在这一步完成的。")]),t._v(" "),a("li",[t._v("设置TTopicDelta的to_version字段")])]),t._v(" "),a("p",[t._v("在"),a("a",{attrs:{href:"https://github.com/apache/impala/blob/4.2.0/be/src/statestore/statestore.cc#L771-L812",target:"_blank",rel:"noopener noreferrer"}},[t._v("GatherTopicUpdates()函数"),a("OutboundLink")],1),t._v("中进行了TTopicDelta的min_subscriber_topic_version字段的处理。")]),t._v(" "),a("h5",{attrs:{id:"subscriber的接收updatestate请求流程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#subscriber的接收updatestate请求流程"}},[t._v("$")]),t._v(" Subscriber的接收UpdateState请求流程")]),t._v(" "),a("p",[t._v("在"),a("a",{attrs:{href:"https://github.com/apache/impala/blob/4.2.0/be/src/statestore/statestore-subscriber.cc#L368-L493",target:"_blank",rel:"noopener noreferrer"}},[t._v("UpdateState()函数"),a("OutboundLink")],1),t._v("中对"),a("code",[t._v("Statestored")]),t._v("发来的更新请求进行了处理：")]),t._v(" "),a("ol",[a("li",[t._v("首先对lock_尝试加锁，如果加锁失败则略过本次更新。")]),t._v(" "),a("li",[t._v("然后依次对所有"),a("code",[t._v("Topic")]),t._v("对应的update_lock尝试加锁，加锁失败同样会略过本次更新。")]),t._v(" "),a("li",[t._v("之后依次校验"),a("code",[t._v("Statestored")]),t._v("期望的"),a("code",[t._v("Topic")]),t._v("版本号是否能对应上，如果对应不上则标记该"),a("code",[t._v("Topic")]),t._v("一个from_version，等待"),a("code",[t._v("Statestored")]),t._v("下次发送一个正确的"),a("code",[t._v("Topic")]),t._v("版本范围。同时依次调用callback函数对增量更新进行处理，收集增量的更新并返回给"),a("code",[t._v("Statestored")]),t._v("。")])]),t._v(" "),a("p",[t._v("这块代码在设计的时候着重考虑了处理的轻量化，以避免造成消息发送的延迟过高。")]),t._v(" "),a("h5",{attrs:{id:"statestored处理subscriber对updatestate请求的响应"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#statestored处理subscriber对updatestate请求的响应"}},[t._v("$")]),t._v(" Statestored处理Subscriber对UpdateState请求的响应")]),t._v(" "),a("p",[t._v("在"),a("a",{attrs:{href:"https://github.com/apache/impala/blob/4.2.0/be/src/statestore/statestore.cc#L666-L769",target:"_blank",rel:"noopener noreferrer"}},[t._v("SendTopicUpdate函数"),a("OutboundLink")],1),t._v("中主要流程如下：")]),t._v(" "),a("ol",[a("li",[t._v("更新"),a("code",[t._v("Subscriber")]),t._v("的last_processed_version，以便于下次发送UpdateState请求的时候构建增量更新")]),t._v(" "),a("li",[t._v("如果"),a("code",[t._v("Subscriber")]),t._v("发送的消息中设置了from_version，则将last_processed_version重置为from_version")]),t._v(" "),a("li",[t._v("如果"),a("code",[t._v("Subscriber")]),t._v("发送的消息中标记了clear_topic_entries，则清空"),a("code",[t._v("Topic")])]),t._v(" "),a("li",[t._v("将"),a("code",[t._v("Subscriber")]),t._v("发送的消息添加到"),a("code",[t._v("Statestored")]),t._v("本地维护的数据结构中")])]),t._v(" "),a("h5",{attrs:{id:"参考-6"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#参考-6"}},[t._v("$")]),t._v(" 参考")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://blog.csdn.net/yu616568/article/details/58642789",target:"_blank",rel:"noopener noreferrer"}},[t._v("Impala源码之订阅发布系统的实现"),a("OutboundLink")],1)]),t._v(" "),a("h2",{attrs:{id:"udf开发"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#udf开发"}},[t._v("$")]),t._v(" UDF开发")]),t._v(" "),a("h3",{attrs:{id:"内存申请"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#内存申请"}},[t._v("$")]),t._v(" 内存申请")]),t._v(" "),a("p",[t._v("如何申请自动回收的内存，并用类初始化它？")]),t._v(" "),a("p",[t._v("Is_null初始为什么是false？(ptr=nullptr, len=0)")]),t._v(" "),a("p",[t._v("函数内dst内存一直不会serialize？")]),t._v(" "),a("p",[t._v("对象生命周期")]),t._v(" "),a("p",[t._v("Roaringbitmap.reset?")])])}),[],!1,null,null,null);a.default=_.exports}}]);