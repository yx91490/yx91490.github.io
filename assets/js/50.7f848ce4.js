(window.webpackJsonp=window.webpackJsonp||[]).push([[50],{465:function(t,e,a){"use strict";a.r(e);var r=a(18),s=Object(r.a)({},(function(){var t=this,e=t._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"clickhouse学习笔记"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#clickhouse学习笔记"}},[t._v("$")]),t._v(" ClickHouse学习笔记")]),t._v(" "),e("h2",{attrs:{id:"架构原理"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#架构原理"}},[t._v("$")]),t._v(" 架构原理")]),t._v(" "),e("p",[t._v("列式存储除了降低IO和存储的压力外，还为向量化执行创造了条件。")]),t._v(" "),e("p",[t._v("ClickHouse目前使用SSE4.2指令集实现向量化执行")]),t._v(" "),e("h2",{attrs:{id:"使用指南"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#使用指南"}},[t._v("$")]),t._v(" 使用指南")]),t._v(" "),e("p",[t._v("ClickHouse SQL是大小写敏感的。")]),t._v(" "),e("h3",{attrs:{id:"table-ttl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#table-ttl"}},[t._v("$")]),t._v(" Table TTL")]),t._v(" "),e("p",[t._v("表TTL的语法：")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("TTL expr\n    [DELETE|TO DISK 'xxx'|TO VOLUME 'xxx'][, DELETE|TO DISK 'aaa'|TO VOLUME 'bbb'] ...\n    [WHERE conditions]\n    [GROUP BY key_expr [SET v1 = aggr_func(v1) [, v2 = aggr_func(v2) ...]] ]\n")])])]),e("p",[t._v("当TTL表达式的结果小于当前时间的时候，意味着此行数据已经过期，则执行对应的操作。")]),t._v(" "),e("p",[t._v("TTL规则类型包括：")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("规则")]),t._v(" "),e("th",[t._v("动作")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("DELETE")]),t._v(" "),e("td",[t._v("删除过期的行")])]),t._v(" "),e("tr",[e("td",[t._v("TO DISK 'aaa'")]),t._v(" "),e("td",[t._v("将part移动到磁盘'aaa'，需要part的所有行都满足条件")])]),t._v(" "),e("tr",[e("td",[t._v("TO VOLUME 'bbb'")]),t._v(" "),e("td",[t._v("将part移动到磁盘'bbb'，需要part的所有行都满足条件")])]),t._v(" "),e("tr",[e("td",[t._v("GROUP BY")]),t._v(" "),e("td",[t._v("聚合过期的行")])])])]),t._v(" "),e("p",[t._v("WHERE语句指定过期的行中删除或者聚合哪些行（没法应用于移动）。")]),t._v(" "),e("p",[t._v("GROUP BY表达式必须是表主键的前缀。")]),t._v(" "),e("p",[t._v("例子：")]),t._v(" "),e("p",[t._v("设置表的过期策略的时候，一般都是保留最近连续一段时间的数据。比如这样定义表结构是根据dt保留最近一周的数据：")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("CREATE TABLE ttl_demo\n(\n    `id` Int32,\n    `dt` String COMMENT 'dt分区字段',\n    `hour` String COMMENT '小时字段'\n)\nENGINE = MergeTree()\nORDER BY id\nTTL parseDateTimeBestEffort(dt) + toIntervalWeek(1);\n")])])]),e("p",[t._v("有个业务方的需求有点奇怪，有一张表他希望保留最近一个月的数据，以及历史每天23点的数据。")]),t._v(" "),e("p",[t._v("一开始以为用TTL做不了，需要写任务每天定时删数据，后来仔细想了一下其实ClickHouse的数据过期策略的粒度不是分区，而是细分到了每一行，将这种特定的过期策略转化为对应的TTL表达式就可以达到目的了：")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("ALTER TABLE ttl_demo MODIFY TTL if(hour = '23', toDate('2105-01-01'), parseDateTimeBestEffort(dt) + toIntervalWeek(1));\n")])])]),e("p",[t._v("表达式的意思是如果hour值等于23则返回一个不会过期的日期，否则返回dt加1周的日期。")]),t._v(" "),e("p",[t._v("我们来验证一下：")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("insert into ttl_demo values(2021080101, '20210801', '01'), (2021080123, '20210801', '23'), (2021090101, '20210901', '01');\nselect * from ttl_demo;\n┌─────────id─┬─dt───────┬─hour─┐\n│ 2021080101 │ 20210801 │ 01   │\n│ 2021080123 │ 20210801 │ 23   │\n│ 2021090101 │ 20210901 │ 01   │\n└────────────┴──────────┴──────┘\n\n-- 强制回收掉过期数据\nOPTIMIZE TABLE ttl_demo FINAL;\n\nselect * from ttl_demo;\n┌─────────id─┬─dt───────┬─hour─┐\n│ 2021080123 │ 20210801 │ 23   │\n│ 2021090101 │ 20210901 │ 01   │\n└────────────┴──────────┴──────┘\n")])])]),e("p",[t._v("后来看了官方文档上的TTL表达式语法发现后面还可以指定一个WHERE语句，于是试了试表达式这样写也是OK的：")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("ALTER TABLE ttl_demo MODIFY TTL parseDateTimeBestEffort(dt) + toIntervalWeek(1)\nwhere hour != '23';\n")])])]),e("p",[t._v("从这里也可以看出ClickHouse这个手动挡的枪是有多么的“灵活”：虽然不是最简便的，但确实是可以最大程度发挥你主观能动性的一把武器。")]),t._v(" "),e("h4",{attrs:{id:"参考"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#参考"}},[t._v("$")]),t._v(" 参考")]),t._v(" "),e("p",[e("a",{attrs:{href:"https://clickhouse.tech/docs/en/engines/table-engines/mergetree-family/mergetree/#mergetree-table-ttl",target:"_blank",rel:"noopener noreferrer"}},[t._v("Table TTL"),e("OutboundLink")],1)]),t._v(" "),e("p",[e("a",{attrs:{href:"https://clickhouse.tech/docs/en/sql-reference/statements/alter/ttl/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Manipulations with Table TTL"),e("OutboundLink")],1)]),t._v(" "),e("p",[e("a",{attrs:{href:"https://clickhouse.tech/docs/en/sql-reference/statements/optimize/",target:"_blank",rel:"noopener noreferrer"}},[t._v("OPTIMIZE Statement"),e("OutboundLink")],1)])])}),[],!1,null,null,null);e.default=s.exports}}]);