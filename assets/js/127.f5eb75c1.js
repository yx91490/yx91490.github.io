(window.webpackJsonp=window.webpackJsonp||[]).push([[127],{456:function(t,a,s){"use strict";s.r(a);var n=s(10),e=Object(n.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"condition笔记"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#condition笔记"}},[t._v("$")]),t._v(" Condition笔记")]),t._v(" "),a("h2",{attrs:{id:"condition-javadoc"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#condition-javadoc"}},[t._v("$")]),t._v(" Condition JavaDoc")]),t._v(" "),a("h3",{attrs:{id:"类注释"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#类注释"}},[t._v("$")]),t._v(" 类注释")]),t._v(" "),a("p",[t._v("Condition将对象监视方法(wait、notify和notifyAll)分解为不同的对象，通过将它们与任意Lock实现结合使用，从而产生每个对象具有多个等待集的效果。锁代替了同步方法和语句的使用，Condition代替了对象监视器方法的使用。")]),t._v(" "),a("p",[t._v("Condition(也称为条件队列或条件变量)提供了一种方法，让一个线程暂停执行(“等待”)，直到另一个线程通知某个状态条件现在可能为真。因为对这个共享状态信息的访问发生在不同的线程中，所以必须保护它，因此将某种形式的锁与条件相关联。等待条件提供的关键属性是，它原子地释放关联的锁并挂起当前线程，就像Object.wait。")]),t._v(" "),a("p",[t._v("Condition实例本质上是绑定到锁的。要获取特定Lock实例的Condition实例，请使用它的newCondition()方法。")]),t._v(" "),a("p",[t._v("例如，假设我们有一个支持put和take方法的有界缓冲区。如果在空缓冲区上尝试执行take操作，则线程将阻塞，直到有元素可以获取；如果试图在一个已满的缓冲区上执行put操作，那么线程将会阻塞，直到空间可用为止。我们希望在单独的等待集中保持等待put线程和take线程，这样我们就可以在缓冲区中元素或空间可用时一次只通知一个线程。这可以使用两个Condition实例来实现。")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("BoundedBuffer")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n   "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("final")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Lock")]),t._v(" lock "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ReentrantLock")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n   "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("final")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Condition")]),t._v(" notFull  "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" lock"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("newCondition")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n   "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("final")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Condition")]),t._v(" notEmpty "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" lock"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("newCondition")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n\n   "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("final")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" items "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n   "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" putptr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" takeptr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" count"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n   "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("put")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),t._v(" x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throws")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("InterruptedException")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n     lock"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("lock")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n     "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("try")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n       "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("count "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" items"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n         notFull"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("await")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n       items"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("putptr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n       "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),t._v("putptr "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" items"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" putptr "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n       "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),t._v("count"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n       notEmpty"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("signal")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n     "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("finally")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n       lock"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("unlock")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n     "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n   "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n   "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("take")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throws")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("InterruptedException")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n     lock"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("lock")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n     "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("try")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n       "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("count "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n         notEmpty"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("await")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n       "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),t._v(" x "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" items"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("takeptr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n       "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),t._v("takeptr "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" items"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" takeptr "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n       "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("count"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n       notFull"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("signal")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n       "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n     "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("finally")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n       lock"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("unlock")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n     "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n   "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("(ArrayBlockingQueue类提供了这个功能，所以不必实现这个用法示例类。)")]),t._v(" "),a("p",[t._v("Condition实现可以提供与Object监视器方法不同的行为和语义，比如保证通知的顺序，或者在执行通知时不需要持有锁。如果实现提供了这样专门的语义，那么实现必须标明这些语义。")]),t._v(" "),a("p",[t._v("注意，Condition实例只是普通对象，它们本身可以用作synchronized 语句中的目标对象，并且可以调用它们自己的wait和notify监视方法。获取Condition实例的监视器锁，或使用它的监视器方法，与获取与Condition关联的锁或使用它的wait和signal方法没有指定的关系。为了避免混淆，建议您永远不要以这种方式使用Condition实例，除非在它们自己的实现中。")]),t._v(" "),a("p",[t._v("除非注明，否则为任何参数传递空值将导致抛出NullPointerException。")]),t._v(" "),a("h4",{attrs:{id:"实现注意事项"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#实现注意事项"}},[t._v("$")]),t._v(" 实现注意事项")]),t._v(" "),a("p",[t._v("当等待Condition时，通常允许发生“虚假唤醒”，这是对底层平台语义的让步。这对大多数应用程序几乎没有实际影响，因为Condition应该始终在循环中wait，测试正在等待的状态谓词。实现类有假设不会发生虚假唤醒的自由，但建议应用程序开发者始终假设它们可以发生，因此始终在循环中wait。")]),t._v(" "),a("p",[t._v("条件等待的三种形式(可中断、不可中断和定时)在某些平台上实现的容易程度和性能特征上可能有所不同。特别是，提供这些特性并维护特定的语义(如排序保证)可能很困难。此外，中断线程的实际挂起的能力在所有平台上不一定都是可行的。")]),t._v(" "),a("p",[t._v("因此，实现不需要为所有三种等待形式定义完全相同的保证或语义，也不需要支持线程的实际挂起的中断。")]),t._v(" "),a("p",[t._v("一个实现需要清楚地记录每个wait方法所提供的语义和保证，当一个实现确实支持线程挂起的中断时，它必须遵守在这个接口中定义的中断语义。")]),t._v(" "),a("p",[t._v("由于中断通常意味着取消，而且对中断的检查通常不频繁，因此实现类更倾向于响应中断而不是正常的方法返回。即使可以证明中断发生在另一个可能解除线程阻塞的操作之后，也是如此。实现类应该记录这种表现。")]),t._v(" "),a("h3",{attrs:{id:"await方法注释"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#await方法注释"}},[t._v("$")]),t._v(" await方法注释")]),t._v(" "),a("p",[t._v("让当前线程等待，直到收到信号或被中断。")]),t._v(" "),a("p",[t._v("与此Condition关联的锁被原子性地释放，同时当前线程被禁止进行线程调度，并且处于休眠状态，直到发生以下四种情况之一：")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("其他线程调用此Condition的signal()方法，当前线程恰好被选为要被唤醒的线程;或")])]),t._v(" "),a("li",[a("p",[t._v("其他线程调用这个Condition的signalAll()方法;或")])]),t._v(" "),a("li",[a("p",[t._v("其他线程中断当前线程，并支持中断挂起的线程;或")])]),t._v(" "),a("li",[a("p",[t._v("一个“虚假的唤醒”发生了。")])])]),t._v(" "),a("p",[t._v("在所有情况下，当前线程在方法返回之前必须重新获得与此Condition相关联的锁。当线程返回时，会保证它持有这个锁。")]),t._v(" "),a("p",[t._v("如果当前线程：")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("在进入该方法时中断状态已被设置;或")])]),t._v(" "),a("li",[a("p",[t._v("在等待时被中断，并且支持挂起线程的中断，")])])]),t._v(" "),a("p",[t._v("然后会抛出InterruptedException，并清除当前线程的中断状态。在第一种情况下，没有指定是否在释放锁之前进行中断测试。")]),t._v(" "),a("h4",{attrs:{id:"实现注意事项-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#实现注意事项-2"}},[t._v("$")]),t._v(" 实现注意事项")]),t._v(" "),a("p",[t._v("当调用此方法时，假定当前线程持有与此Condition关联的锁。确定是否是这种情况，以及如果不是该如何响应取决于具体实现。通常，会抛出一个异常(例如IllegalMonitorStateException)，并且实现必须标明这个事实。")]),t._v(" "),a("p",[t._v("一个实现可以更倾向于响应一个中断，而不是响应一个signal的正常方法返回。这种情况下，实现类必须确保将signal重定向到另一个等待线程(如果有的话)。")]),t._v(" "),a("h3",{attrs:{id:"awaituninterruptibly方法注释"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#awaituninterruptibly方法注释"}},[t._v("$")]),t._v(" awaitUninterruptibly方法注释")]),t._v(" "),a("p",[t._v("使当前线程等待，直到收到信号。")]),t._v(" "),a("p",[t._v("与此Condition关联的锁被原子性地释放，同时当前线程被禁止进行线程调度，并且处于休眠状态，直到发生以下三种情况之一：")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("其他线程调用此Condition的signal()方法，当前线程恰好被选为要被唤醒的线程;或")])]),t._v(" "),a("li",[a("p",[t._v("其他线程调用这个Condition的signalAll()方法;或")])]),t._v(" "),a("li",[a("p",[t._v("一个“虚假的唤醒”发生了。")])])]),t._v(" "),a("p",[t._v("在所有情况下，当前线程在方法返回之前必须重新获得与此Condition相关联的锁。当线程返回时，会保证它持有这个锁。")]),t._v(" "),a("p",[t._v("如果当前线程的中断状态是在它进入这个方法时设置的，或者它在等待时被中断，它将继续等待直到收到信号。当它最终从这个方法返回时，它的中断状态仍将被设置。")]),t._v(" "),a("h4",{attrs:{id:"实现注意事项-3"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#实现注意事项-3"}},[t._v("$")]),t._v(" 实现注意事项")]),t._v(" "),a("p",[t._v("当调用此方法时，假定当前线程持有与此Condition关联的锁。确定是否是这种情况，以及如果不是该如何响应取决于具体实现。通常，会抛出一个异常(例如IllegalMonitorStateException)，并且实现必须标明这个事实。")]),t._v(" "),a("h3",{attrs:{id:"awaitnanos方法注释"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#awaitnanos方法注释"}},[t._v("$")]),t._v(" awaitNanos方法注释")]),t._v(" "),a("p",[t._v("使当前线程等待，直到收到信号或被中断，或到了指定的等待时间。")]),t._v(" "),a("p",[t._v("与此Condition关联的锁被原子性地释放，同时当前线程被禁止进行线程调度，并且处于休眠状态，直到发生以下五种情况之一：")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("其他线程调用此Condition的signal()方法，当前线程恰好被选为要被唤醒的线程;或")])]),t._v(" "),a("li",[a("p",[t._v("其他线程调用这个Condition的signalAll()方法;或")])]),t._v(" "),a("li",[a("p",[t._v("其他线程中断当前线程，同时支持中断挂起线程;或")])]),t._v(" "),a("li",[a("p",[t._v("过了指定的等待时间;或")])]),t._v(" "),a("li",[a("p",[t._v("一个“虚假的唤醒”发生了。")])])]),t._v(" "),a("p",[t._v("在所有情况下，当前线程在方法返回之前必须重新获得与此Condition相关联的锁。当线程返回时，会保证它持有这个锁。")]),t._v(" "),a("p",[t._v("如果当前线程:")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("在进入该方法时中断状态已被设置;或")])]),t._v(" "),a("li",[a("p",[t._v("在等待时被中断，并且支持挂起线程的中断，")])])]),t._v(" "),a("p",[t._v("然后会抛出InterruptedException，并清除当前线程的中断状态。在第一种情况下，没有指定是否在释放锁之前进行中断测试。")]),t._v(" "),a("p",[t._v("该方法根据提供的nanosTimeout值返回待估算的等待纳秒数，如果超时则返回一个小于或等于零的值。当wait已经返回但等待的条件仍然不成立时，此值可用于确定是否重新等待以及重新等待多长时间。这种方法的典型用法如下：")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("boolean")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("aMethod")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("long")]),t._v(" timeout"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("TimeUnit")]),t._v(" unit"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n   "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("long")]),t._v(" nanos "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" unit"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("toNanos")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("timeout"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n   lock"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("lock")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n   "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("try")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n     "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("conditionBeingWaitedFor")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n       "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("nanos "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0L")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n         "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n       nanos "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" theCondition"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("awaitNanos")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("nanos"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n     "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n     "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...")]),t._v("\n   "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("finally")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n     lock"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("unlock")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n   "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("设计注意:此方法需要纳秒参数，以避免在报告剩余时间时出现截断错误。这种精度损失将使程序员难以确保总等待时间在系统上不会比重新等待发生时指定的时间短。")]),t._v(" "),a("h4",{attrs:{id:"实现注意事项-4"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#实现注意事项-4"}},[t._v("$")]),t._v(" 实现注意事项")]),t._v(" "),a("p",[t._v("当调用此方法时，假定当前线程持有与此Condition关联的锁。这取决于实现来确定是否为这种情况，如果不是，则如何响应。通常，会抛出一个异常(例如IllegalMonitorStateException)，并且实现必须记录这个事实。")]),t._v(" "),a("p",[t._v("实现可以更倾向于响应中断，而不是响应信号的正常方法返回，或超过指示指定等待时间的流逝。在这两种情况下，实现都必须确保信号被重定向到另一个等待线程(如果有的话)。")]),t._v(" "),a("h3",{attrs:{id:"await-long-timeunit-方法注释"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#await-long-timeunit-方法注释"}},[t._v("$")]),t._v(" await(long, TimeUnit)方法注释")]),t._v(" "),a("p",[t._v("使当前线程等待，直到收到信号或被中断，或指定的等待时间过去。这种方法在行为上相当于：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("awaitNanos(unit.toNanos(time)) > 0\n")])])]),a("h3",{attrs:{id:"awaituntil方法注释"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#awaituntil方法注释"}},[t._v("$")]),t._v(" awaitUntil方法注释")]),t._v(" "),a("p",[t._v("使当前线程等待，直到收到信号或被中断，或到了指定的等待时间。")]),t._v(" "),a("p",[t._v("与此Condition关联的锁被原子性地释放，同时当前线程被禁止进行线程调度，并且处于休眠状态，直到发生以下五种情况之一：")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("其他线程调用此Condition的signal()方法，当前线程恰好被选为要被唤醒的线程;或")])]),t._v(" "),a("li",[a("p",[t._v("其他线程调用这个Condition的signalAll()方法;或")])]),t._v(" "),a("li",[a("p",[t._v("其他线程中断当前线程，同时支持中断挂起线程;或")])]),t._v(" "),a("li",[a("p",[t._v("过了指定的等待时间;或")])]),t._v(" "),a("li",[a("p",[t._v("一个“虚假的唤醒”发生了。")])])]),t._v(" "),a("p",[t._v("如果当前线程:")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("在进入该方法时中断状态已被设置;或")])]),t._v(" "),a("li",[a("p",[t._v("在等待时被中断，并且支持挂起线程的中断，")])])]),t._v(" "),a("p",[t._v("然后会抛出InterruptedException，并清除当前线程的中断状态。在第一种情况下，没有指定是否在释放锁之前进行中断测试。")]),t._v(" "),a("p",[t._v("返回值指示是否已经过了截止时间，可以这样用：")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("boolean")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("aMethod")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Date")]),t._v(" deadline"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n   "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("boolean")]),t._v(" stillWaiting "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n   lock"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("lock")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n   "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("try")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n     "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("conditionBeingWaitedFor")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n       "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("stillWaiting"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n         "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n       stillWaiting "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" theCondition"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("awaitUntil")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("deadline"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n     "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n     "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...")]),t._v("\n   "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("finally")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n     lock"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("unlock")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n   "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h4",{attrs:{id:"实现注意事项-5"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#实现注意事项-5"}},[t._v("$")]),t._v(" 实现注意事项")]),t._v(" "),a("p",[t._v("当调用此方法时，假定当前线程持有与此Condition关联的锁。这取决于实现来确定是否为这种情况，如果不是，则如何响应。通常，会抛出一个异常(例如IllegalMonitorStateException)，并且实现必须记录这个事实。")]),t._v(" "),a("p",[t._v("实现可以更倾向于响应中断，而不是响应signal的正常方法返回，或超过指示指定等待时间。在这两种情况下，实现都必须确保signal被重定向到另一个等待线程(如果有的话)。")]),t._v(" "),a("h3",{attrs:{id:"signal方法注释"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#signal方法注释"}},[t._v("$")]),t._v(" signal方法注释")]),t._v(" "),a("p",[t._v("唤醒一个等待的线程。")]),t._v(" "),a("p",[t._v("如果有任何线程正在等待这个Condition，那么就选择一个线程来唤醒它。然后，该线程在从await返回之前必须重新获取锁。")]),t._v(" "),a("h4",{attrs:{id:"实现注意事项-6"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#实现注意事项-6"}},[t._v("$")]),t._v(" 实现注意事项")]),t._v(" "),a("p",[t._v("当调用此方法时，实现可能(通常也确实)要求当前线程持有与此Condition关联的锁。实现必须记录这个前提条件以及在未持有锁时所采取的任何操作。通常，会抛出一个异常，如IllegalMonitorStateException。")]),t._v(" "),a("h3",{attrs:{id:"signalall方法注释"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#signalall方法注释"}},[t._v("$")]),t._v(" signalAll方法注释")]),t._v(" "),a("p",[t._v("唤醒所有等待的线程。")]),t._v(" "),a("p",[t._v("如果任何线程正在等待这个Condition，那么它们都将被唤醒。每个线程在从await返回之前必须重新获取锁。")]),t._v(" "),a("h4",{attrs:{id:"实现注意事项-7"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#实现注意事项-7"}},[t._v("$")]),t._v(" 实现注意事项")]),t._v(" "),a("p",[t._v("当调用此方法时，实现可能(通常也确实)要求当前线程持有与此Condition关联的锁。实现必须记录这个前提条件以及在未持有锁时所采取的任何操作。通常，会抛出一个异常，如IllegalMonitorStateException。")]),t._v(" "),a("h3",{attrs:{id:"参考"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#参考"}},[t._v("$")]),t._v(" 参考")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/locks/Condition.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Interface Condition"),a("OutboundLink")],1)]),t._v(" "),a("h2",{attrs:{id:"await方法对比"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#await方法对比"}},[t._v("$")]),t._v(" await方法对比")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("方法")]),t._v(" "),a("th",[t._v("响应信号")]),t._v(" "),a("th",[t._v("响应中断")]),t._v(" "),a("th",[t._v("支持超时时间")]),t._v(" "),a("th",[t._v("返回值")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("await()")]),t._v(" "),a("td",[t._v("T")]),t._v(" "),a("td",[t._v("T")]),t._v(" "),a("td",[t._v("F")]),t._v(" "),a("td",[t._v("void")])]),t._v(" "),a("tr",[a("td",[t._v("awaitUninterruptibly()")]),t._v(" "),a("td",[t._v("T")]),t._v(" "),a("td",[t._v("F")]),t._v(" "),a("td",[t._v("F")]),t._v(" "),a("td",[t._v("void")])]),t._v(" "),a("tr",[a("td",[t._v("awaitNanos(long)")]),t._v(" "),a("td",[t._v("T")]),t._v(" "),a("td",[t._v("T")]),t._v(" "),a("td",[t._v("T")]),t._v(" "),a("td",[t._v("剩余等待时间")])]),t._v(" "),a("tr",[a("td",[t._v("await(long, TimeUnit)")]),t._v(" "),a("td",[t._v("T")]),t._v(" "),a("td",[t._v("T")]),t._v(" "),a("td",[t._v("T")]),t._v(" "),a("td",[t._v("是否有剩余等待时间")])]),t._v(" "),a("tr",[a("td",[t._v("awaitUntil(Date)")]),t._v(" "),a("td",[t._v("T")]),t._v(" "),a("td",[t._v("T")]),t._v(" "),a("td",[t._v("T")]),t._v(" "),a("td",[t._v("是否有剩余等待时间")])])])]),t._v(" "),a("h2",{attrs:{id:"与object方法对比"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#与object方法对比"}},[t._v("$")]),t._v(" 与Object方法对比")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("对比项")]),t._v(" "),a("th",[t._v("Condition")]),t._v(" "),a("th",[t._v("Object.wait")]),t._v(" "),a("th",[t._v("Object.signal")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("通知的顺序保证")]),t._v(" "),a("td",[t._v("有")]),t._v(" "),a("td"),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td",[t._v("执行通知时持有锁")]),t._v(" "),a("td",[t._v("不需要")]),t._v(" "),a("td"),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td"),t._v(" "),a("td"),t._v(" "),a("td"),t._v(" "),a("td")])])])])}),[],!1,null,null,null);a.default=e.exports}}]);