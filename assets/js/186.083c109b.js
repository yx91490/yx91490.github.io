(window.webpackJsonp=window.webpackJsonp||[]).push([[186],{592:function(t,e,a){"use strict";a.r(e);var s=a(10),n=Object(s.a)({},(function(){var t=this,e=t._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"netstat参数分析"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#netstat参数分析"}},[t._v("$")]),t._v(" netstat参数分析")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("$ netstat -nap |grep 80\n$ netstat -tunlp |grep 80\n")])])]),e("p",[t._v("对于netstat命令，你习惯的用法是哪一个？这么多参数究竟是什么意思？且听我慢慢叙来。\n从直觉上讲，第一条用法可以少打2个字母，这也算程序员偷懒的一种方法吧☺，但是带来的后果是你可能要多看一大堆可能你并不关心的输出，下面是输出的一部分：")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("tcp        1      1 10.252.55.104:53912     180.149.131.247:80      LAST_ACK    -                                     \ntcp        1      1 10.252.55.104:58306     180.149.132.165:80      LAST_ACK    -                   \ntcp        0      0 10.252.55.104:58032     106.38.179.33:443       CLOSE_WAIT  14073/chrome-cache    \ntcp        1      1 10.252.55.104:57906     115.239.211.92:80       LAST_ACK    -               \nudp6       0      0 :::48016                :::*                                -                   \nunix  2      [ ACC ]     流        LISTENING     27680    2281/pulseaudio      /run/user/1000/pulse/native\nunix  3      [ ]         流        已连接     28064    1905/dbus-daemon     /run/user/1000/bus\nunix  3      [ ]         流        已连接     28094    2486/gvfs-goa-volum  \nunix  3      [ ]         流        已连接     234280   14073/chrome-cache   \nunix  3      [ ]         流        已连接     28095    -                    /run/systemd/journal/stdout\nunix  3      [ ]         流        已连接     28051    2201/ibus-daemon     @/tmp/ibus/dbus-LlVXmwkj\n")])])]),e("p",[t._v("而第二种用法，在我的电脑上目前只有2条记录：")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("udp6       0      0 :::48016                :::*                                -                   \nunix  2      [ ACC ]     流        LISTENING     27680    2281/pulseaudio      /run/user/1000/pulse/native\n")])])]),e("p",[t._v("两种用法主要差在"),e("code",[t._v("-a")]),t._v("与"),e("code",[t._v("-l")]),t._v("两个参数，"),e("code",[t._v("-l")]),t._v("的意思是只列出监听的端口，而"),e("code",[t._v("-a")]),t._v("的意思是不管监听的还是没监听的端口都列出来。需要注意的是，如果这两个参数都不加，默认只显示不监听的端口。")]),t._v(" "),e("p",[t._v("常见的情景是我们要查看某个端口被哪个进程占用的，而"),e("code",[t._v("-p")]),t._v("参数的作用就是显示端口所属的进程id和名字。而"),e("code",[t._v("-t")]),t._v("和"),e("code",[t._v("-u")]),t._v("也很容易记，分别代表tcp和udp的意思。")])])}),[],!1,null,null,null);e.default=n.exports}}]);