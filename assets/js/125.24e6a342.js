(window.webpackJsonp=window.webpackJsonp||[]).push([[125],{563:function(t,a,v){"use strict";v.r(a);var e=v(17),s=Object(e.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"jdk命令工具"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#jdk命令工具"}},[t._v("$")]),t._v(" JDK命令工具")]),t._v(" "),a("h3",{attrs:{id:"jcmd命令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#jcmd命令"}},[t._v("$")]),t._v(" Jcmd命令")]),t._v(" "),a("p",[t._v("查看help：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("$ jcmd <pid> help\n2031:\nThe following commands are available:\nCompiler.CodeHeap_Analytics\nCompiler.codecache\nCompiler.codelist\nCompiler.directives_add\nCompiler.directives_clear\nCompiler.directives_print\nCompiler.directives_remove\nCompiler.queue\nGC.class_histogram\nGC.class_stats\nGC.finalizer_info\nGC.heap_dump\nGC.heap_info\nGC.run\nGC.run_finalization\nJFR.check\nJFR.configure\nJFR.dump\nJFR.start\nJFR.stop\nJVMTI.agent_load\nJVMTI.data_dump\nManagementAgent.start\nManagementAgent.start_local\nManagementAgent.status\nManagementAgent.stop\nThread.print\nVM.check_commercial_features\nVM.class_hierarchy\nVM.classloader_stats\nVM.classloaders\nVM.command_line\nVM.dynlibs\nVM.flags\nVM.info\nVM.log\nVM.metaspace\nVM.native_memory\nVM.print_touched_methods\nVM.set_flag\nVM.stringtable\nVM.symboltable\nVM.system_properties\nVM.systemdictionary\nVM.unlock_commercial_features\nVM.uptime\nVM.version\nhelp\n")])])]),a("p",[t._v("查看JVM进程的PID：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("$ jcmd -l\n")])])]),a("p",[t._v("查看JVM默认值：")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 详细")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("java")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-XX:+PrintFlagsFinal")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-version")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 精简")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("java")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-XX:+PrintCommandLineFlags")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-version")]),t._v("\n")])])]),a("p",[t._v("查看进程24684的JVM参数：")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("jcmd "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("24684")]),t._v(" VM.flags\njinfo "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-flag")]),t._v(" UseXMMForArrayCopy "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("24500")]),t._v("\n")])])]),a("h3",{attrs:{id:"jmap命令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#jmap命令"}},[t._v("$")]),t._v(" jmap命令")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("选项")]),t._v(" "),a("th",[t._v("功能")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("-dump")]),t._v(" "),a("td",[t._v("生成java堆转储快照")])]),t._v(" "),a("tr",[a("td",[t._v("-heap")]),t._v(" "),a("td",[t._v("显示Java堆详细信息 ，包括使用的GC算法、堆配置信息和各内存区域内存使用信息")])]),t._v(" "),a("tr",[a("td",[t._v("-histo")]),t._v(" "),a("td",[t._v("显示堆中对象的统计信息,包括类、实例数量、合计容量")])])])]),t._v(" "),a("p",[t._v("生成堆转储文件：")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("jmap "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-dump:format")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("b,file"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("dumpfile"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("pid"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])]),a("p",[t._v("分析堆转储文件：")]),t._v(" "),a("ol",[a("li",[t._v("启动 Memory Analyzer tool , 选择菜单项 File -> Open Heap Dump 来加载需要分析的堆转储文件。")]),t._v(" "),a("li",[t._v("点击工具栏上的 Leak Suspects 菜单项来生成内存泄露分析报告")])]),t._v(" "),a("h3",{attrs:{id:"jstat命令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#jstat命令"}},[t._v("$")]),t._v(" jstat命令")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("jstat -gc pid\njstat -gcnew pid\njstat -gcold pid\njstat -gccapacity pid\n")])])]),a("p",[t._v("结果如下：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("java -Xms128m -Xmx128m -Xmn32m -XX:SurvivorRatio=6 -jar /opt/jd-gui/jd-gui.jar\n")])])]),a("table",[a("thead",[a("tr",[a("th",[t._v("项")]),t._v(" "),a("th",[t._v("值(KB)")]),t._v(" "),a("th",[t._v("描述")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("S0C")]),t._v(" "),a("td",[t._v("4096")]),t._v(" "),a("td",[t._v("年轻代中第一个survivor（幸存区）的容量")])]),t._v(" "),a("tr",[a("td",[t._v("S1C")]),t._v(" "),a("td",[t._v("4096")]),t._v(" "),a("td",[t._v("年轻代中第二个survivor（幸存区）的容量")])]),t._v(" "),a("tr",[a("td",[t._v("S0U")]),t._v(" "),a("td",[t._v("0")]),t._v(" "),a("td",[t._v("年轻代中第一个survivor（幸存区）目前已使用空间")])]),t._v(" "),a("tr",[a("td",[t._v("S1U")]),t._v(" "),a("td",[t._v("4065.3")]),t._v(" "),a("td",[t._v("年轻代中第二个survivor（幸存区）目前已使用空间")])]),t._v(" "),a("tr",[a("td",[t._v("EC")]),t._v(" "),a("td",[t._v("24576")]),t._v(" "),a("td",[t._v("年轻代中Eden（伊甸园）的容量")])]),t._v(" "),a("tr",[a("td",[t._v("EU")]),t._v(" "),a("td",[t._v("9111.4")]),t._v(" "),a("td",[t._v("年轻代中Eden（伊甸园）目前已使用空间")])]),t._v(" "),a("tr",[a("td",[t._v("OC")]),t._v(" "),a("td",[t._v("98304")]),t._v(" "),a("td",[t._v("Old代的容量")])]),t._v(" "),a("tr",[a("td",[t._v("OU")]),t._v(" "),a("td",[t._v("56517.2")]),t._v(" "),a("td",[t._v("Old代目前已使用空间")])]),t._v(" "),a("tr",[a("td",[t._v("PC")]),t._v(" "),a("td",[t._v("32768.0")]),t._v(" "),a("td",[t._v("Perm(持久代)的容量")])]),t._v(" "),a("tr",[a("td",[t._v("PU")]),t._v(" "),a("td",[t._v("32492.0")]),t._v(" "),a("td",[t._v("Perm(持久代)目前已使用空间")])]),t._v(" "),a("tr",[a("td",[t._v("YGC")]),t._v(" "),a("td",[t._v("7")]),t._v(" "),a("td",[t._v("从应用程序启动到采样时年轻代中gc次数")])]),t._v(" "),a("tr",[a("td",[t._v("YGCT")]),t._v(" "),a("td",[t._v("0.159")]),t._v(" "),a("td",[t._v("从应用程序启动到采样时年轻代中gc所用时间(s)")])]),t._v(" "),a("tr",[a("td",[t._v("FGC")]),t._v(" "),a("td",[t._v("0")]),t._v(" "),a("td",[t._v("从应用程序启动到采样时old代(全gc)gc次数")])]),t._v(" "),a("tr",[a("td",[t._v("FGCT")]),t._v(" "),a("td",[t._v("0")]),t._v(" "),a("td",[t._v("从应用程序启动到采样时old代(全gc)gc所用时间(s)")])]),t._v(" "),a("tr",[a("td",[t._v("GCT")]),t._v(" "),a("td",[t._v("0.159")]),t._v(" "),a("td",[t._v("从应用程序启动到采样时gc用的总时间(s)")])]),t._v(" "),a("tr",[a("td",[t._v("NGCMN")]),t._v(" "),a("td",[t._v("32768.0")]),t._v(" "),a("td",[t._v("年轻代(young)中初始化(最小)的大小")])]),t._v(" "),a("tr",[a("td",[t._v("NGCMX")]),t._v(" "),a("td",[t._v("32768.0")]),t._v(" "),a("td",[t._v("年轻代(young)的最大容量")])]),t._v(" "),a("tr",[a("td",[t._v("NGC")]),t._v(" "),a("td",[t._v("32768.0")]),t._v(" "),a("td",[t._v("年轻代(young)中当前的容量")])]),t._v(" "),a("tr",[a("td",[t._v("OGCMN")]),t._v(" "),a("td",[t._v("98304.0")]),t._v(" "),a("td",[t._v("old代中初始化(最小)的大小")])]),t._v(" "),a("tr",[a("td",[t._v("OGCMX")]),t._v(" "),a("td",[t._v("98304.0")]),t._v(" "),a("td",[t._v("old代的最大容量")])]),t._v(" "),a("tr",[a("td",[t._v("PGCMN")]),t._v(" "),a("td",[t._v("21504.0")]),t._v(" "),a("td",[t._v("perm代中初始化(最小)的大小")])]),t._v(" "),a("tr",[a("td",[t._v("PGCMX")]),t._v(" "),a("td",[t._v("83968.0")]),t._v(" "),a("td",[t._v("perm代的最大容量")])]),t._v(" "),a("tr",[a("td",[t._v("PGC")]),t._v(" "),a("td",[t._v("32768.0")]),t._v(" "),a("td",[t._v("perm代当前新生成的容量")])])])]),t._v(" "),a("p",[a("strong",[t._v("使用Java监控工具出现 Can't attach to the process")]),t._v("\n这是因为新版的Linux系统加入了 ptrace-scope 机制：这种机制为了防止用户访问当前正在运行的进程的内存和状态，而一些调试软件本身就是利用 ptrace 来进行获取某进程的内存状态的(包括GDB)，所以在新版本的Linux系统默认情况下不允许再访问了。")]),t._v(" "),a("p",[t._v("临时开启：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("echo 0 > /proc/sys/kernel/yama/ptrace_scope\n")])])]),a("p",[t._v("编辑"),a("code",[t._v("/etc/sysctl.d/10-ptrace.conf")]),t._v("永久开启：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("kernel.yama.ptrace_scope = 0\n")])])]),a("h3",{attrs:{id:"java命令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#java命令"}},[t._v("$")]),t._v(" java命令")]),t._v(" "),a("p",[t._v("远程调试：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("java -Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=5005 myPackage.myMainClassname\n")])])]),a("p",[a("code",[t._v("suspend=y")]),t._v("使进程等待连接。")])])}),[],!1,null,null,null);a.default=s.exports}}]);