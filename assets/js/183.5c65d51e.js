(window.webpackJsonp=window.webpackJsonp||[]).push([[183],{599:function(t,v,_){"use strict";_.r(v);var a=_(10),e=Object(a.a)({},(function(){var t=this,v=t._self._c;return v("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[v("h1",{attrs:{id:"kill命令与信号"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#kill命令与信号"}},[t._v("$")]),t._v(" Kill命令与信号")]),t._v(" "),v("h2",{attrs:{id:"kill命令"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#kill命令"}},[t._v("$")]),t._v(" Kill命令")]),t._v(" "),v("p",[t._v("kill命令其实有两个版本，一个是bash内嵌的版本，也是我们通常用到的；另一个是Linux版。")]),t._v(" "),v("h3",{attrs:{id:"bash内嵌版"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#bash内嵌版"}},[t._v("$")]),t._v(" Bash内嵌版")]),t._v(" "),v("p",[t._v("命令提示：")]),t._v(" "),v("div",{staticClass:"language- extra-class"},[v("pre",{pre:!0,attrs:{class:"language-text"}},[v("code",[t._v("$ kill\nkill: usage: kill [-s sigspec | -n signum | -sigspec] pid | jobspec ... or kill -l [sigspec]\n")])])]),v("p",[t._v("列出所有信号名：")]),t._v(" "),v("div",{staticClass:"language- extra-class"},[v("pre",{pre:!0,attrs:{class:"language-text"}},[v("code",[t._v("$ kill -l\n 1) SIGHUP       2) SIGINT       3) SIGQUIT      4) SIGILL       5) SIGTRAP\n 6) SIGABRT      7) SIGBUS       8) SIGFPE       9) SIGKILL     10) SIGUSR1\n11) SIGSEGV     12) SIGUSR2     13) SIGPIPE     14) SIGALRM     15) SIGTERM\n16) SIGSTKFLT   17) SIGCHLD     18) SIGCONT     19) SIGSTOP     20) SIGTSTP\n21) SIGTTIN     22) SIGTTOU     23) SIGURG      24) SIGXCPU     25) SIGXFSZ\n26) SIGVTALRM   27) SIGPROF     28) SIGWINCH    29) SIGIO       30) SIGPWR\n31) SIGSYS      34) SIGRTMIN    35) SIGRTMIN+1  36) SIGRTMIN+2  37) SIGRTMIN+3\n38) SIGRTMIN+4  39) SIGRTMIN+5  40) SIGRTMIN+6  41) SIGRTMIN+7  42) SIGRTMIN+8\n43) SIGRTMIN+9  44) SIGRTMIN+10 45) SIGRTMIN+11 46) SIGRTMIN+12 47) SIGRTMIN+13\n48) SIGRTMIN+14 49) SIGRTMIN+15 50) SIGRTMAX-14 51) SIGRTMAX-13 52) SIGRTMAX-12\n53) SIGRTMAX-11 54) SIGRTMAX-10 55) SIGRTMAX-9  56) SIGRTMAX-8  57) SIGRTMAX-7\n58) SIGRTMAX-6  59) SIGRTMAX-5  60) SIGRTMAX-4  61) SIGRTMAX-3  62) SIGRTMAX-2\n63) SIGRTMAX-1  64) SIGRTMAX\n")])])]),v("p",[t._v("例如，在信号数字和信号名之间转换：")]),t._v(" "),v("div",{staticClass:"language- extra-class"},[v("pre",{pre:!0,attrs:{class:"language-text"}},[v("code",[t._v("$ kill -l 15\nTERM\n$ kill -l TERM\n15\n")])])]),v("p",[t._v("向进程发送信号：")]),t._v(" "),v("div",{staticClass:"language- extra-class"},[v("pre",{pre:!0,attrs:{class:"language-text"}},[v("code",[t._v("kill -9      12200\nkill -n 9    12200\nkill -s 9    12200\nkill -s KILL 12200\n")])])]),v("h3",{attrs:{id:"linux版"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#linux版"}},[t._v("$")]),t._v(" Linux版")]),t._v(" "),v("p",[t._v("而在bash里面Linux版需要指定全路径"),v("code",[t._v("/bin/kill")]),t._v("才能执行到，参数与bash版大同小异。")]),t._v(" "),v("p",[t._v("命令提示：")]),t._v(" "),v("div",{staticClass:"language- extra-class"},[v("pre",{pre:!0,attrs:{class:"language-text"}},[v("code",[t._v("$ kill\nUsage:\n kill [options] <pid> [...]\n\nOptions:\n <pid> [...]            send signal to every <pid> listed\n -<signal>, -s, --signal <signal>\n                        specify the <signal> to be sent\n -l, --list=[<signal>]  list all signal names, or convert one to a name\n -L, --table            list all signal names in a nice table\n\n -h, --help     display this help and exit\n -V, --version  output version information and exit\n\nFor more details see kill(1).\n")])])]),v("p",[t._v("列出所有信号名：")]),t._v(" "),v("div",{staticClass:"language- extra-class"},[v("pre",{pre:!0,attrs:{class:"language-text"}},[v("code",[t._v("$ /bin/kill -L\n 1 HUP      2 INT      3 QUIT     4 ILL      5 TRAP     6 ABRT     7 BUS\n 8 FPE      9 KILL    10 USR1    11 SEGV    12 USR2    13 PIPE    14 ALRM\n15 TERM    16 STKFLT  17 CHLD    18 CONT    19 STOP    20 TSTP    21 TTIN\n22 TTOU    23 URG     24 XCPU    25 XFSZ    26 VTALRM  27 PROF    28 WINCH\n29 POLL    30 PWR     31 SYS\n")])])]),v("p",[t._v("和bash版的前31种信号对比了一下，发现第29种的名字有所不同。")]),t._v(" "),v("h2",{attrs:{id:"信号"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#信号"}},[t._v("$")]),t._v(" 信号")]),t._v(" "),v("p",[v("code",[t._v("man 7 signal")]),t._v("可以查看信号的详细描述：")]),t._v(" "),v("blockquote",[v("h3",{attrs:{id:"标注说明"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#标注说明"}},[t._v("$")]),t._v(" 标注说明")]),t._v(" "),v("ul",[v("li",[v("p",[t._v("这里的 - 指信号不存在")])]),t._v(" "),v("li",[v("p",[t._v("可能给出 三个值：第一个值一般用于 alpha 和 sparc, 中间的值用于 i386, ppc 和 sh,最后一个是 mips 的.")])]),t._v(" "),v("li",[v("p",[t._v("信号29 在 alpha机上 是 SIGINFO / SIGPWR , 而在 sparc机上 是 SIGLOST")])])]),t._v(" "),v("p",[t._v('"动作(Action)"栏 的 字母 有 下列含义(译注:  这里  "结束"  指进程终止并释放资源, "停止" 指进程停止运行, 但是资源没有释放, 有可能继续运行)：')]),t._v(" "),v("ul",[v("li",[v("p",[t._v("A  (Term)    缺省动作是结束进程")])]),t._v(" "),v("li",[v("p",[t._v("B  (Ign)       缺省动作是忽略这个信号.")])]),t._v(" "),v("li",[v("p",[t._v("C  (Core)    缺省动作是结束进程, 并且核心转储.")])]),t._v(" "),v("li",[v("p",[t._v("D  (Stop)    缺省动作是停止进程.")])]),t._v(" "),v("li",[v("p",[t._v("E                 信号不能被捕获.")])]),t._v(" "),v("li",[v("p",[t._v("F                 信号不能被忽略.")])])])]),t._v(" "),v("h3",{attrs:{id:"posix-1的定义"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#posix-1的定义"}},[t._v("$")]),t._v(" POSIX.1的定义")]),t._v(" "),v("p",[t._v("首先, POSIX.1 描述了下列信号：")]),t._v(" "),v("table",[v("thead",[v("tr",[v("th",{staticStyle:{"text-align":"left"}},[t._v("信号")]),t._v(" "),v("th",[t._v("值")]),t._v(" "),v("th",[t._v("动作")]),t._v(" "),v("th",[t._v("说明")])])]),t._v(" "),v("tbody",[v("tr",[v("td",{staticStyle:{"text-align":"left"}},[t._v("SIGHUP")]),t._v(" "),v("td",[t._v("1")]),t._v(" "),v("td",[t._v("A")]),t._v(" "),v("td",[t._v("在控制终端上是挂起信号, 或者控制进程结束")])]),t._v(" "),v("tr",[v("td",{staticStyle:{"text-align":"left"}},[t._v("SIGINT")]),t._v(" "),v("td",[t._v("2")]),t._v(" "),v("td",[t._v("A")]),t._v(" "),v("td",[t._v("从键盘输入的中断")])]),t._v(" "),v("tr",[v("td",{staticStyle:{"text-align":"left"}},[t._v("SIGQUIT")]),t._v(" "),v("td",[t._v("3")]),t._v(" "),v("td",[t._v("C")]),t._v(" "),v("td",[t._v("从键盘输入的退出")])]),t._v(" "),v("tr",[v("td",{staticStyle:{"text-align":"left"}},[t._v("SIGILL")]),t._v(" "),v("td",[t._v("4")]),t._v(" "),v("td",[t._v("C")]),t._v(" "),v("td",[t._v("无效硬件指令")])]),t._v(" "),v("tr",[v("td",{staticStyle:{"text-align":"left"}},[t._v("SIGABRT")]),t._v(" "),v("td",[t._v("6")]),t._v(" "),v("td",[t._v("C")]),t._v(" "),v("td",[t._v("非正常终止, 可能来自 abort(3)")])]),t._v(" "),v("tr",[v("td",{staticStyle:{"text-align":"left"}},[t._v("SIGFPE")]),t._v(" "),v("td",[t._v("8")]),t._v(" "),v("td",[t._v("C")]),t._v(" "),v("td",[t._v("浮点运算例外")])]),t._v(" "),v("tr",[v("td",{staticStyle:{"text-align":"left"}},[t._v("SIGKILL")]),t._v(" "),v("td",[t._v("9")]),t._v(" "),v("td",[t._v("AEF")]),t._v(" "),v("td",[t._v("杀死进程信号")])]),t._v(" "),v("tr",[v("td",{staticStyle:{"text-align":"left"}},[t._v("SIGSEGV")]),t._v(" "),v("td",[t._v("11")]),t._v(" "),v("td",[t._v("C")]),t._v(" "),v("td",[t._v("无效的内存引用")])]),t._v(" "),v("tr",[v("td",{staticStyle:{"text-align":"left"}},[t._v("SIGPIPE")]),t._v(" "),v("td",[t._v("13")]),t._v(" "),v("td",[t._v("A")]),t._v(" "),v("td",[t._v("管道中止: 写入无人读取的管道")])]),t._v(" "),v("tr",[v("td",{staticStyle:{"text-align":"left"}},[t._v("SIGALRM")]),t._v(" "),v("td",[t._v("14")]),t._v(" "),v("td",[t._v("A")]),t._v(" "),v("td",[t._v("来自 alarm(2) 的超时信号")])]),t._v(" "),v("tr",[v("td",{staticStyle:{"text-align":"left"}},[t._v("SIGTERM")]),t._v(" "),v("td",[t._v("15")]),t._v(" "),v("td",[t._v("A")]),t._v(" "),v("td",[t._v("终止信号")])]),t._v(" "),v("tr",[v("td",{staticStyle:{"text-align":"left"}},[t._v("SIGUSR1")]),t._v(" "),v("td",[t._v("30,10,16")]),t._v(" "),v("td",[t._v("A")]),t._v(" "),v("td",[t._v("用户定义的信号 1")])]),t._v(" "),v("tr",[v("td",{staticStyle:{"text-align":"left"}},[t._v("SIGUSR2")]),t._v(" "),v("td",[t._v("31,12,17")]),t._v(" "),v("td",[t._v("A")]),t._v(" "),v("td",[t._v("用户定义的信号 2")])]),t._v(" "),v("tr",[v("td",{staticStyle:{"text-align":"left"}},[t._v("SIGCHLD")]),t._v(" "),v("td",[t._v("20,17,18")]),t._v(" "),v("td",[t._v("B")]),t._v(" "),v("td",[t._v("子进程结束或停止")])]),t._v(" "),v("tr",[v("td",{staticStyle:{"text-align":"left"}},[t._v("SIGCONT")]),t._v(" "),v("td",[t._v("19,18,25")]),t._v(" "),v("td"),t._v(" "),v("td",[t._v("继续停止的进程")])]),t._v(" "),v("tr",[v("td",{staticStyle:{"text-align":"left"}},[t._v("SIGSTOP")]),t._v(" "),v("td",[t._v("17,19,23")]),t._v(" "),v("td",[t._v("DEF")]),t._v(" "),v("td",[t._v("停止进程")])]),t._v(" "),v("tr",[v("td",{staticStyle:{"text-align":"left"}},[t._v("SIGTSTP")]),t._v(" "),v("td",[t._v("18,20,24")]),t._v(" "),v("td",[t._v("D")]),t._v(" "),v("td",[t._v("终端上发出的停止信号")])]),t._v(" "),v("tr",[v("td",{staticStyle:{"text-align":"left"}},[t._v("SIGTTIN")]),t._v(" "),v("td",[t._v("21,21,26")]),t._v(" "),v("td",[t._v("D")]),t._v(" "),v("td",[t._v("后台进程试图从控制终端(tty)输入")])]),t._v(" "),v("tr",[v("td",{staticStyle:{"text-align":"left"}},[t._v("SIGTTOU")]),t._v(" "),v("td",[t._v("22,22,27")]),t._v(" "),v("td",[t._v("D")]),t._v(" "),v("td",[t._v("后台进程试图在控制终端(tty)输出")])])])]),t._v(" "),v("h3",{attrs:{id:"susv2的定义"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#susv2的定义"}},[t._v("$")]),t._v(" SUSv2的定义")]),t._v(" "),v("p",[t._v("下面的信号定义在 SUSv2 中, 而 POSIX.1 没有定义：")]),t._v(" "),v("table",[v("thead",[v("tr",[v("th",{staticStyle:{"text-align":"left"}},[t._v("信号")]),t._v(" "),v("th",[t._v("值")]),t._v(" "),v("th",[t._v("动作")]),t._v(" "),v("th",[t._v("说明")])])]),t._v(" "),v("tbody",[v("tr",[v("td",{staticStyle:{"text-align":"left"}},[t._v("SIGBUS")]),t._v(" "),v("td",[t._v("10,7,10")]),t._v(" "),v("td",[t._v("C")]),t._v(" "),v("td",[t._v("总线错误 (不正确的内存访问)")])]),t._v(" "),v("tr",[v("td",{staticStyle:{"text-align":"left"}},[t._v("SIGPOLL")]),t._v(" "),v("td"),t._v(" "),v("td",[t._v("A")]),t._v(" "),v("td",[t._v("I/O就绪事件 (Sys V). 等同于SIGIO")])]),t._v(" "),v("tr",[v("td",{staticStyle:{"text-align":"left"}},[t._v("SIGPROF")]),t._v(" "),v("td",[t._v("27,27,29")]),t._v(" "),v("td",[t._v("A")]),t._v(" "),v("td",[t._v("系统资源定时器(Profiling timer)超时")])]),t._v(" "),v("tr",[v("td",{staticStyle:{"text-align":"left"}},[t._v("SIGSYS")]),t._v(" "),v("td",[t._v("12, -  ,12")]),t._v(" "),v("td",[t._v("C")]),t._v(" "),v("td",[t._v("用错误参数调用系统例程 (SVID)")])]),t._v(" "),v("tr",[v("td",{staticStyle:{"text-align":"left"}},[t._v("SIGTRAP")]),t._v(" "),v("td",[t._v("5")]),t._v(" "),v("td",[t._v("C")]),t._v(" "),v("td",[t._v("跟踪/断点自陷")])]),t._v(" "),v("tr",[v("td",{staticStyle:{"text-align":"left"}},[t._v("SIGURG")]),t._v(" "),v("td",[t._v("16,23,21")]),t._v(" "),v("td",[t._v("B")]),t._v(" "),v("td",[t._v("套接口上出现 urgent 情况 (4.2 BSD)")])]),t._v(" "),v("tr",[v("td",{staticStyle:{"text-align":"left"}},[t._v("SIGVTALRM")]),t._v(" "),v("td",[t._v("26,26,28")]),t._v(" "),v("td",[t._v("A")]),t._v(" "),v("td",[t._v("虚拟超时时钟 (4.2 BSD)")])]),t._v(" "),v("tr",[v("td",{staticStyle:{"text-align":"left"}},[t._v("SIGXCPU")]),t._v(" "),v("td",[t._v("24,24,30")]),t._v(" "),v("td",[t._v("C")]),t._v(" "),v("td",[t._v("超过了CPU时间限制 (4.2 BSD)")])]),t._v(" "),v("tr",[v("td",{staticStyle:{"text-align":"left"}},[t._v("SIGXFSZ")]),t._v(" "),v("td",[t._v("25,25,31")]),t._v(" "),v("td",[t._v("C")]),t._v(" "),v("td",[t._v("超过了文件大小限制 (4.2 BSD)")])])])]),t._v(" "),v("blockquote",[v("p",[t._v("这里的  SIGSYS,  SIGXCPU, SIGXFSZ, 以及某些系统上的 SIGBUS, Linux 的缺省动作 (到2.3.27版) 是 A(结束), 而 SUSv2 声明是 C(结束且核心转储)")])]),t._v(" "),v("p",[t._v("下面是其他几个信号：")]),t._v(" "),v("table",[v("thead",[v("tr",[v("th",{staticStyle:{"text-align":"left"}},[t._v("信号")]),t._v(" "),v("th",[t._v("值")]),t._v(" "),v("th",[t._v("动作")]),t._v(" "),v("th",[t._v("说明")])])]),t._v(" "),v("tbody",[v("tr",[v("td",{staticStyle:{"text-align":"left"}},[t._v("SIGIOT")]),t._v(" "),v("td",[t._v("6")]),t._v(" "),v("td",[t._v("C")]),t._v(" "),v("td",[t._v("IOT 自陷. 等同于 SIGABRT")])]),t._v(" "),v("tr",[v("td",{staticStyle:{"text-align":"left"}},[t._v("SIGEMT")]),t._v(" "),v("td",[t._v("7,    -  , 7")]),t._v(" "),v("td"),t._v(" "),v("td")]),t._v(" "),v("tr",[v("td",{staticStyle:{"text-align":"left"}},[t._v("SIGSTKFLT")]),t._v(" "),v("td",[t._v("- , 16,  -")]),t._v(" "),v("td",[t._v("A")]),t._v(" "),v("td",[t._v("协处理器堆栈错误")])]),t._v(" "),v("tr",[v("td",{staticStyle:{"text-align":"left"}},[t._v("SIGIO")]),t._v(" "),v("td",[t._v("23, 29, 22")]),t._v(" "),v("td",[t._v("A")]),t._v(" "),v("td",[t._v("I/O 有效信号 (4.2 BSD)")])]),t._v(" "),v("tr",[v("td",{staticStyle:{"text-align":"left"}},[t._v("SIGCLD")]),t._v(" "),v("td",[t._v("- ,  -  , 18")]),t._v(" "),v("td"),t._v(" "),v("td",[t._v("等同于 SIGCHLD")])]),t._v(" "),v("tr",[v("td",{staticStyle:{"text-align":"left"}},[t._v("SIGPWR")]),t._v(" "),v("td",[t._v("29, 30, 19")]),t._v(" "),v("td",[t._v("A")]),t._v(" "),v("td",[t._v("电源无效 (System V)")])]),t._v(" "),v("tr",[v("td",{staticStyle:{"text-align":"left"}},[t._v("SIGINFO")]),t._v(" "),v("td",[t._v("29,  -  ,  -")]),t._v(" "),v("td"),t._v(" "),v("td",[t._v("等同于 SIGPWR")])]),t._v(" "),v("tr",[v("td",{staticStyle:{"text-align":"left"}},[t._v("SIGLOST")]),t._v(" "),v("td",[t._v("- ,  -  ,  -")]),t._v(" "),v("td",[t._v("A")]),t._v(" "),v("td",[t._v("文件锁丢失")])]),t._v(" "),v("tr",[v("td",{staticStyle:{"text-align":"left"}},[t._v("SIGWINCH")]),t._v(" "),v("td",[t._v("28, 28,  20")]),t._v(" "),v("td",[t._v("B")]),t._v(" "),v("td",[t._v("窗口大小调整信号 (4.3 BSD, Sun)")])]),t._v(" "),v("tr",[v("td",{staticStyle:{"text-align":"left"}},[t._v("SIGUNUSED")]),t._v(" "),v("td",[t._v("- , 31 , -")]),t._v(" "),v("td",[t._v("A")]),t._v(" "),v("td",[t._v("未使用的信号 (将成为 SIGSYS)")])])])]),t._v(" "),v("h3",{attrs:{id:"常用信号"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#常用信号"}},[t._v("$")]),t._v(" 常用信号")]),t._v(" "),v("table",[v("thead",[v("tr",[v("th",[t._v("信号")]),t._v(" "),v("th"),t._v(" "),v("th",[t._v("说明")])])]),t._v(" "),v("tbody",[v("tr",[v("td",[t._v("SIGUP")]),t._v(" "),v("td",[t._v("kill -1")]),t._v(" "),v("td",[t._v("让进程和缓地关闭进程并重启")])]),t._v(" "),v("tr",[v("td",[t._v("SIGINT")]),t._v(" "),v("td",[t._v("kill -2")]),t._v(" "),v("td",[t._v("相当于ctrl+c，信号被当前进程树接收到")])]),t._v(" "),v("tr",[v("td",[t._v("SIGKILL")]),t._v(" "),v("td",[t._v("kill -9")]),t._v(" "),v("td",[t._v("不能被捕获")])]),t._v(" "),v("tr",[v("td",[t._v("SIGTERM")]),t._v(" "),v("td",[t._v("kill -15")]),t._v(" "),v("td",[t._v("只有当前进程收到，子进程不会收到")])]),t._v(" "),v("tr",[v("td",[t._v("SIGCONT")]),t._v(" "),v("td",[t._v("kill -18")]),t._v(" "),v("td",[t._v("继续停止的进程")])]),t._v(" "),v("tr",[v("td",[t._v("SIGSTOP")]),t._v(" "),v("td",[t._v("kill -19")]),t._v(" "),v("td",[t._v("停止进程")])])])]),t._v(" "),v("h3",{attrs:{id:"守护进程和普通进程的区别"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#守护进程和普通进程的区别"}},[t._v("$")]),t._v(" 守护进程和普通进程的区别")]),t._v(" "),v("p",[t._v("守护进程收到SIGTERM的时候全部子进程被kill，普通进程收到SIGTERM的时候子进程过继给init进程。")]),t._v(" "),v("h3",{attrs:{id:"信号处理"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#信号处理"}},[t._v("$")]),t._v(" 信号处理")]),t._v(" "),v("p",[t._v("参考代码："),v("a",{attrs:{href:"https://github.com/centercode/code-samples/blob/master/java-sample/jdk-sample/src/main/java/io/SignalSample.java",target:"_blank",rel:"noopener noreferrer"}},[t._v("SignalSample.java"),v("OutboundLink")],1)]),t._v(" "),v("h2",{attrs:{id:"参考"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#参考"}},[t._v("$")]),t._v(" 参考")]),t._v(" "),v("ul",[v("li",[v("a",{attrs:{href:"https://blog.csdn.net/u014636245/article/details/92596602",target:"_blank",rel:"noopener noreferrer"}},[t._v("java多线程的几种状态"),v("OutboundLink")],1)]),t._v(" "),v("li",[v("a",{attrs:{href:"https://wenku.baidu.com/view/595dde27ccbff121dd3683fb.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("一些常用的kill信号的对比和总结"),v("OutboundLink")],1)]),t._v(" "),v("li",[v("a",{attrs:{href:"https://stackoverflow.com/questions/27844970/how-to-pause-resume-a-process-in-linux",target:"_blank",rel:"noopener noreferrer"}},[t._v("How to Pause/Resume a process in Linux"),v("OutboundLink")],1)])])])}),[],!1,null,null,null);v.default=e.exports}}]);