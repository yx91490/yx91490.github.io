(window.webpackJsonp=window.webpackJsonp||[]).push([[181],{601:function(t,e,s){"use strict";s.r(e);var a=s(10),r=Object(a.a)({},(function(){var t=this,e=t._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"linux系统管理命令"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#linux系统管理命令"}},[t._v("$")]),t._v(" Linux系统管理命令")]),t._v(" "),e("h3",{attrs:{id:"uptime"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#uptime"}},[t._v("$")]),t._v(" uptime")]),t._v(" "),e("p",[t._v("参数：")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("current time, system running time, logged on users, system load averages for the past 1, 5, 15'.\n    -s, --since\n        system up since, in yyyy-mm-dd HH:MM:SS format\n")])])]),e("p",[t._v("输出例子：")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("09:56:36 up 2 days, 15:18,  3 users,  load average: 0.49, 0.37, 0.41\n")])])]),e("h3",{attrs:{id:"who"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#who"}},[t._v("$")]),t._v(" who")]),t._v(" "),e("p",[t._v("参数：")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("    -a, --all same as -b -d --login -p -r -t -T -u\n    -b, --boot time of last system boot\n    -d, --dead print dead processes\n    -r, --runlevel\n    -H, --heading\n    -l, --login print system login processes\n    -m (== who am i)     only hostname and user associated with stdin\n    -q, --count\n    -T,  add user's message status as +, - or ?\n    -u, --users list users logged in\n")])])]),e("p",[t._v("输出例子：")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("yx32     :0           2015-02-23 18:39 (:0)\nyx32     pts/0        2015-02-26 09:33 (:0)\nyx32     pts/1        2015-02-26 09:39 (:0)\nyx32     pts/2        2015-02-26 10:55 (:0)\n\n    pts - pseudoterminal master and slave\n    相关文件：/var/run/utmp, /var/log/wtmp\n")])])]),e("h3",{attrs:{id:"whoami"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#whoami"}},[t._v("$")]),t._v(" whoami")]),t._v(" "),e("p",[t._v("参数：")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("whoami:\n    Print the user name associated with the current effective user ID. \n    who am i 显示的是实际用户(实际用户=uid)，即用户登陆的时候的用户ID。此命令相当于who -m。\n    whoami   显示的是有效用户ID,即当前“操作用户”的用户名(有效用户=euid).\n")])])]),e("h3",{attrs:{id:"free"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#free"}},[t._v("$")]),t._v(" free")]),t._v(" "),e("p",[t._v("参数：")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("-l, --lohi Show detailed low and high memory statistics.\n-s, --seconds seconds\n      Continuously  display  the  result  delay seconds apart.\n-c, --count count\n      Display the result count times.  Requires the -s option.\n-m    Display the amount of memory in megabytes.\n-h, --human\n")])])]),e("p",[t._v("输出例子：")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("             total       used       free     shared    buffers     cached\nMem:       4020764    1459448    2561316     269940      45700     648488\n-/+ buffers/cache:     765260    3255504\nSwap:      7811068      28232    7782836\n")])])]),e("p",[t._v("说明：")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("Mem               ：表示物理内存统计\n-/+ buffers/cached：表示物理内存的缓存统计\nSwap              ：表示硬盘上交换分区的使用情况\n")])])]),e("p",[t._v("计算关系：")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("// 实际使用的buffers 与cache 总量\nused2\n\n//总物理内存 = 实际使用的内存  + 系统当前实际可用内存\n//         = 总计分配给缓存的 + 未分配的内存\ntotal1 = used2 + free2\n       = used1 + free1\n\n//表示总计分配给缓存 = 已被使用的buffers和cache + (未被使用的buffers + 未被使用的cache)\nused1 = used2 + (buffers1 + cached1)\n\n//系统当前实际可用内存 = (未被使用的buffers + 未被使用的cache) + 未被分配的内存\nfree2 = (buffers1 + cached1) + free1\n")])])]),e("h3",{attrs:{id:"top"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#top"}},[t._v("$")]),t._v(" top")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("Tasks: 180 total,   1 running, 178 sleeping,   0 stopped,   1 zombie\n%Cpu(s):  1.6 us,  1.0 sy,  0.0 ni, 96.8 id,  0.7 wa,  0.0 hi,  0.0 si,  0.0 st\n")])])]),e("p",[t._v("说明：")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("us, user    : time running un-niced user processes\nsy, system  : time running kernel processes\nni, nice    : time running niced user processes\nwa, IO-wait : time waiting for I/O completion\nhi : time spent servicing hardware interrupts\nsi : time spent servicing software interrupts\nst : time stolen from this vm by the hypervisor\n")])])]),e("p",[t._v("标志含义：")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("序号")]),t._v(" "),e("th",[t._v("列名")]),t._v(" "),e("th",[t._v("含义")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("a")]),t._v(" "),e("td",[t._v("PID")]),t._v(" "),e("td",[t._v("进程id")])]),t._v(" "),e("tr",[e("td",[t._v("b")]),t._v(" "),e("td",[t._v("PPID")]),t._v(" "),e("td",[t._v("父进程id")])]),t._v(" "),e("tr",[e("td",[t._v("c")]),t._v(" "),e("td",[t._v("RUSER")]),t._v(" "),e("td",[t._v("Real user name")])]),t._v(" "),e("tr",[e("td",[t._v("d")]),t._v(" "),e("td",[t._v("UID")]),t._v(" "),e("td",[t._v("进程所有者的用户id")])]),t._v(" "),e("tr",[e("td",[t._v("e")]),t._v(" "),e("td",[t._v("USER")]),t._v(" "),e("td",[t._v("进程所有者的用户名")])]),t._v(" "),e("tr",[e("td",[t._v("f")]),t._v(" "),e("td",[t._v("GROUP")]),t._v(" "),e("td",[t._v("进程所有者的组名")])]),t._v(" "),e("tr",[e("td",[t._v("g")]),t._v(" "),e("td",[t._v("TTY")]),t._v(" "),e("td",[t._v("启动进程的终端名。不是从终端启动的进程则显示为 ?")])]),t._v(" "),e("tr",[e("td",[t._v("h")]),t._v(" "),e("td",[t._v("PR")]),t._v(" "),e("td",[t._v("优先级")])]),t._v(" "),e("tr",[e("td",[t._v("i")]),t._v(" "),e("td",[t._v("NI")]),t._v(" "),e("td",[t._v("nice值。负值表示高优先级，正值表示低优先级")])]),t._v(" "),e("tr",[e("td",[t._v("j")]),t._v(" "),e("td",[t._v("P")]),t._v(" "),e("td",[t._v("最后使用的CPU，仅在多CPU环境下有意义")])]),t._v(" "),e("tr",[e("td",[t._v("k")]),t._v(" "),e("td",[t._v("%CPU")]),t._v(" "),e("td",[t._v("上次更新到现在的CPU时间占用百分比")])]),t._v(" "),e("tr",[e("td",[t._v("l")]),t._v(" "),e("td",[t._v("TIME")]),t._v(" "),e("td",[t._v("进程使用的CPU时间总计，单位秒")])]),t._v(" "),e("tr",[e("td",[t._v("m")]),t._v(" "),e("td",[t._v("TIME+")]),t._v(" "),e("td",[t._v("进程使用的CPU时间总计，单位1/100秒")])]),t._v(" "),e("tr",[e("td",[t._v("n")]),t._v(" "),e("td",[t._v("%MEM")]),t._v(" "),e("td",[t._v("进程使用的物理内存百分比")])]),t._v(" "),e("tr",[e("td",[t._v("o")]),t._v(" "),e("td",[t._v("VIRT")]),t._v(" "),e("td",[t._v("进程使用的虚拟内存总量，单位kb。VIRT=SWAP+RES")])]),t._v(" "),e("tr",[e("td",[t._v("p")]),t._v(" "),e("td",[t._v("SWAP")]),t._v(" "),e("td",[t._v("进程使用的虚拟内存中，被换出的大小，单位kb。")])]),t._v(" "),e("tr",[e("td",[t._v("q")]),t._v(" "),e("td",[t._v("RES")]),t._v(" "),e("td",[t._v("进程使用的、未被换出的物理内存大小，单位kb。RES=CODE+DATA")])]),t._v(" "),e("tr",[e("td",[t._v("r")]),t._v(" "),e("td",[t._v("CODE")]),t._v(" "),e("td",[t._v("可执行代码占用的物理内存大小，单位kb")])]),t._v(" "),e("tr",[e("td",[t._v("s")]),t._v(" "),e("td",[t._v("DATA")]),t._v(" "),e("td",[t._v("可执行代码以外的部分(数据段+栈)占用的物理内存大小，单位kb")])]),t._v(" "),e("tr",[e("td",[t._v("t")]),t._v(" "),e("td",[t._v("SHR")]),t._v(" "),e("td",[t._v("共享内存大小，单位kb")])]),t._v(" "),e("tr",[e("td",[t._v("u")]),t._v(" "),e("td",[t._v("nFLT")]),t._v(" "),e("td",[t._v("页面错误次数")])]),t._v(" "),e("tr",[e("td",[t._v("v")]),t._v(" "),e("td",[t._v("nDRT")]),t._v(" "),e("td",[t._v("最后一次写入到现在，被修改过的页面数。")])]),t._v(" "),e("tr",[e("td",[t._v("w")]),t._v(" "),e("td",[t._v("S")]),t._v(" "),e("td",[t._v("进程状态："),e("br"),t._v("D=不可中断的睡眠状态"),e("br"),t._v("R=运行"),e("br"),t._v("S=睡眠"),e("br"),t._v("T=跟踪/停止"),e("br"),t._v("Z=僵尸进程")])]),t._v(" "),e("tr",[e("td",[t._v("x")]),t._v(" "),e("td",[t._v("COMMAND")]),t._v(" "),e("td",[t._v("命令名/命令行")])]),t._v(" "),e("tr",[e("td",[t._v("y")]),t._v(" "),e("td",[t._v("WCHAN")]),t._v(" "),e("td",[t._v("若该进程在睡眠，则显示睡眠中的系统函数名")])]),t._v(" "),e("tr",[e("td",[t._v("z")]),t._v(" "),e("td",[t._v("Flags")]),t._v(" "),e("td",[t._v("任务标志，参考 sched.h")])])])]),t._v(" "),e("p",[t._v("快捷键命令：")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("z:          top显示颜色\nP:          按CPU占用高低顺序列出程序\nM:          按内存占用高低顺序列出程序\nx:          类似高亮显示，在z显示模式下效果才会更明显\nd:          top默认的刷新时间是3s，使用d键可以自定义刷新时间\nc:          显示进程命令的全路径与参数\nf:          可以指定top显示的内容，如ppid、swap等都可以选择显示\nk:          输入k之后可以kill掉指定的进程\nA:          分类显示各种系统资源高的进程。可用于快速识别系统上的性能要求极高的任务，推荐使用\nh:          获取top的命令帮助\nH:          显示线程，默认只显示进程\nW:          将当前设置写入~/.toprc文件中。这是写top配置文件的推荐方法\nV:          show process tree\nl, t, m:    切换负载、任务、内存信息的显示\nR:          反向排序\nk:          结束任务\n")])])]),e("p",[t._v("help：")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("h:help\n\n      Z,B,E,e   Global: 'Z' colors; 'B' bold; 'E'/'e' summary/task memory scale\n      l,t,m     Toggle Summary: 'l' load avg; 't' task/cpu stats; 'm' memory info\n      0,1,2,3,I Toggle: '0' zeros; '1/2/3' cpus or numa node views; 'I' Irix mode\n      f,F,X     Fields: 'f'/'F' add/remove/order/sort; 'X' increase fixed-width\n\n##find!##      L,&,<,> . Locate: 'L'/'&' find/again; Move sort column: '<'/'>' left/right\n      R,H,V,J . Toggle: 'R' Sort; 'H' Threads; 'V' Forest view; 'J' Num justify\n      c,i,S,j . Toggle: 'c' Cmd name/line; 'i' Idle; 'S' Time; 'j' Str justify\n      x,y     . Toggle highlights: 'x' sort field; 'y' running tasks\n      z,b     . Toggle: 'z' color/mono; 'b' bold/reverse (only if 'x' or 'y')\n      u,U,o,O . Filter by: 'u'/'U' effective/any user; 'o'/'O' other criteria\n      n,#,^O  . Set: 'n'/'#' max tasks displayed; Show: Ctrl+'O' other filter(s)\n      C,...   . Toggle scroll coordinates msg for: up,down,left,right,home,end\n\n      k,r       Manipulate tasks: 'k' kill; 'r' renice\n      d or s    Set update interval\n      W,Y       Write configuration file 'W'; Inspect other output 'Y'\n      q         Quit\n              ( commands shown with '.' require a visible task display window ) \n    Press 'h' or '?' for help with Windows,\n")])])]),e("h3",{attrs:{id:"tcpdump"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#tcpdump"}},[t._v("$")]),t._v(" tcpdump")]),t._v(" "),e("h3",{attrs:{id:"ethtool"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ethtool"}},[t._v("$")]),t._v(" ethtool")]),t._v(" "),e("h3",{attrs:{id:"sudo"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#sudo"}},[t._v("$")]),t._v(" sudo")]),t._v(" "),e("p",[t._v("默认sudo不会传递当前用户的PATH环境变量，而是使用系统默认的，查看sudo使用的PATH：")]),t._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("env")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("grep")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token environment constant"}},[t._v("PATH")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# PATH=/sbin:/bin:/usr/sbin:/usr/bin")]),t._v("\n")])])]),e("p",[t._v("参考："),e("a",{attrs:{href:"https://stackoverflow.com/questions/54026213/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Command not found with sudo, but works without sudo"),e("OutboundLink")],1)]),t._v(" "),e("h3",{attrs:{id:"ss"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ss"}},[t._v("$")]),t._v(" ss")]),t._v(" "),e("h3",{attrs:{id:"sysctl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#sysctl"}},[t._v("$")]),t._v(" sysctl")]),t._v(" "),e("p",[t._v("sysctl is used to modify kernel parameters at runtime. The parameters available are those listed under "),e("code",[t._v("/proc/sys/")]),t._v(".")]),t._v(" "),e("p",[t._v("Usage：")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("Usage:\n sysctl [options] [variable[=value] ...]\n\nOptions:\n  -a, --all            display all variables\n  -A                   alias of -a\n  -X                   alias of -a\n      --deprecated     include deprecated parameters to listing\n  -b, --binary         print value without new line\n  -e, --ignore         ignore unknown variables errors\n  -N, --names          print variable names without values\n  -n, --values         print only values of a variables\n  -p, --load[=<file>]  read values from file\n  -f                   alias of -p\n      --system         read values from all system directories\n  -r, --pattern <expression>\n                       select setting that match expression\n  -q, --quiet          do not echo variable set\n  -w, --write          enable writing a value to variable\n  -o                   does nothing\n  -x                   does nothing\n  -d                   alias of -h\n\n -h, --help     display this help and exit\n -V, --version  output version information and exit\n")])])]),e("p",[t._v("列出所有变量：")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("sysctl -a\n")])])]),e("p",[t._v("读取单个变量：")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("sysctl net.ipv4.ip_local_reserved_ports\n")])])]),e("p",[t._v("临时写入单个变量：")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("sysctl -w net.ipv4.ip_local_reserved_ports=21000\n")])])]),e("p",[t._v("加载配置文件（默认/etc/sysctl.conf）：")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("sysctl -p\n")])])]),e("h3",{attrs:{id:"文件权限"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#文件权限"}},[t._v("$")]),t._v(" 文件权限")]),t._v(" "),e("p",[t._v("用户分为三类：")]),t._v(" "),e("ol",[e("li",[t._v("文件的 owner")]),t._v(" "),e("li",[t._v("文件 group 的其他 user")]),t._v(" "),e("li",[t._v("其他人")])]),t._v(" "),e("p",[t._v("普通权限：")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("权限")]),t._v(" "),e("th",[t._v("符号")]),t._v(" "),e("th",[t._v("数字")]),t._v(" "),e("th",[t._v("应用于文件")]),t._v(" "),e("th",[t._v("应用于目录")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("读")]),t._v(" "),e("td",[t._v("r")]),t._v(" "),e("td",[t._v("4")]),t._v(" "),e("td",[t._v("读取文件的权限")]),t._v(" "),e("td",[t._v("列出目录内容的权限")])]),t._v(" "),e("tr",[e("td",[t._v("写")]),t._v(" "),e("td",[t._v("w")]),t._v(" "),e("td",[t._v("2")]),t._v(" "),e("td",[t._v("写入文件的权限")]),t._v(" "),e("td",[t._v("创建和删除目录内文件的权限")])]),t._v(" "),e("tr",[e("td",[t._v("执行")]),t._v(" "),e("td",[t._v("x")]),t._v(" "),e("td",[t._v("1")]),t._v(" "),e("td",[t._v("执行文件的权限")]),t._v(" "),e("td",[t._v("访问目录内文件的权限")])])])]),t._v(" "),e("p",[t._v("特殊权限：")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("权限")]),t._v(" "),e("th",[t._v("符号")]),t._v(" "),e("th",[t._v("数字")]),t._v(" "),e("th",[t._v("应用于可执行文件")]),t._v(" "),e("th",[t._v("应用于目录")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("setuid位")]),t._v(" "),e("td",[t._v("s")]),t._v(" "),e("td",[t._v("4")]),t._v(" "),e("td",[t._v("执行时，设置进程的 user id 为文件的 owner")]),t._v(" "),e("td",[t._v("目录中创建的文件赋予跟目录相同的 owner，设置子目录的setuid位")])]),t._v(" "),e("tr",[e("td",[t._v("setgid位")]),t._v(" "),e("td",[t._v("s")]),t._v(" "),e("td",[t._v("2")]),t._v(" "),e("td",[t._v("执行时，设置进程的 group id 为文件的 group")]),t._v(" "),e("td",[t._v("目录中创建的文件赋予跟目录相同的 group，设置子目录的setgid位")])]),t._v(" "),e("tr",[e("td",[t._v("sticky位")]),t._v(" "),e("td",[t._v("t")]),t._v(" "),e("td",[t._v("1")]),t._v(" "),e("td"),t._v(" "),e("td",[t._v("只有对应 owner 才能删除或重命名目录中的文件。")])])])]),t._v(" "),e("h4",{attrs:{id:"符号模式"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#符号模式"}},[t._v("$")]),t._v(" 符号模式")]),t._v(" "),e("p",[t._v("设置权限格式：")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("users operation permissions\nusers ::= [ugoa]\noperation ::= [+-=]\npermissions ::= [rwxXst]\n")])])]),e("p",[t._v("例子：")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("// 所有用户均只赋予读写权限\na=rw\n// 取消除了 owner 之外的人的所有权限\ngo-rwx\n// 所有用户有权限搜索目录，\n// setuid\nu+s\n// setgid\ng+s\nset sticky\n+t\n")])])]),e("h4",{attrs:{id:"参考"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#参考"}},[t._v("$")]),t._v(" 参考")]),t._v(" "),e("p",[e("a",{attrs:{href:"https://www.gnu.org/software/coreutils/manual/html_node/File-permissions.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("27 File permissions"),e("OutboundLink")],1)])])}),[],!1,null,null,null);e.default=r.exports}}]);