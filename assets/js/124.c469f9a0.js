(window.webpackJsonp=window.webpackJsonp||[]).push([[124],{560:function(t,s,a){"use strict";a.r(s);var n=a(18),_=Object(n.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"数据分析中的年中周数界定"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#数据分析中的年中周数界定"}},[t._v("$")]),t._v(" 数据分析中的年中周数界定")]),t._v(" "),s("p",[t._v('数据分析中常常会按照日期维度分析的需求，日期维度包括年（年份）、季（季度）、月（月份）、周（即年中周数）、日（年月日）等等。其中周是从日期转换而来的，通常需求是输入一个日期，输出对应的年份和年中周数。其他维度都比较容易界定，可"周"这个维度比较难以界定，其涉及了多方面的因素，包括：')]),t._v(" "),s("ol",[s("li",[s("p",[t._v("以星期几作为周的起始？通常国外习惯用星期日，国内习惯用星期一。")])]),t._v(" "),s("li",[s("p",[t._v("第一周如何界定？是将元旦（1月1日）所在周定为第一周，还是将第一个至少四天的周为第一周？")])]),t._v(" "),s("li",[s("p",[t._v("周是否是连续的、完整的？即年与年交界处的周如何划分？")])])]),t._v(" "),s("p",[s("code",[t._v("ISO 8601")]),t._v("是国际标准化组织的日期和时间的表示方法，规定了星期一为周的起始，对第一周的界定采用的是第一个至少四天的周为第一周，并且规定周是连续的、完整的，年与年交界处的周要么属于前一年最后一周，要么属于当年第一周，也就不会出现第0周的情况。")]),t._v(" "),s("p",[t._v("为什么会有第一个至少四天的周这样的规定？因为一周有七天，一周的一多半就是至少四天。还有一个巧合，1970年1月1日通常被视为计算机中的起始日，那一天恰好是星期四，也就是1970年1月1日所在周恰好是1970年第一周。")]),t._v(" "),s("p",[t._v("在Java编程语言中，JDK提供了符合"),s("code",[t._v("ISO 8601")]),t._v("标准的API查询：")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("LocalDate")]),t._v(" dt "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("LocalDate")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("of")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1970")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\ndt"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("get")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("WeekFields")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("ISO")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("weekBasedYear")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 年份")]),t._v("\ndt"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("get")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("WeekFields")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("ISO")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("weekOfWeekBasedYear")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 年中周数")]),t._v("\n")])])]),s("p",[s("code",[t._v("ISO.weekOfWeekBasedYear()")]),t._v("已经提供了年中周数的值，为什么还需要一个"),s("code",[t._v("ISO.weekBasedYear()")]),t._v("API来获取年份呢？因为存在当年前几天被划入前一年的最后一周（比如1971年1月1日被归为1970年第53周），或者当年最后几天被划入下一年第一周的情况（比如1969年12月31日被归为1970年第1周），这样基于周的年份和日期的原始年份就不一样了。")]),t._v(" "),s("p",[s("code",[t._v("Starrocks")]),t._v("和"),s("code",[t._v("Apache Doris")]),t._v("中的"),s("code",[t._v("date_format()")]),t._v("函数可以计算日期对应的年中周数：")]),t._v(" "),s("div",{staticClass:"language-sql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v("\n date_format"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("date")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'2009-01-01'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'%x-W%v'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 星期四 */")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n date_format"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("date")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'2009-01-04'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'%x-W%v'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 星期日 */")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n date_format"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("date")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'2009-01-05'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'%x-W%v'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 星期一 */")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" \n date_format"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("date")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'2010-01-01'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'%x-W%v'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 星期五 */")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v("\n date_format"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("date")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'2001-01-01'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'%X-%V'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n date_format"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("date")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'2002-01-01'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'%X-%V'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n date_format"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("date")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'2003-01-01'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'%X-%V'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n date_format"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("date")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'2003-01-04'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'%X-W%V'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n date_format"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("date")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'2003-01-05'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'%X-W%V'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" \n date_format"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("date")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'2009-01-01'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'%X-%V'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n date_format"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("date")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'2010-01-01'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'%X-%V'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n date_format"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("date")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'2011-01-01'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'%X-%V'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n date_format"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("date")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'2017-01-01'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'%X-%V'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("从这几个日期的例子中可以看出来"),s("code",[t._v("'%x-W%v'")]),t._v("格式对应的周设置是符合"),s("code",[t._v("ISO8601")]),t._v("的。而"),s("code",[t._v("'%X-%V'")]),t._v("格式对应的周设置是星期日作为周起始，以第一个星期日作为第一周，周是连续的、完整的。")]),t._v(" "),s("p",[t._v("业务上的需求往往并没有这么简单而统一，也就是说业务上需要周相关三个因素都能够自定义，也就是：")]),t._v(" "),s("ol",[s("li",[t._v("支持自定义周起始为星期一至星期日中的任意一天。")]),t._v(" "),s("li",[t._v("第一周可以是1月1日所在周，也可以是第一个至少四天的周。")]),t._v(" "),s("li",[t._v("周可以是连续的，也可以是不连续的。")])]),t._v(" "),s("p",[t._v("这样原生的"),s("code",[t._v("date_format()")]),t._v("函数肯定无法满足，需要自己开发UDF来实现。并且业务需求不止是一个函数，是一系列函数，包括：")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("函数")]),t._v(" "),s("th",[t._v("参数")]),t._v(" "),s("th",[t._v("返回值")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("日期d转为对应的年份y和周数w")]),t._v(" "),s("td",[t._v("Config, d")]),t._v(" "),s("td",[t._v("y, w")])]),t._v(" "),s("tr",[s("td",[t._v("获取年份y和周数w内第n天（0<=n<=6）对应的日期d")]),t._v(" "),s("td",[t._v("Config, y, w, n")]),t._v(" "),s("td",[t._v("d")])]),t._v(" "),s("tr",[s("td",[t._v("某年y起始周序数w")]),t._v(" "),s("td",[t._v("Config，y")]),t._v(" "),s("td",[t._v("w")])]),t._v(" "),s("tr",[s("td",[t._v("某年y结尾周序数w")]),t._v(" "),s("td",[t._v("Config，y")]),t._v(" "),s("td",[t._v("w")])]),t._v(" "),s("tr",[s("td",[t._v("某年y总周数n")]),t._v(" "),s("td",[t._v("Config，y")]),t._v(" "),s("td",[t._v("n")])])])]),t._v(" "),s("p",[t._v("UDF开发完成之后，如何验证UDF的算法是否正确呢？日期那么多，肯定不是一天天计算和校验，一年有平年和闰年，一周有星期一到星期日，组合起来一共有2 * 7 种日期，这里给出一些代表日期：")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("日期")]),t._v(" "),s("th",[t._v("星期")]),t._v(" "),s("th",[t._v("是否闰年")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("2001-01-01")]),t._v(" "),s("td",[t._v("星期一")]),t._v(" "),s("td",[t._v("平年")])]),t._v(" "),s("tr",[s("td",[t._v("2002-01-01")]),t._v(" "),s("td",[t._v("星期二")]),t._v(" "),s("td",[t._v("平年")])]),t._v(" "),s("tr",[s("td",[t._v("2003-01-01")]),t._v(" "),s("td",[t._v("星期三")]),t._v(" "),s("td",[t._v("平年")])]),t._v(" "),s("tr",[s("td",[t._v("2009-01-01")]),t._v(" "),s("td",[t._v("星期四")]),t._v(" "),s("td",[t._v("平年")])]),t._v(" "),s("tr",[s("td",[t._v("2010-01-01")]),t._v(" "),s("td",[t._v("星期五")]),t._v(" "),s("td",[t._v("平年")])]),t._v(" "),s("tr",[s("td",[t._v("2011-01-01")]),t._v(" "),s("td",[t._v("星期六")]),t._v(" "),s("td",[t._v("平年")])]),t._v(" "),s("tr",[s("td",[t._v("2017-01-01")]),t._v(" "),s("td",[t._v("星期日")]),t._v(" "),s("td",[t._v("平年")])]),t._v(" "),s("tr",[s("td",[t._v("1940-01-01")]),t._v(" "),s("td",[t._v("星期一")]),t._v(" "),s("td",[t._v("闰年")])]),t._v(" "),s("tr",[s("td",[t._v("1952-01-01")]),t._v(" "),s("td",[t._v("星期二")]),t._v(" "),s("td",[t._v("闰年")])]),t._v(" "),s("tr",[s("td",[t._v("1964-01-01")]),t._v(" "),s("td",[t._v("星期三")]),t._v(" "),s("td",[t._v("闰年")])]),t._v(" "),s("tr",[s("td",[t._v("1976-01-01")]),t._v(" "),s("td",[t._v("星期四")]),t._v(" "),s("td",[t._v("闰年")])]),t._v(" "),s("tr",[s("td",[t._v("1988-01-01")]),t._v(" "),s("td",[t._v("星期五")]),t._v(" "),s("td",[t._v("闰年")])]),t._v(" "),s("tr",[s("td",[t._v("2000-01-01")]),t._v(" "),s("td",[t._v("星期六")]),t._v(" "),s("td",[t._v("闰年")])]),t._v(" "),s("tr",[s("td",[t._v("2012-01-01")]),t._v(" "),s("td",[t._v("星期日")]),t._v(" "),s("td",[t._v("闰年")])])])]),t._v(" "),s("p",[t._v("再乘上是否连续的两种情况，一共28种组合。这些代表日期可以覆盖所有测试情况。")]),t._v(" "),s("p",[t._v("其中有意思的是最大周数，按照起始日不同所有周分布情况如下：")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("是否闰年")]),t._v(" "),s("th",[t._v("第一周天数")]),t._v(" "),s("th",[t._v("中间周数")]),t._v(" "),s("th",[t._v("最后一周天数")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("平年")]),t._v(" "),s("td",[t._v("7天")]),t._v(" "),s("td",[t._v("51周")]),t._v(" "),s("td",[t._v("1天")])]),t._v(" "),s("tr",[s("td",[t._v("平年")]),t._v(" "),s("td",[t._v("6天")]),t._v(" "),s("td",[t._v("51周")]),t._v(" "),s("td",[t._v("2天")])]),t._v(" "),s("tr",[s("td",[t._v("平年")]),t._v(" "),s("td",[t._v("5天")]),t._v(" "),s("td",[t._v("51周")]),t._v(" "),s("td",[t._v("3天")])]),t._v(" "),s("tr",[s("td",[t._v("平年")]),t._v(" "),s("td",[t._v("4天")]),t._v(" "),s("td",[t._v("51周")]),t._v(" "),s("td",[t._v("4天")])]),t._v(" "),s("tr",[s("td",[t._v("平年")]),t._v(" "),s("td",[t._v("3天")]),t._v(" "),s("td",[t._v("51周")]),t._v(" "),s("td",[t._v("5天")])]),t._v(" "),s("tr",[s("td",[t._v("平年")]),t._v(" "),s("td",[t._v("2天")]),t._v(" "),s("td",[t._v("51周")]),t._v(" "),s("td",[t._v("6天")])]),t._v(" "),s("tr",[s("td",[t._v("平年")]),t._v(" "),s("td",[t._v("1天")]),t._v(" "),s("td",[t._v("52周")]),t._v(" "),s("td",[t._v("0天")])]),t._v(" "),s("tr",[s("td",[t._v("闰年")]),t._v(" "),s("td",[t._v("7天")]),t._v(" "),s("td",[t._v("51周")]),t._v(" "),s("td",[t._v("2天")])]),t._v(" "),s("tr",[s("td",[t._v("闰年")]),t._v(" "),s("td",[t._v("6天")]),t._v(" "),s("td",[t._v("51周")]),t._v(" "),s("td",[t._v("3天")])]),t._v(" "),s("tr",[s("td",[t._v("闰年")]),t._v(" "),s("td",[t._v("5天")]),t._v(" "),s("td",[t._v("51周")]),t._v(" "),s("td",[t._v("4天")])]),t._v(" "),s("tr",[s("td",[t._v("闰年")]),t._v(" "),s("td",[t._v("4天")]),t._v(" "),s("td",[t._v("51周")]),t._v(" "),s("td",[t._v("5天")])]),t._v(" "),s("tr",[s("td",[t._v("闰年")]),t._v(" "),s("td",[t._v("3天")]),t._v(" "),s("td",[t._v("51周")]),t._v(" "),s("td",[t._v("6天")])]),t._v(" "),s("tr",[s("td",[t._v("闰年")]),t._v(" "),s("td",[t._v("2天")]),t._v(" "),s("td",[t._v("52周")]),t._v(" "),s("td",[t._v("0天")])]),t._v(" "),s("tr",[s("td",[t._v("闰年")]),t._v(" "),s("td",[t._v("1天")]),t._v(" "),s("td",[t._v("52周")]),t._v(" "),s("td",[t._v("1天")])])])]),t._v(" "),s("p",[t._v("可以看出如果不连续，闰年，首周只有1天，最后一周只有1天，那么最多会出现第54周的情况。")]),t._v(" "),s("h2",{attrs:{id:"参考"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#参考"}},[t._v("$")]),t._v(" 参考")]),t._v(" "),s("p",[t._v("https://en.wikipedia.org/wiki/ISO_8601")]),t._v(" "),s("p",[t._v("https://en.wikipedia.org/wiki/ISO_week_date#First_wee")])])}),[],!1,null,null,null);s.default=_.exports}}]);