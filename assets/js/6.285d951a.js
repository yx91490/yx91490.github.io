(window.webpackJsonp=window.webpackJsonp||[]).push([[6],{334:function(e,a,t){e.exports=t.p+"assets/img/image2023-6-5_20-56-44.b9940b2c.png"},335:function(e,a,t){e.exports=t.p+"assets/img/image-20230605233143221.f96d7930.png"},336:function(e,a,t){e.exports=t.p+"assets/img/image-20230605233416053.65d9b6e8.png"},337:function(e,a,t){e.exports=t.p+"assets/img/image-20230605233555594.097444a2.png"},338:function(e,a,t){e.exports=t.p+"assets/img/image2023-6-5_20-57-52.6eea48ac.png"},339:function(e,a,t){e.exports=t.p+"assets/img/image2023-6-1_18-25-48.d94a1658.png"},340:function(e,a,t){e.exports=t.p+"assets/img/image2023-6-1_18-55-13.2b9fd69f.png"},341:function(e,a,t){e.exports=t.p+"assets/img/image2023-6-5_12-28-35.8c32a55a.png"},342:function(e,a,t){e.exports=t.p+"assets/img/image2023-6-5_12-27-39.4499001e.png"},494:function(e,a,t){"use strict";t.r(a);var s=t(17),r=Object(s.a)({},(function(){var e=this,a=e._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"impala问题记录"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#impala问题记录"}},[e._v("$")]),e._v(" Impala问题记录")]),e._v(" "),a("h2",{attrs:{id:"python2证书问题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#python2证书问题"}},[e._v("$")]),e._v(" python2证书问题")]),e._v(" "),a("p",[e._v("运行Impala的脚本"),a("code",[e._v("infra/python/deps/pip_download.py")]),e._v("下载pip包的时候，本来想配置一个镜像来加速下载，但是配置完"),a("code",[e._v("export PYPI_MIRROR=https://pypi.tuna.tsinghua.edu.cn")]),e._v("之后发现python2访问镜像地址会报错：")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('python2 -c \'from urllib2 import urlopen; urlopen("https://mirrors.tuna.tsinghua.edu.cn/help/pypi/")\'\nTraceback (most recent call last):\n  File "<string>", line 1, in <module>\n  File "/usr/lib64/python2.7/urllib2.py", line 154, in urlopen\n    return opener.open(url, data, timeout)\n  File "/usr/lib64/python2.7/urllib2.py", line 431, in open\n    response = self._open(req, data)\n  File "/usr/lib64/python2.7/urllib2.py", line 449, in _open\n    \'_open\', req)\n  File "/usr/lib64/python2.7/urllib2.py", line 409, in _call_chain\n    result = func(*args)\n  File "/usr/lib64/python2.7/urllib2.py", line 1258, in https_open\n    context=self._context, check_hostname=self._check_hostname)\n  File "/usr/lib64/python2.7/urllib2.py", line 1214, in do_open\n    raise URLError(err)\nurllib2.URLError: <urlopen error [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed (_ssl.c:618)>\n')])])]),a("p",[e._v("浏览器访问该地址是没有证书相关问题的，换成http协议会自动跳转到https协议的地址。一开始我以为服务器证书有问题，改代码肯定可以，但是有没有不改代码能生效的方法？于是请教了新来的大牛，大牛一顿操作最终帮我解决了问题。")]),e._v(" "),a("p",[e._v("大佬先查看了下环境：")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("$ cat /etc/redhat-release\nCentOS Linux release 7.9.2009 (Core)\n")])])]),a("p",[e._v("然后用镜像源安装了下requests：")]),e._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("PYPI_MIRROR")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("https://pypi.python.org pip2 "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("install")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("--user")]),e._v(" requests\n")])])]),a("p",[e._v("又升级了下：")]),e._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("PYPI_MIRROR")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("https://pypi.python.org pip2 "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("install")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("--user")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("--upgrade")]),e._v(" requests\n")])])]),a("p",[e._v("发现没有问题之后又尝试运行了下脚本：")]),e._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[e._v("python2 pip_download.py\n")])])]),a("p",[e._v("然后进python交互终端执行：")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('from urllib2 import urlopen; urlopen("https://mirrors.tuna.tsinghua.edu.cn/help/pypi/")\n')])])]),a("p",[e._v("发现还是报错。")]),e._v(" "),a("p",[e._v("然后试探性请求了下镜像源：")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("$ curl -v > /dev/null  https://pypi.tuna.tsinghua.edu.cn/\n  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\n                                 Dload  Upload   Total   Spent    Left  Speed\n  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to pypi.tuna.tsinghua.edu.cn port 443 (#0)\n*   Trying 101.6.15.130...\n* Connected to pypi.tuna.tsinghua.edu.cn (101.6.15.130) port 443 (#0)\n* Initializing NSS with certpath: sql:/etc/pki/nssdb\n*   CAfile: /etc/pki/tls/certs/ca-bundle.crt\n  CApath: none\n  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* SSL connection using TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384\n* Server certificate:\n* \tsubject: CN=tuna.tsinghua.edu.cn\n* \tstart date: 9月 26 09:10:36 2021 GMT\n* \texpire date: 12月 25 09:10:35 2021 GMT\n* \tcommon name: tuna.tsinghua.edu.cn\n* \tissuer: CN=R3,O=Let's Encrypt,C=US\n> GET / HTTP/1.1\n> User-Agent: curl/7.29.0\n> Host: pypi.tuna.tsinghua.edu.cn\n> Accept: */*\n> \n< HTTP/1.1 302 Moved Temporarily\n< Server: nginx/1.18.0\n< Date: Thu, 28 Oct 2021 11:17:48 GMT\n< Content-Type: text/html\n< Content-Length: 145\n< Connection: keep-alive\n< Location: https://mirrors.tuna.tsinghua.edu.cn/help/pypi\n< \n{ [data not shown]\n100   145  100   145    0     0    730      0 --:--:-- --:--:-- --:--:--   728\n* Connection #0 to host pypi.tuna.tsinghua.edu.cn left intact\n")])])]),a("p",[e._v("然后继续请求跳转之后的地址：")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("curl -v > /dev/null https://mirrors.tuna.tsinghua.edu.cn/help/pypi\n...\ncurl -v > /dev/null https://mirrors.tuna.tsinghua.edu.cn/help/pypi/\n...\n")])])]),a("p",[e._v("查看证书的rpm包：")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("$ rpm -qa | fgrep cert\nca-certificates-2020.2.41-70.0.el7_8.noarch\n")])])]),a("p",[e._v("列出安装包的文件：")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("# rpm -ql ca-certificates\n/etc/pki/ca-trust\n...\n/etc/pki/tls\n/etc/pki/tls/cert.pem\n/etc/pki/tls/certs\n/etc/pki/tls/certs/ca-bundle.crt\n/etc/pki/tls/certs/ca-bundle.trust.crt\n/etc/ssl\n/etc/ssl/certs\n...\n")])])]),a("p",[e._v("使用python3请求相应地址：")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("// TODO\n")])])]),a("p",[e._v("查看证书版本信息：")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("$ rpm -ql ca-certificates -i\nName        : ca-certificates\nVersion     : 2020.2.41\nRelease     : 70.0.el7_8\nArchitecture: noarch\nInstall Date: 2020年11月13日 星期五 09时54分08秒\nGroup       : System Environment/Base\nSize        : 946094\nLicense     : Public Domain\nSignature   : RSA/SHA256, 2020年06月24日 星期三 01时38分15秒, Key ID 24c6a8a7f4a80eb5\nSource RPM  : ca-certificates-2020.2.41-70.0.el7_8.src.rpm\nBuild Date  : 2020年06月23日 星期二 23时39分22秒\nBuild Host  : x86-02.bsys.centos.org\nRelocations : (not relocatable)\nPackager    : CentOS BuildSystem <http://bugs.centos.org>\nVendor      : CentOS\nURL         : http://www.mozilla.org/\nSummary     : The Mozilla CA root certificate bundle\nDescription :\nThis package contains the set of CA certificates chosen by the\nMozilla Foundation for use with the Internet PKI.\n...\n")])])]),a("p",[e._v("查看证书目录：")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("cd /etc/pki/ca-trust\nll\ncat README\n")])])]),a("p",[e._v("尝试更新证书：")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("update-ca-trust\n")])])]),a("p",[e._v("使用strace查看python2使用的证书：")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('$ PYPI_MIRROR=https://pypi.tuna.tsinghua.edu.cn strace -f -etrace=open python2 ./pip_download.py\n\n...\n[pid  2846] open("/dev/urandom", O_RDONLY|O_NOCTTY|O_NONBLOCK) = 4\n[pid  2846] open("/etc/pki/tls/cert.pem", O_RDONLY) = 4\n[pid  2849] open("/etc/pki/tls/cert.pem", O_RDONLY) = 4\n[pid  2847] open("/etc/pki/tls/cert.pem", O_RDONLY) = 6\n[pid  2849] open("/etc/nsswitch.conf", O_RDONLY|O_CLOEXEC) = 4\n[pid  2849] open("/etc/host.conf", O_RDONLY|O_CLOEXEC) = 4\n[pid  2849] open("/etc/resolv.conf", O_RDONLY|O_CLOEXEC) = 4\n[pid  2849] open("tls/x86_64/libnss_files.so.2", O_RDONLY|O_CLOEXEC) = -1 ENOENT (No such file or directory)\n[pid  2849] open("tls/libnss_files.so.2", O_RDONLY|O_CLOEXEC) = -1 ENOENT (No such file or directory)\n[pid  2849] open("x86_64/libnss_files.so.2", O_RDONLY|O_CLOEXEC) = -1 ENOENT (No such file or directory)\n[pid  2849] open("libnss_files.so.2", O_RDONLY|O_CLOEXEC) = -1 ENOENT (No such file or directory)\n[pid  2849] open("/opt/jdk/java/jre/lib/amd64/libnss_files.so.2", O_RDONLY|O_CLOEXEC) = -1 ENOENT (No such file or directory)\n[pid  2849] open("/opt/jdk/java/jre/lib/amd64/server/libnss_files.so.2", O_RDONLY|O_CLOEXEC) = -1 ENOENT (No such file or directory)\n[pid  2849] open("/etc/ld.so.cache", O_RDONLY|O_CLOEXEC) = 4\n[pid  2849] open("/lib64/libnss_files.so.2", O_RDONLY|O_CLOEXEC) = 4\n[pid  2849] open("/etc/hosts", O_RDONLY|O_CLOEXEC) = 4\n[pid  2849] open("tls/x86_64/libnss_dns.so.2", O_RDONLY|O_CLOEXEC) = -1 ENOENT (No such file or directory)\n[pid  2849] open("tls/libnss_dns.so.2", O_RDONLY|O_CLOEXEC) = -1 ENOENT (No such file or directory)\n[pid  2849] open("x86_64/libnss_dns.so.2", O_RDONLY|O_CLOEXEC) = -1 ENOENT (No such file or directory)\n[pid  2849] open("libnss_dns.so.2", O_RDONLY|O_CLOEXEC) = -1 ENOENT (No such file or directory)\n[pid  2849] open("/opt/jdk/java/jre/lib/amd64/libnss_dns.so.2", O_RDONLY|O_CLOEXEC) = -1 ENOENT (No such file or directory)\n[pid  2849] open("/opt/jdk/java/jre/lib/amd64/server/libnss_dns.so.2", O_RDONLY|O_CLOEXEC) = -1 ENOENT (No such file or directory)\n[pid  2849] open("/etc/ld.so.cache", O_RDONLY|O_CLOEXEC) = 4\n[pid  2849] open("/lib64/libnss_dns.so.2", O_RDONLY|O_CLOEXEC) = 4\n[pid  2846] open("/etc/hosts", O_RDONLY|O_CLOEXEC) = 7\n[pid  2848] open("/etc/pki/tls/cert.pem", O_RDONLY) = 6\n[pid  2847] open("/etc/hosts", O_RDONLY|O_CLOEXEC) = 6\n[pid  2848] open("/etc/hosts", O_RDONLY|O_CLOEXEC) = 3\n[pid  2847] open("/etc/gai.conf", O_RDONLY|O_CLOEXEC) = -1 ENOENT (No such file or directory)\n[Errno socket error] [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed (_ssl.c:618)\nSleeping for 18 seconds before retrying\n[Errno socket error] [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed (_ssl.c:618)\nSleeping for 19 seconds before retrying\n[Errno socket error] [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed (_ssl.c:618)\nSleeping for 17 seconds before retrying\n[Errno socket error] [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed (_ssl.c:618)\nSleeping for 13 seconds before retrying\nGetting package info from /simple/boto3/\n[Errno 2] No such file or directory: \'/simple/boto3/\'\nSleeping for 155 seconds before retrying\nGetting package info from https://pypi.tuna.tsinghua.edu.cn/simple/boto3/\n[pid  2847] open("/etc/pki/tls/cert.pem", O_RDONLY) = 8\n[pid  2847] open("/etc/hosts", O_RDONLY|O_CLOEXEC) = 8\n[Errno socket error] [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed (_ssl.c:618)\nSleeping for 18 seconds before retrying\nGetting package info from /simple/botocore/\n[Errno 2] No such file or directory: \'/simple/botocore/\'\nSleeping for 108 seconds before retrying\nGetting package info from https://pypi.tuna.tsinghua.edu.cn/simple/botocore/\n[pid  2849] open("/etc/pki/tls/cert.pem", O_RDONLY) = 6\n[pid  2849] open("/etc/hosts", O_RDONLY|O_CLOEXEC) = 6\nGetting package info from https://pypi.tuna.tsinghua.edu.cn/simple/simplejson/\n[pid  2846] open("/etc/pki/tls/cert.pem", O_RDONLY) = 9\n[pid  2846] open("/etc/hosts", O_RDONLY|O_CLOEXEC) = 9\nccd cGetting package info from https://pypi.tuna.tsinghua.edu.cn/simple/allpairs/\n[pid  2848] open("/etc/pki/tls/cert.pem", O_RDONLY) = 10\n[pid  2848] open("/etc/hosts", O_RDONLY|O_CLOEXEC) = 10\nc[Errno socket error] [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed (_ssl.c:618)\nSleeping for 35 seconds before retrying\n[Errno socket error] [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed (_ssl.c:618)\nSleeping for 36 seconds before retrying\nf[Errno socket error] [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed (_ssl.c:618)\nSleeping for 5 seconds before retrying\n')])])]),a("p",[e._v("进入目录：")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("cd /etc/pki/tls\ncat cert.pem\n")])])]),a("p",[e._v("在基本确定是证书的问题之后，大佬在自己的电脑上继续查找资料和试验，过了以后告诉我，这是python2的bug，系统的证书库里有一个旧的证书 DST Root CA X3，过期时间  Sep 30 14:01:15 2021 GMT，当这个证书存在的时候，python2就会失败。解决办法就是将此证书加入黑名单：")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("$ cat /etc/pki/ca-trust/source/blacklist/Old-DST-Root-CA-X3.pem\n-----BEGIN CERTIFICATE-----\nMIIDSjCCAjKgAwIBAgIQRK+wgNajJ7qJMDmGLvhAazANBgkqhkiG9w0BAQUFADA/\nMSQwIgYDVQQKExtEaWdpdGFsIFNpZ25hdHVyZSBUcnVzdCBDby4xFzAVBgNVBAMT\nDkRTVCBSb290IENBIFgzMB4XDTAwMDkzMDIxMTIxOVoXDTIxMDkzMDE0MDExNVow\nPzEkMCIGA1UEChMbRGlnaXRhbCBTaWduYXR1cmUgVHJ1c3QgQ28uMRcwFQYDVQQD\nEw5EU1QgUm9vdCBDQSBYMzCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEB\nAN+v6ZdQCINXtMxiZfaQguzH0yxrMMpb7NnDfcdAwRgUi+DoM3ZJKuM/IUmTrE4O\nrz5Iy2Xu/NMhD2XSKtkyj4zl93ewEnu1lcCJo6m67XMuegwGMoOifooUMM0RoOEq\nOLl5CjH9UL2AZd+3UWODyOKIYepLYYHsUmu5ouJLGiifSKOeDNoJjj4XLh7dIN9b\nxiqKqy69cK3FCxolkHRyxXtqqzTWMIn/5WgTe1QLyNau7Fqckh49ZLOMxt+/yUFw\n7BZy1SbsOFU5Q9D8/RhcQPGX69Wam40dutolucbY38EVAjqr2m7xPi71XAicPNaD\naeQQmxkqtilX4+U9m5/wAl0CAwEAAaNCMEAwDwYDVR0TAQH/BAUwAwEB/zAOBgNV\nHQ8BAf8EBAMCAQYwHQYDVR0OBBYEFMSnsaR7LHH62+FLkHX/xBVghYkQMA0GCSqG\nSIb3DQEBBQUAA4IBAQCjGiybFwBcqR7uKGY3Or+Dxz9LwwmglSBd49lZRNI+DT69\nikugdB/OEIKcdBodfpga3csTS7MgROSR6cz8faXbauX+5v3gTt23ADq1cEmv8uXr\nAvHRAosZy5Q6XkjEGB5YGV8eAlrwDPGxrancWYaLbumR9YbK+rlmM6pZW87ipxZz\nR8srzJmwN0jP41ZL9c8PDHIyh8bwRLtTcm1D9SZImlJnt1ir/md2cXjbDaJWFBM5\nJDGFoqgCWjBH4d1QB7wCCZAA62RjYJsWvIjJEubSfZGL+T0yjWW06XyxV3bqxbYo\nOb8VZRzI9neWagqNdwvYkQsEjgfbKbYK7p2CNTUQ\n-----END CERTIFICATE-----\n")])])]),a("p",[e._v("然后更新证书：")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("update-ca-trust\n")])])]),a("p",[e._v("验证没有问题：")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("python2 -c 'from urllib2 import urlopen; urlopen(\"https://mirrors.tuna.tsinghua.edu.cn/help/pypi/\")'\n")])])]),a("p",[e._v("参考：")]),e._v(" "),a("p",[a("a",{attrs:{href:"https://www.openssl.org/blog/blog/2021/09/13/LetsEncryptRootCertExpire/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Old Let’s Encrypt Root Certificate Expiration and OpenSSL 1.0.2"),a("OutboundLink")],1)]),e._v(" "),a("h2",{attrs:{id:"一个jdbc的logintimeout超时问题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#一个jdbc的logintimeout超时问题"}},[e._v("$")]),e._v(" 一个JDBC的loginTimeout超时问题")]),e._v(" "),a("p",[e._v("线上的Impala遇到一个Socket超时问题，报错堆栈如下：")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("org.apache.hive.jdbc.HiveConnection []: Error opening session\norg.apache.thrift.transport.TTransportException: java.net.SocketTimeoutException: Read timed out\n        at org.apache.thrift.transport.TIOStreamTransport.read(TIOStreamTransport.java:129)\n        at org.apache.thrift.transport.TTransport.readAll(TTransport.java:86)\n        at org.apache.thrift.protocol.TBinaryProtocol.readAll(TBinaryProtocol.java:429)\n        at org.apache.thrift.protocol.TBinaryProtocol.readI32(TBinaryProtocol.java:318)\n        at org.apache.thrift.protocol.TBinaryProtocol.readMessageBegin(TBinaryProtocol.java:219)\n        at org.apache.thrift.TServiceClient.receiveBase(TServiceClient.java:77)\n        at org.apache.hive.service.cli.thrift.TCLIService$Client.recv_OpenSession(TCLIService.java:156)\n        at org.apache.hive.service.cli.thrift.TCLIService$Client.OpenSession(TCLIService.java:143)\n        at org.apache.hive.jdbc.HiveConnection.openSession(HiveConnection.java:464)\n        at org.apache.hive.jdbc.HiveConnection.<init>(HiveConnection.java:181)\n        at org.apache.hive.jdbc.HiveDriver.connect(HiveDriver.java:105)\n        at java.sql.DriverManager.getConnection(DriverManager.java:664)\n        at java.sql.DriverManager.getConnection(DriverManager.java:270)\nCaused by: java.net.SocketTimeoutException: Read timed out\n        at java.net.SocketInputStream.socketRead0(Native Method)\n        at java.net.SocketInputStream.socketRead(SocketInputStream.java:116)\n")])])]),a("p",[e._v("看了下日志，大约30s就超时了，通常来说Impala的查询的执行时间有可能是分钟级别的，这么短的超时时间明显不对劲，咨询了下大佬Java的Socket超时有可能提前结束吗，大佬的答案是否定的。因为我们用的是Hive JDBC Driver，看了一下Socket超时时间是在thrift的TSocket构造函数里设置的：")]),e._v(" "),a("p",[e._v("https://github.com/apache/hive/blob/rel/release-3.1.3/common/src/java/org/apache/hadoop/hive/common/auth/HiveAuthUtils.java#L45")]),e._v(" "),a("p",[e._v("而 loginTimeout 的取值就有点二了，是从DriverManager的静态方法获取的：")]),e._v(" "),a("p",[e._v("https://github.com/apache/hive/blob/rel/release-3.1.3/jdbc/src/java/org/apache/hive/jdbc/HiveConnection.java#L806")]),e._v(" "),a("p",[e._v("这也就意味着 loginTimeout 的设置没法做到很好的隔离性。用 arthas 看了一下DriverManager.logintimeout的值，还真的是 30s：")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("[arthas@21070]$ getstatic java.sql.DriverManager loginTimeout\nfield: loginTimeout\n@Integer[30]\nAffect(row-cnt:1) cost in 19ms\n")])])]),a("p",[e._v("而这30s的始作俑者猜一下也大概是跟JDBC有关的其他Driver或者连接池，最终发现是连接MySQL用的HikariCP连接池里做的手脚：")]),e._v(" "),a("p",[e._v("https://github.com/brettwooldridge/HikariCP/blob/HikariCP-4.0.3/src/main/java/com/zaxxer/hikari/pool/PoolBase.java#L114")]),e._v(" "),a("p",[e._v("https://github.com/brettwooldridge/HikariCP/blob/HikariCP-4.0.3/src/main/java/com/zaxxer/hikari/pool/PoolBase.java#L343")]),e._v(" "),a("p",[e._v("https://github.com/brettwooldridge/HikariCP/blob/HikariCP-4.0.3/src/main/java/com/zaxxer/hikari/pool/PoolBase.java#L624")]),e._v(" "),a("p",[e._v("https://github.com/brettwooldridge/HikariCP/blob/HikariCP-4.0.3/src/main/java/com/zaxxer/hikari/util/DriverDataSource.java#L154")]),e._v(" "),a("p",[e._v("这可能算是 JDBC 设计上的一个缺陷吧，全局的静态变量就没法做到线程隔离了，至于 HikariCP 也遵循这个规则的原因就不得而知了。")]),e._v(" "),a("p",[e._v("Hive 的 master 分支其实已经修复了这个问题，修复的方式是由一个新增的 sessionVar 变量来控制，但是Hive JDBC迟迟没有发布正式的版本，最后的修复方法只能是backports了"),a("a",{attrs:{href:"https://github.com/apache/hive/pull/1611",target:"_blank",rel:"noopener noreferrer"}},[e._v("HIVE-12371"),a("OutboundLink")],1),e._v("的 patch了。")]),e._v(" "),a("h3",{attrs:{id:"参考"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#参考"}},[e._v("$")]),e._v(" 参考")]),e._v(" "),a("p",[a("a",{attrs:{href:"https://issues.apache.org/jira/browse/HIVE-12371",target:"_blank",rel:"noopener noreferrer"}},[e._v("HIVE-12371 Adding a timeout connection parameter for JDBC"),a("OutboundLink")],1)]),e._v(" "),a("h2",{attrs:{id:"impala-6876-一个catalog内存泄露问题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#impala-6876-一个catalog内存泄露问题"}},[e._v("$")]),e._v(" IMPALA-6876：一个Catalog内存泄露问题")]),e._v(" "),a("p",[e._v("一个线上环境的catalogd JVM的最大堆内存已经配置了20G，还是会发生OOM，虽然表很多但是不至于占这么大内存，怀疑是不是哪里有内存泄露。这个环境的Impala版本是3.2，由于JVM参数配置了"),a("code",[e._v("X:+HeapDumpOnOutOfMemoryError")]),e._v("，于是便把dump文件拿下来分析了一下。")]),e._v(" "),a("p",[a("img",{attrs:{src:t(334),alt:"img"}})]),e._v(" "),a("p",[e._v("按Retained Heap看Histogram，占比大的主要还是HdfsTable和HdfsPartition这两个类：")]),e._v(" "),a("p",[a("img",{attrs:{src:t(335),alt:"image-20230605233143221"}})]),e._v(" "),a("p",[e._v("Leak报告如下：")]),e._v(" "),a("p",[a("img",{attrs:{src:t(336),alt:"image-20230605233416053"}})]),e._v(" "),a("p",[a("img",{attrs:{src:t(337),alt:"image-20230605233555594"}})]),e._v(" "),a("p",[e._v("可以看出CatalogUsageMonitor引用的内存占用很大，直观地怀疑内存泄露发生在CatalogUsageMonitor里面的PriorityQueue里，但是CatalogUsageMonitor里面的PriorityQueue长度最大只有 25，感觉无从下手。")]),e._v(" "),a("p",[e._v("后来看Histogram发现一个可疑的地方是，org.apache.impala.catalog.Db的实例一共有 25 个，其中有 9 个org.apache.impala.catalog.Db对象都是同一个库的不同版本的实例：")]),e._v(" "),a("p",[a("img",{attrs:{src:t(338),alt:"img"}})]),e._v(" "),a("p",[a("img",{attrs:{src:t(339),alt:"img"}})]),e._v(" "),a("p",[e._v("同一个 Db 的旧版本的 org.apache.impala.catalog.Db 实例没有被 gc 掉，这可能就是问题的原因。每个引用的内存约在 2G，也解释了JVM 内存的主要来源。")]),e._v(" "),a("p",[e._v("查看旧版本org.apache.impala.catalog.Db到 GCRoot 的引用终于找到了gc不掉的原因：")]),e._v(" "),a("p",[a("img",{attrs:{src:t(340),alt:"img"}})]),e._v(" "),a("p",[e._v("从上图可以看出，虽然其他地方已经没有引用了，但是旧版本org.apache.impala.catalog.Db还通过 Table 被CatalogUsageMonitor里的 TopNCache 引用了。")]),e._v(" "),a("p",[e._v("临时解决方式：将下面的参数添加到 catalogd 的 JVM 参数里：")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("-Dorg.apache.impala.catalog.CatalogUsageMonitor.NUM_TABLES_TRACKED=1\n")])])]),a("p",[e._v("再次手动执行dump命令(jmap -dump:live,format=b)，分析下dump文件，可以看到总堆内存降到 1G 以下：")]),e._v(" "),a("p",[a("img",{attrs:{src:t(341),alt:"img"}})]),e._v(" "),a("p",[e._v("org.apache.impala.catalog.Db实例总数下降，没有多余版本的 org.apache.impala.catalog.Db：")]),e._v(" "),a("p",[a("img",{attrs:{src:t(342),alt:"img"}})]),e._v(" "),a("p",[e._v("搜了一下，其实社区里早就有人提出了这个问题：https://issues.apache.org/jira/browse/IMPALA-6876，只是一直没人解决。")]),e._v(" "),a("h2",{attrs:{id:"join优化"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#join优化"}},[e._v("$")]),e._v(" Join优化")]),e._v(" "),a("table",[a("thead",[a("tr",[a("th",[e._v("Issues")]),e._v(" "),a("th",[e._v("描述")])])]),e._v(" "),a("tbody",[a("tr",[a("td",[e._v("IMPALA-5022")]),e._v(" "),a("td",[e._v("外连接化简")])]),e._v(" "),a("tr",[a("td"),e._v(" "),a("td")]),e._v(" "),a("tr",[a("td"),e._v(" "),a("td")]),e._v(" "),a("tr",[a("td"),e._v(" "),a("td")]),e._v(" "),a("tr",[a("td"),e._v(" "),a("td")])])]),e._v(" "),a("h2",{attrs:{id:"impala-12362-服务管理脚本改进"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#impala-12362-服务管理脚本改进"}},[e._v("$")]),e._v(" IMPALA-12362：服务管理脚本改进")]),e._v(" "),a("p",[e._v("由于社区版Apache Impala并没有提供现成的二进制包构建方式，我相信大部分公司使用Impala是依赖于Cloudera公司的CDH发行版的。“社区苦Impala无包久矣”。")]),e._v(" "),a("p",[e._v("好在这件事情将成为历史，在千呼万唤之中，社区在Impala 4.3版本中补足了构建二进制包的能力（IMPALA-10262），这样社区用户就可以不依赖于CDH进行Impala的部署和升级。在4.4版本中对服务管理脚本又有了进一步的改进（IMPALA-12362）。今天就对打包和服务管理脚本的使用进行一个介绍。")]),e._v(" "),a("h3",{attrs:{id:"二进制包的构建"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#二进制包的构建"}},[e._v("$")]),e._v(" 二进制包的构建")]),e._v(" "),a("p",[e._v("二进制包的构建依赖于cmake的install命令和CPack命令，但是都被封装到buildall.sh脚本中了，只需要执行如下命令即可：")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("./buildall.sh -noclean -skiptests -release -package\n")])])]),a("p",[e._v("脚本执行完成之后就会在"),a("code",[e._v("package/build")]),e._v("构建出来一个名字类似"),a("code",[e._v("apache-impala-4.4.0_hive-3.1.3-369-x86_64.deb")]),e._v("的DEB包或者RPM包，可以用于部署。")]),e._v(" "),a("h3",{attrs:{id:"二进制包的部署"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#二进制包的部署"}},[e._v("$")]),e._v(" 二进制包的部署")]),e._v(" "),a("p",[e._v("二进制包的目录结构如下：")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v(".\n|-- LICENSE\n|-- NOTICE\n|-- bin\n|   `-- impala.sh                                   # 服务管理脚本\n|-- conf\n|   |-- core-site.xml.template                      # core-site.xml配置文件的模板，需要根据集群环境进行修改\n|   |-- hdfs-site.xml.template                      # hdfs-site.xml配置文件的模板，需要根据集群环境进行修改\n|   |-- hive-site.xml.template                      # hive-site.xml配置文件的模板，需要根据集群环境进行修改\n|   |-- llama-site.xml.template                     # llama-site.xml配置文件的模板\n|   |-- fair-scheduler.xml.template                 # fair-scheduler.xml配置文件的模板\n|   |-- impala-env.sh                               # impala.sh依赖的环境变量配置\n|   |-- impalad_flags                               # impalad的flag文件\n|   |-- catalogd_flags                              # catalogd的flag文件\n|   |-- admissiond_flags                            # admissiond的flag文件\n|   `-- statestored_flags                           # statestored的flag文件\n|-- lib\n|   |-- jars                                        # fe的jar包及其依赖\n|   `-- native                                      # be依赖的native库\n|-- sbin\n|   |-- admissiond -> impalad\n|   |-- catalogd -> impalad\n|   |-- impalad                                     # be的二进制文件\n|   `-- statestored -> impalad\n|-- shell                                           # impala-shell及其依赖\n|-- util\n|   `-- impala-profile-tool                         # 用于反解析profile的工具\n`-- www                                             # WebUI依赖的静态js,css文件\n")])])]),a("p",[e._v("Impala相关配置文件都在"),a("code",[e._v("conf")]),e._v("目录下，在OS上安装完二进制包之后，需要根据Hive和Hadoop集群的环境修改下对应配置文件，包括添加"),a("code",[e._v("conf/core-site.xml")]),e._v("，"),a("code",[e._v("conf/hdfs-site.xml")]),e._v("和"),a("code",[e._v("conf/hive-site.xml")]),e._v("这三个文件，如果需要对"),a("code",[e._v("admission control")]),e._v("进行配置，还需要添加"),a("code",[e._v("conf/fair-scheduler.xml")]),e._v("和"),a("code",[e._v("conf/llama-site.xml")]),e._v("这两个文件。")]),e._v(" "),a("p",[e._v("Impala服务的flag配置文件也都在conf目录下，文件名为"),a("code",[e._v("$service_flags")]),e._v("。默认配置可以启动，但是建议根据需要进行修改，比如日志目录的配置项："),a("code",[e._v("-log_dir")]),e._v("，minidump文件目录："),a("code",[e._v("-minidump_path")]),e._v("。")]),e._v(" "),a("p",[e._v("最后一个比较重要的配置文件是"),a("code",[e._v("conf/impala-env.sh")]),e._v("，用于指定impala.sh脚本用到的环境变量。其中最重要的环境变量是"),a("code",[e._v("JAVA_HOME")]),e._v("。建议对其中配置pid文件，标准输出文件，标准错误文件位置的环境变量进行修改。")]),e._v(" "),a("p",[e._v("为了实现可以通过命令行进行覆盖，impala-env.sh中的环境变量都通过下面的格式配置：")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v(': ${FOO:="bar"}\n')])])]),a("p",[e._v("或者：")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('# 将环境变量导出\nexport FOO=${FOO:-"bar"}\n')])])]),a("h3",{attrs:{id:"服务管理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#服务管理"}},[e._v("$")]),e._v(" 服务管理")]),e._v(" "),a("p",[e._v("服务管理主要依赖于"),a("code",[e._v("bin/impala.sh")]),e._v("脚本，通过执行"),a("code",[e._v("bin/impala.sh --help")]),e._v("可以看到使用帮助，主要分为如下几个子命令：")]),e._v(" "),a("table",[a("thead",[a("tr",[a("th",[e._v("子命令")]),e._v(" "),a("th",[e._v("说明")]),e._v(" "),a("th",[e._v("完整格式")])])]),e._v(" "),a("tbody",[a("tr",[a("td",[e._v("--help")]),e._v(" "),a("td",[e._v("显示使用帮助")]),e._v(" "),a("td",[a("code",[e._v("--help")])])]),e._v(" "),a("tr",[a("td",[e._v("--version")]),e._v(" "),a("td",[e._v("显示版本号")]),e._v(" "),a("td",[a("code",[e._v("--version")])])]),e._v(" "),a("tr",[a("td",[e._v("status")]),e._v(" "),a("td",[e._v("查询进程状态")]),e._v(" "),a("td",[a("code",[e._v("status <service>")])])]),e._v(" "),a("tr",[a("td",[e._v("health")]),e._v(" "),a("td",[e._v("查询服务是否可用")]),e._v(" "),a("td",[a("code",[e._v("health [<options>] <service>")])])]),e._v(" "),a("tr",[a("td",[e._v("stop")]),e._v(" "),a("td",[e._v("停止服务")]),e._v(" "),a("td",[a("code",[e._v("stop [<options>] <service>")])])]),e._v(" "),a("tr",[a("td",[e._v("start")]),e._v(" "),a("td",[e._v("启动服务")]),e._v(" "),a("td",[a("code",[e._v("start [<options>] <service> [<flags>]")])])]),e._v(" "),a("tr",[a("td",[e._v("restart")]),e._v(" "),a("td",[e._v("重启服务")]),e._v(" "),a("td",[a("code",[e._v("restart [<options>] <service> [<flags>]")])])])])]),e._v(" "),a("p",[e._v("如果命令正常执行，退出码为0，否则为非0。")]),e._v(" "),a("h4",{attrs:{id:"help子命令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#help子命令"}},[e._v("$")]),e._v(" help子命令")]),e._v(" "),a("p",[e._v("help子命令用来显示使用帮助。")]),e._v(" "),a("h4",{attrs:{id:"version子命令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#version子命令"}},[e._v("$")]),e._v(" version子命令")]),e._v(" "),a("p",[e._v("version子命令用来显示版本号。")]),e._v(" "),a("h4",{attrs:{id:"status子命令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#status子命令"}},[e._v("$")]),e._v(" status子命令")]),e._v(" "),a("p",[e._v("status子命令用来查询服务的进程（进程号记录在pid文件中）是否存活，如果进程存活则退出码为0，否则为非0。")]),e._v(" "),a("h4",{attrs:{id:"health子命令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#health子命令"}},[e._v("$")]),e._v(" health子命令")]),e._v(" "),a("p",[e._v("health子命令用来查询服务是否可用，服务可用的判断依据是Web接口"),a("code",[e._v("/healthz")]),e._v("返回"),a("code",[e._v("OK")]),e._v("。默认情况下health命令会轮询直到服务可用，或者等待超时。轮询的时间间隔（秒）可以通过"),a("code",[e._v("-p")]),e._v("选项指定，轮询的最大次数可以通过"),a("code",[e._v("-c")]),e._v("选项指定。如果服务可用则立即返回，退出码为0；如果服务的进程退出，或者等待超时则退出码为非0。")]),e._v(" "),a("h4",{attrs:{id:"start子命令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#start子命令"}},[e._v("$")]),e._v(" start子命令")]),e._v(" "),a("p",[e._v("start子命令用于启动服务，完整格式为：")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("start <options> <service> [<flags>]\n\noptions:\n  -c: maximum count of checks, defaults to 20.\n  -p: seconds of period between checks, defaults to 2.\n\nservice: {impalad|catalogd|admissiond|statestored}\n")])])]),a("p",[e._v("start子命令会调用"),a("code",[e._v("status")]),e._v("子命令和"),a("code",[e._v("health")]),e._v("子命令轮询启动后的进程状态和服务可用状态，直到进程退出，服务可用或者等待超时。轮询的时间间隔（秒）可以通过"),a("code",[e._v("-p")]),e._v("选项指定，轮询的最大次数可以通过"),a("code",[e._v("-c")]),e._v("选项指定。可以通过指定"),a("code",[e._v("-c 0")]),e._v("选项实现不检查服务可用状态。")]),e._v(" "),a("p",[e._v("服务启动的时候会写三个文件，包括：pid文件，标准输出文件，标准错误文件，这三个文件的位置通过环境变量控制，比如Impalad的三个环境变量名分别是："),a("code",[e._v("IMPALAD_PIDFILE")]),e._v("，"),a("code",[e._v("IMPALAD_STDOUTFILE")]),e._v("和"),a("code",[e._v("IMPALAD_STDERRFILE")]),e._v("。默认配置在"),a("code",[e._v("conf/impala-env.sh")]),e._v("中。")]),e._v(" "),a("p",[e._v("服务启动的时候会读取"),a("code",[e._v("conf/$service_flags")]),e._v("文件中的配置项，可以通过在service名的后面追加配置项进行覆盖。这在某些情况下比较有用，比如想要在同一台机器上的同一个目录中启动多个"),a("code",[e._v("Impalad")]),e._v("实例，默认情况下启动第二个服务实例的时候会因为端口已经被占用而报错，这个时候可以通过在service名后面指定端口解决，比如：")]),e._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("IMPALAD_PIDFILE")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("/var/run/impalad2.pid "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("IMPALAD_STDOUTFILE")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("/var/log/impalad2.out "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("IMPALAD_STDERRFILE")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("/var/log/impalad2.err "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("\n/opt/impala/bin/impala.sh "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("\nrestart impalad "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("-log_filename")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("impalad2 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("--beeswax_port")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("21002")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("--hs2_port")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("21052")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("--state_store_subscriber_port")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("23002")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("--webserver_port")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("25002")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("--krpc_port")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("27002")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("--hs2_http_port")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("28002")]),e._v("\n")])])]),a("h4",{attrs:{id:"stop子命令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#stop子命令"}},[e._v("$")]),e._v(" stop子命令")]),e._v(" "),a("p",[e._v("start子命令用于停止服务，完整格式为：")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("stop [<options>] <service>\n\noptions:\n  -c: maximum count of checks, defaults to 20.\n  -f: force kill a daemon service.\n  -g: graceful shutdown the impalad service.\n  -p: seconds of period between checks, defaults to 2.\n\nservice: {impalad|catalogd|admissiond|statestored}\n")])])]),a("p",[e._v("stop子命令同样会调用"),a("code",[e._v("status")]),e._v("子命令轮询进程状态直到进程退出或者等待超时。轮询的时间间隔（秒）可以通过"),a("code",[e._v("-p")]),e._v("选项指定，轮询的最大次数可以通过"),a("code",[e._v("-c")]),e._v("选项指定。")]),e._v(" "),a("p",[e._v("默认stop命令会给进程发送SIGTERM信号，如果指定了"),a("code",[e._v("-f")]),e._v("选项则会发送SIGKILL信号以强制终止进程（"),a("a",{attrs:{href:"http://issues.apache.org/jira/browse/IMPALA-13001",target:"_blank",rel:"noopener noreferrer"}},[e._v("IMPALA-13001"),a("OutboundLink")],1),e._v("）。")]),e._v(" "),a("p",[e._v("通过指定"),a("code",[e._v("-g")]),e._v("选项可以实现优雅停机（"),a("a",{attrs:{href:"http://issues.apache.org/jira/browse/IMPALA-13001",target:"_blank",rel:"noopener noreferrer"}},[e._v("IMPALA-13001"),a("OutboundLink")],1),e._v("）。需要注意的是"),a("code",[e._v("-f")]),e._v("选项和"),a("code",[e._v("-g")]),e._v("选项不能同时使用。")]),e._v(" "),a("h4",{attrs:{id:"restart子命令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#restart子命令"}},[e._v("$")]),e._v(" restart子命令")]),e._v(" "),a("p",[e._v("restart子命令用于重启服务，内部实现是依次调用stop子命令和start子命令。完整格式与start子命令相同。")])])}),[],!1,null,null,null);a.default=r.exports}}]);