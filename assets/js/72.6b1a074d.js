(window.webpackJsonp=window.webpackJsonp||[]).push([[72],{498:function(a,t,e){"use strict";e.r(t);var s=e(18),r=Object(s.a)({},(function(){var a=this,t=a._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("h1",{attrs:{id:"kudu"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#kudu"}},[a._v("$")]),a._v(" Kudu")]),a._v(" "),t("h2",{attrs:{id:"编译kudu源码"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#编译kudu源码"}},[a._v("$")]),a._v(" 编译Kudu源码")]),a._v(" "),t("h3",{attrs:{id:"要求"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#要求"}},[a._v("$")]),a._v(" 要求")]),a._v(" "),t("ul",[t("li",[a._v("不支持Windows")]),a._v(" "),t("li",[a._v("C++17兼容的编译器(GCC 7.0)")])]),a._v(" "),t("h3",{attrs:{id:"rhel或centos"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#rhel或centos"}},[a._v("$")]),a._v(" RHEL或CentOS")]),a._v(" "),t("p",[a._v("CentOS8.0之前的版本需要安装"),t("code",[a._v("Red Hat Developer Toolset")]),a._v("以便于能够访问C++17兼容的编译器。")]),a._v(" "),t("p",[a._v("1.安装必备库：")]),a._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("sudo")]),a._v(" yum "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("install")]),a._v(" autoconf automake cyrus-sasl-devel cyrus-sasl-gssapi "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n  cyrus-sasl-plain flex gcc gcc-c++ gdb "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" java-1.8.0-openjdk-devel "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n  krb5-server krb5-workstation libtool "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("make")]),a._v(" openssl-devel patch "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n  pkgconfig redhat-lsb-core "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("rsync")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("unzip")]),a._v(" vim-common "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("which")]),a._v("\n")])])]),t("p",[a._v("2.如果在 RHEL 或 8.0 之前的 CentOS 上构建，请安装 Red Hat Developer Toolset。以下是 CentOS 所需的步骤：")]),a._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("sudo")]),a._v(" yum "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("install")]),a._v(" centos-release-scl-rh\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("sudo")]),a._v(" yum "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("install")]),a._v(" devtoolset-8\n")])])]),t("p",[a._v("3.可选：如果需要支持 Kudu 的 NVM（非易失性内存）块缓存，请安装 memkind 库：")]),a._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("sudo")]),a._v(" yum "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("install")]),a._v(" memkind\n")])])]),t("p",[a._v("如果 Linux 发行版提供的 memkind 包太旧（需要 1.8.0 或更高版本），请从源代码构建和安装：")]),a._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("sudo")]),a._v(" yum "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("install")]),a._v(" numactl-libs numactl-devel\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" clone https://github.com/memkind/memkind.git\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("cd")]),a._v(" memkind\n./build.sh "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--prefix")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("/usr\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("sudo")]),a._v(" yum remove memkind\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("sudo")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("make")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("install")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("sudo")]),a._v(" ldconfig\n")])])]),t("p",[a._v("4.可选：如果您计划构建文档，请安装一些额外的软件包，包括 ruby：")]),a._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("sudo")]),a._v(" yum "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("install")]),a._v(" gem graphviz ruby-devel zlib-devel\n")])])]),t("p",[a._v("如果在 RHEL 或 CentOS 7.0 之前构建， gem 包可能需要替换为 rubygems。")]),a._v(" "),t("p",[a._v("构建文档需要 Doxygen 1.8.19 或更高版本，必须 "),t("a",{attrs:{href:"https://www.doxygen.nl/manual/install.html#install_src_unix",target:"_blank",rel:"noopener noreferrer"}},[a._v("手动从源代码构建"),t("OutboundLink")],1),a._v("。在低于 8.0 的 CentOS 或 RHEL 上构建此版本的 Doxygen 还需要 "),t("a",{attrs:{href:"https://www.softwarecollections.org/en/scls/rhscl/devtoolset-8/",target:"_blank",rel:"noopener noreferrer"}},[a._v("devtoolset"),t("OutboundLink")],1),a._v("。")]),a._v(" "),t("p",[a._v("5.克隆 Git 存储库并切换到新"),t("code",[a._v("kudu")]),a._v("目录：")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("git clone https://github.com/apache/kudu\ncd kudu\n")])])]),t("p",[a._v("6.使用"),t("code",[a._v("build-if-necessary.sh")]),a._v("脚本构建缺失的必要的三方软件。不使用 devtoolset 会导致"),t("code",[a._v("Host compiler appears to require libatomic, but cannot find it.")]),a._v("：")]),a._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[a._v("build-support/enable_devtoolset.sh thirdparty/build-if-necessary.sh\n")])])]),t("p",[a._v("7.使用上一步中安装的程序构建 Kudu。为中间输出选择一个构建目录，该目录可以位于文件系统中的任何位置，但"),t("code",[a._v("kudu")]),a._v("目录本身除外。请注意，仍然必须指定 devtoolset，否则会出现"),t("code",[a._v('cc1plus: error: unrecognized command line option "-std=c++17"')]),a._v("：")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("mkdir -p build/release\ncd build/release\n../../build-support/enable_devtoolset.sh \\\n  ../../thirdparty/installed/common/bin/cmake \\\n  -DCMAKE_BUILD_TYPE=release ../..\nmake -j4\n")])])]),t("p",[a._v("8.可选：安装 Kudu 可执行文件、库和头文件：")]),a._v(" "),t("p",[a._v("运行"),t("code",[a._v("sudo make install")]),a._v("安装以下内容：")]),a._v(" "),t("ul",[t("li",[a._v("kudu-tserver 和 kudu-master 可执行文件 "),t("code",[a._v("/usr/local/sbin")])]),a._v(" "),t("li",[a._v("Kudu 命令行工具 "),t("code",[a._v("/usr/local/bin")])]),a._v(" "),t("li",[a._v("Kudu 客户端库在 "),t("code",[a._v("/usr/local/lib64/")])]),a._v(" "),t("li",[a._v("Kudu 客户端标头 "),t("code",[a._v("/usr/local/include/kudu")])])]),a._v(" "),t("p",[a._v("默认安装目录为"),t("code",[a._v("/usr/local")]),a._v("。可以通过"),t("code",[a._v("DESTDIR")]),a._v(" 环境变量对其进行自定义：")]),a._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("sudo")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("make")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("DESTDIR")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("/opt/kudu "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("install")]),a._v("\n")])])]),t("p",[a._v("9.可选：构建文档。注意：此命令会构建不适合上传到 Kudu 网站的本地文档：")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("make docs\n")])])]),t("h3",{attrs:{id:"示例脚本"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#示例脚本"}},[a._v("$")]),a._v(" 示例脚本")]),a._v(" "),t("p",[a._v("此脚本概述了在新安装的 RHEL 或 CentOS 主机上构建 Kudu 的过程，并可用作自动化部署方案的基础。它跳过上面标记为"),t("strong",[a._v("可选")]),a._v("的步骤：")]),a._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token shebang important"}},[a._v("#!/bin/bash")]),a._v("\n\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("sudo")]),a._v(" yum "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-y")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("install")]),a._v(" autoconf automake "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("curl")]),a._v(" cyrus-sasl-devel cyrus-sasl-gssapi "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n  cyrus-sasl-plain flex gcc gcc-c++ gdb "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" java-1.8.0-openjdk-devel "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n  krb5-server krb5-workstation libtool "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("make")]),a._v(" openssl-devel patch pkgconfig "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n  redhat-lsb-core "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("rsync")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("unzip")]),a._v(" vim-common "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("which")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("sudo")]),a._v(" yum "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-y")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("install")]),a._v(" centos-release-scl-rh\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("sudo")]),a._v(" yum "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-y")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("install")]),a._v(" devtoolset-8\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" clone https://github.com/apache/kudu\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("cd")]),a._v(" kudu\nbuild-support/enable_devtoolset.sh thirdparty/build-if-necessary.sh\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("mkdir")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-p")]),a._v(" build/release\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("cd")]),a._v(" build/release\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("..")]),a._v("/"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("..")]),a._v("/build-support/enable_devtoolset.sh "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("..")]),a._v("/"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("..")]),a._v("/thirdparty/installed/common/bin/cmake "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-DCMAKE_BUILD_TYPE")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("release "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-DNO_TESTS")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("..")]),a._v("/"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("..")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("make")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-j4")]),a._v("\n")])])]),t("h3",{attrs:{id:"运行"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#运行"}},[a._v("$")]),a._v(" 运行")]),a._v(" "),t("p",[a._v("组织目录：")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("├── bin\n│   ├── kudu\n│   ├── kudu-master\n│   └── kudu-tserver\n├── master\n│   ├── conf/master.conf\n│   ├── data\n│   ├── log\n│   └── wal\n└── tserver\n    ├── conf/tserver.conf\n    ├── data\n    ├── log\n    └── wal\n")])])]),t("p",[a._v("master/conf/master.conf配置：")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("-rpc_bind_addresses=localhost:7051\n-webserver_interface=localhost\n-webserver_port=8051\n-fs_wal_dir=/home/kudu/kudu_cluster/master/wal\n-fs_data_dirs=/home/kudu/kudu_cluster/master/data\n-log_dir=/home/kudu/kudu_cluster/master/log\n-unlock_unsafe_flags\n-never_fsync\n")])])]),t("p",[a._v("tserver/conf/tserver.conf配置：")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("-rpc_bind_addresses=localhost:7150\n-webserver_interface=localhost\n-webserver_port=8150\n-fs_wal_dir=/apps/home/worker/kudu_cluster/tserver/wal\n-fs_data_dirs=/apps/home/worker/kudu_cluster/tserver/data\n-log_dir=/apps/home/worker/kudu_cluster/tserver/log\n-unlock_unsafe_flags\n-never_fsync\n-tserver_master_addrs=127.0.0.1:7051\n")])])]),t("p",[a._v("master报错：")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v('W0805 17:18:12.092677  5319 negotiation.cc:313] Failed RPC negotiation. Trace:\n0805 17:18:12.092524 (+     0us) reactor.cc:583] Submitting negotiation task for server connection from 127.0.0.1:39018\n0805 17:18:12.092630 (+   106us) negotiation.cc:304] Negotiation complete: Invalid argument: Server connection negotiation failed: server connection from 127.0.0.1:39018: unable to find SASL plugin: PLAIN\nMetrics: {"server-negotiator.queue_time_us":49,"thread_start_us":31,"threads_started":1}\n')])])]),t("p",[a._v("tserver报错：")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v('W0805 17:05:51.576901  2112 negotiation.cc:313] Failed RPC negotiation. Trace:\n0805 17:05:51.576750 (+     0us) reactor.cc:583] Submitting negotiation task for client connection to 127.0.0.1:7051\n0805 17:05:51.576852 (+   102us) negotiation.cc:304] Negotiation complete: Invalid argument: Client connection negotiation failed: client connection to 127.0.0.1:7051: unable to find SASL plugin: PLAIN\nMetrics: {"client-negotiator.queue_time_us":61,"thread_start_us":48,"threads_started":1}\nW0805 17:05:51.576957  2110 heartbeater.cc:586] Failed to heartbeat to 127.0.0.1:7051 (0 consecutive failures): Invalid argument: Failed to ping master at 127.0.0.1:7051: Client connection negotiation failed: client connection to 127.0.0.1:7051: unable to find SASL plugin: PLAIN\n')])])]),t("p",[a._v("安装软件包：")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("yum install gcc python-devel\nyum install cyrus-sasl*\n")])])]),t("h3",{attrs:{id:"参考"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#参考"}},[a._v("$")]),a._v(" 参考")]),a._v(" "),t("p",[t("a",{attrs:{href:"https://kudu.apache.org/docs/installation.html#build_from_source",target:"_blank",rel:"noopener noreferrer"}},[a._v("Build From Source"),t("OutboundLink")],1)]),a._v(" "),t("p",[t("a",{attrs:{href:"https://bbs.huaweicloud.com/blogs/174501",target:"_blank",rel:"noopener noreferrer"}},[a._v("手把手教你在华为云编译和使用Apache Kudu"),t("OutboundLink")],1)]),a._v(" "),t("p",[t("a",{attrs:{href:"https://www.cnblogs.com/barneywill/p/10793687.html",target:"_blank",rel:"noopener noreferrer"}},[a._v("【原创】大叔经验分享（53）kudu报错unable to find SASL plugin: PLAIN"),t("OutboundLink")],1)]),a._v(" "),t("p",[t("a",{attrs:{href:"https://blog.csdn.net/qqqq0199181/article/details/95506766",target:"_blank",rel:"noopener noreferrer"}},[a._v("Kudu 1.8.0 编译安装配置（瘦身版）"),t("OutboundLink")],1)]),a._v(" "),t("h2",{attrs:{id:"kudu迁移master"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#kudu迁移master"}},[a._v("$")]),a._v(" Kudu迁移master")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v('\n./sbin/kudu-master  \\\n--fs_data_dirs=/hdp/kudu/data \\\n--fs_wal_dir=/hdp/kudu/wal \\\n--master_addresses="211.local.org:7051,212.local.org:7051,213.local.org:7051" \\\n--heap_profile_path=/tmp/kudu-master.12085 \\\n--flagfile=/run/cloudera-scm-agent/process/930-kudu-KUDU_MASTER/gflagfile\n\n\nkudu fs dump uuid --fs_wal_dir=/hdp/kudu/wal --fs_data_dirs=/hdp/kudu/data 2>/dev/null\n\n=======================\n$ sudo -u kudu kudu fs dump uuid --fs_wal_dir=/hdp/kudu/wal --fs_data_dirs=/hdp/kudu/data 2>/dev/null\n574e72983eee4ec69baa86b32093a460\nfcf4d83d650440938d4787b1b5dd04fe\nb3e2ea1c87854f3c97624d02fbec400b\n\n$ sudo -u kudu kudu fs dump uuid --fs_wal_dir=/hdp/kudu/wal --fs_data_dirs=/hdp/kudu/data > out.txt 2>err.txt\n\n$ sudo -u kudu kudu local_replica cmeta rewrite_raft_config --fs_wal_dir=/hdp/kudu/wal --fs_data_dirs=/hdp/kudu/data 00000000000000000000000000000000 574e72983eee4ec69baa86b32093a460:211.local.org:7051 fcf4d83d650440938d4787b1b5dd04fe:212.local.org:7051 b3e2ea1c87854f3c97624d02fbec400b:213.local.org:7051\n\n$ sudo -u kudu kudu local_replica copy_from_remote --fs_wal_dir=/hdp/kudu/wal --fs_data_dirs=/hdp/kudu/data 00000000000000000000000000000000 211.local.org:7051\n\n\n')])])]),t("h2",{attrs:{id:"kudu迁移到多master"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#kudu迁移到多master"}},[a._v("$")]),a._v(" Kudu迁移到多master")]),a._v(" "),t("h3",{attrs:{id:"迁移准备"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#迁移准备"}},[a._v("$")]),a._v(" 迁移准备")]),a._v(" "),t("ol",[t("li",[t("p",[a._v("建立一个维护窗口（1小时足够），期间kudu服务将不可用。")])]),a._v(" "),t("li",[t("p",[a._v("确定master数量，master数据应该是奇数个。推荐设置为3个或5个，可以对应容忍1个或两个失败。")])]),a._v(" "),t("li",[t("p",[a._v("对现有的 master 执行以下准备步骤：")]),a._v(" "),t("ul",[t("li",[t("p",[a._v("识别并记录 master 的 write-ahead log (WAL) 和数据所在的目录。如果使用 Kudu 系统包，它们的默认位置是"),t("code",[a._v("/var/lib/kudu/master")]),a._v("，但可以使用 "),t("code",[a._v("fs_wal_dir")]),a._v(" 和 "),t("code",[a._v("fs_data_dirs")]),a._v("配置参数。")])]),a._v(" "),t("li",[t("p",[a._v("识别并记录 master 用于 RPC 的端口。默认端口值为 7051，但可能已使用"),t("code",[a._v("rpc_bind_addresses")]),a._v(" 配置参数。")])]),a._v(" "),t("li",[t("p",[a._v("识别主节点的 UUID。可以使用以下命令获取它：")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("$ sudo -u kudu kudu fs dump uuid --fs_wal_dir=<master_wal_dir> [--fs_data_dirs=<master_data_dir>] 2>/dev/null\n")])])])]),a._v(" "),t("li",[t("p",[a._v("（可选）为master配置DNS别名。别名可以是DNS的cname（假设机器在DNS中已经存在一条记录），或者"),t("code",[a._v("/etc/hosts")]),a._v("里的别名。")])])])]),a._v(" "),t("li",[t("p",[a._v("如果通过impala访问kudu表，必须同时更新Hive Metastore数据库中的master地址。")]),a._v(" "),t("ul",[t("li",[t("p",[a._v("如果设置了DNS别名，执行下面的impala SQL：")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("ALTER TABLE table_name\nSET TBLPROPERTIES\n('kudu.master_addresses' = 'master-1,master-2,master-3');\n")])])])]),a._v(" "),t("li",[t("p",[a._v("如果没有设置DNS别名，参考第11步。")])])])]),a._v(" "),t("li",[t("p",[a._v("为每个新主执行以下准备步骤：")]),a._v(" "),t("ul",[t("li",[a._v("在集群中选择一台未使用的机器。master 负载很低，因此它可以与其他数据服务或进程混部，但不能与来自相同配置的另一个 Kudu master 混部。")]),a._v(" "),t("li",[a._v("确保机器已使用系统包（已安装过 kudu 和 kudu-master 包）或其他方式安装了 Kudu。")]),a._v(" "),t("li",[a._v("选择并记录主数据所在的目录。")]),a._v(" "),t("li",[a._v("选择并记录主服务器用于 RPC 的端口。")]),a._v(" "),t("li",[a._v("（可选）为 master 配置一个 DNS 别名（例如master-2, master-3， 等等）。")])])])]),a._v(" "),t("h3",{attrs:{id:"执行迁移"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#执行迁移"}},[a._v("$")]),a._v(" 执行迁移")]),a._v(" "),t("ol",[t("li",[t("p",[a._v("停止整个集群所有的kudu进程。")])]),a._v(" "),t("li",[t("p",[a._v("格式化每台新主机上的数据目录，并记录生成的UUID。使用以下命令：")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("$ sudo -u kudu kudu fs format --fs_wal_dir=<master_wal_dir> [--fs_data_dirs=<master_data_dir>]\n$ sudo -u kudu kudu fs dump uuid --fs_wal_dir=<master_wal_dir> [--fs_data_dirs=<master_data_dir>] 2>/dev/null\n")])])]),t("p",[a._v("示例：")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v('[root@kudu-prod002 ~]# sudo -u kudu kudu fs format --fs_wal_dir=/apps/kudu/master/wal --fs_data_dirs=/apps/kudu/master/data\nI0623 08:35:26.214287  7012 fs_manager.cc:263] Metadata directory not provided\nI0623 08:35:26.214372  7012 fs_manager.cc:269] Using write-ahead log directory (fs_wal_dir) as metadata directory\nI0623 08:35:26.216012  7012 fs_manager.cc:602] Generated new instance metadata in path /apps/kudu/master/data/instance:\nuuid: "07f824b6be3a4a4abb9bdddd57f6f6fc"\nformat_stamp: "Formatted at 2021-06-23 00:35:26 on kudu-prod002"\nI0623 08:35:26.217067  7012 fs_manager.cc:602] Generated new instance metadata in path /apps/kudu/master/wal/instance:\nuuid: "07f824b6be3a4a4abb9bdddd57f6f6fc"\nformat_stamp: "Formatted at 2021-06-23 00:35:26 on kudu-prod002"\nI0623 08:35:26.219463  7012 fs_manager.cc:503] Time spent creating directory manager: real 0.002s   user 0.001s sys 0.000s\n')])])])]),a._v(" "),t("li",[t("p",[a._v("如果使用的是 Cloudera Manager，请立即添加新的 Kudu 主角色，但不要启动它们。")]),a._v(" "),t("ul",[t("li",[a._v("如果使用 DNS 别名，请覆盖每个角色（包括现有的主角色）的 "),t("code",[a._v("Master Address")]),a._v(" 参数。")]),a._v(" "),t("li",[a._v("如果使用非默认 RPC 端口值，请添加端口号（以冒号分隔）。")])])]),a._v(" "),t("li",[t("p",[a._v("在现有 master 上执行以下命令重写 master 的 Raft 配置：")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("$ sudo -u kudu kudu local_replica cmeta rewrite_raft_config --fs_wal_dir=<master_wal_dir> [--fs_data_dirs=<master_data_dir>] 00000000000000000000000000000000 <all_masters>\n")])])]),t("p",[a._v("all_masters")]),a._v(" "),t("p",[a._v("以空格分隔的所有master列表。列表中的每个条目都必须是以下形式的字符串"),t("code",[a._v("<uuid>:<主机名>:<端口>")]),a._v("。")]),a._v(" "),t("p",[a._v("示例：")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v('[root@kudu-prod001 master]# sudo -u kudu kudu local_replica cmeta rewrite_raft_config --fs_wal_dir=/apps/kudu/master/wal --fs_data_dirs=/apps/kudu/master/data 00000000000000000000000000000000 3f6308e6f92f4046bf6910db315e3119:kudu-prod001:7051 07f824b6be3a4a4abb9bdddd57f6f6fc:kudu-prod002:7051 bc8a8fa87d3447cfbda6d854b7323711:kudu-prod003:7051\nI0623 08:44:13.146708 30351 fs_manager.cc:263] Metadata directory not provided\nI0623 08:44:13.146780 30351 fs_manager.cc:269] Using write-ahead log directory (fs_wal_dir) as metadata directory\nI0623 08:44:13.147426 30351 fs_manager.cc:399] Time spent opening directory manager: real 0.000s    user 0.000s sys 0.000s\nI0623 08:44:13.147513 30351 env_posix.cc:1676] Not raising this process\' open files per process limit of 65535; it is already as high as it can go\nI0623 08:44:13.147557 30351 file_cache.cc:466] Constructed file cache lbm with capacity 26214\nI0623 08:44:13.149086 30351 fs_report.cc:352] FS layout report\n--------------------\nwal directory: \nmetadata directory: \n1 data directories: /apps/kudu/master/data/data\nTotal live blocks: 6\nTotal live bytes: 52319\nTotal live bytes (after alignment): 65536\nTotal number of LBM containers: 7 (0 full)\nDid not check for missing blocks\nDid not check for orphaned blocks\nTotal full LBM containers with extra space: 0 (0 repaired)\nTotal full LBM container extra space in bytes: 0 (0 repaired)\nTotal incomplete LBM containers: 0 (0 repaired)\nTotal LBM partial records: 0 (0 repaired)\nI0623 08:44:13.149106 30351 fs_manager.cc:419] Time spent opening block manager: real 0.001s    user 0.000s sys 0.000s\nI0623 08:44:13.149211 30351 fs_manager.cc:436] Opened local filesystem: /apps/kudu/master/data,/apps/kudu/master/wal\nuuid: "3f6308e6f92f4046bf6910db315e3119"\nformat_stamp: "Formatted at 2021-06-15 08:20:46 on kudu-prod001"\nI0623 08:44:13.150106 30351 tool_action_local_replica.cc:244] Backed up old consensus metadata to /apps/kudu/master/wal/consensus-meta/00000000000000000000000000000000.pre_rewrite.1624409053149227\n')])])])]),a._v(" "),t("li",[t("p",[a._v("修改现有 master 和新 master 的配置参数"),t("code",[a._v("master_addresses")]),a._v("。新值是所有master的逗号分隔列表。每个条目都是这样的格式："),t("code",[a._v("<主机名>:<端口>")]),a._v("。（如果使用cloudera manager可以省略这一步）")])]),a._v(" "),t("li",[t("p",[a._v("启动现有的master")])]),a._v(" "),t("li",[t("p",[a._v("在每台新 master 机器上执行以下命令将 master 数据复制到每个新 master：")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("$ sudo -u kudu kudu local_replica copy_from_remote --fs_wal_dir=<master_data_dir> 00000000000000000000000000000000 <existing_master>\n")])])]),t("p",[a._v("示例：")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v('[root@kudu-prod002 ~]# sudo -u kudu kudu local_replica copy_from_remote --fs_wal_dir=/apps/kudu/master/wal --fs_data_dirs=/apps/kudu/master/data 00000000000000000000000000000000 kudu-prod001:7051\nI0623 08:48:32.466200  9769 fs_manager.cc:263] Metadata directory not provided\nI0623 08:48:32.466274  9769 fs_manager.cc:269] Using write-ahead log directory (fs_wal_dir) as metadata directory\nI0623 08:48:32.466897  9769 fs_manager.cc:399] Time spent opening directory manager: real 0.000s    user 0.000s sys 0.000s\nI0623 08:48:32.466969  9769 env_posix.cc:1676] Not raising this process\' open files per process limit of 65535; it is already as high as it can go\nI0623 08:48:32.467013  9769 file_cache.cc:466] Constructed file cache lbm with capacity 26214\nI0623 08:48:32.467432  9769 fs_report.cc:352] FS layout report\n--------------------\nwal directory: \nmetadata directory: \n1 data directories: /apps/kudu/master/data/data\nTotal live blocks: 0\nTotal live bytes: 0\nTotal live bytes (after alignment): 0\nTotal number of LBM containers: 0 (0 full)\nDid not check for missing blocks\nDid not check for orphaned blocks\nTotal full LBM containers with extra space: 0 (0 repaired)\nTotal full LBM container extra space in bytes: 0 (0 repaired)\nTotal incomplete LBM containers: 0 (0 repaired)\nTotal LBM partial records: 0 (0 repaired)\nI0623 08:48:32.467450  9769 fs_manager.cc:419] Time spent opening block manager: real 0.000s    user 0.000s sys 0.000s\nI0623 08:48:32.467555  9769 fs_manager.cc:436] Opened local filesystem: /apps/kudu/master/data,/apps/kudu/master/wal\nuuid: "07f824b6be3a4a4abb9bdddd57f6f6fc"\nformat_stamp: "Formatted at 2021-06-23 00:35:26 on kudu-prod002"\nI0623 08:48:32.474596  9769 tablet_copy_client.cc:240] T 00000000000000000000000000000000 P 07f824b6be3a4a4abb9bdddd57f6f6fc: tablet copy: Beginning tablet copy session from remote peer at address kudu-prod001:7051\nI0623 08:48:32.476819  9769 data_dirs.cc:938] Could only allocate 1 dirs of requested 3 for tablet 00000000000000000000000000000000. 1 dirs total\nI0623 08:48:32.478768  9769 tablet_copy_client.cc:575] T 00000000000000000000000000000000 P 07f824b6be3a4a4abb9bdddd57f6f6fc: tablet copy: Starting download of 6 data blocks...\nI0623 08:48:32.480983  9769 tablet_copy_client.cc:538] T 00000000000000000000000000000000 P 07f824b6be3a4a4abb9bdddd57f6f6fc: tablet copy: Starting download of 1 WAL segments...\nI0623 08:48:32.483124  9769 tablet_copy_client.cc:414] T 00000000000000000000000000000000 P 07f824b6be3a4a4abb9bdddd57f6f6fc: tablet copy: Tablet Copy complete. Replacing tablet superblock.\n')])])])]),a._v(" "),t("li",[t("p",[a._v("启动所有新的master")])]),a._v(" "),t("li",[t("p",[a._v("修改值 每个tablet server的"),t("code",[a._v("tserver_master_addrs")]),a._v("配置参数。新值必须是逗号分隔的master列表，其中每个条目都是这样格式"),t("code",[a._v("<主机名>:<端口>")]),a._v("。（如果使用cloudera manager可以省略这一步）")])]),a._v(" "),t("li",[t("p",[a._v("启动所有的tablet server")])]),a._v(" "),t("li",[t("p",[a._v("如果通过impala访问kudu并且没有设置DNS别名，请手动更新HMS的数据库。")]),a._v(" "),t("ul",[t("li",[t("p",[a._v("以下是您将在 HMS 数据库中运行的示例 SQL 语句：")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("UPDATE TABLE_PARAMS\nSET PARAM_VALUE =\n  'master-1.example.com,master-2.example.com,master-3.example.com'\nWHERE PARAM_KEY = 'kudu.master_addresses' AND PARAM_VALUE = 'old-master';\n")])])])]),a._v(" "),t("li",[t("p",[a._v("通过运行以下SQL更新元数据：")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("INVALIDATE METADATA;\n")])])])])])])]),a._v(" "),t("h3",{attrs:{id:"验证"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#验证"}},[a._v("$")]),a._v(" 验证")]),a._v(" "),t("p",[a._v("要验证所有 master 都正常工作，请考虑执行以下健全性检查：")]),a._v(" "),t("ul",[t("li",[a._v("使用浏览器，访问每个 master 的 web UI 并导航到 /masters。现在应该列出所有master，其中一个master为leader角色，其他的为follower角色。每个master上的内容应该是一样的。")]),a._v(" "),t("li",[a._v("在集群上使用kudu命令行工具运行 Kudu系统检查 (ksck) 。有关更多详细信息，请参阅"),t("a",{attrs:{href:"https://docs.cloudera.com/documentation/enterprise/6/6.3/topics/kudu_administration_cli.html#ksck",target:"_blank",rel:"noopener noreferrer"}},[a._v("使用 ksck 监控集群运行状况"),t("OutboundLink")],1),a._v("。")])]),a._v(" "),t("h3",{attrs:{id:"参考-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#参考-2"}},[a._v("$")]),a._v(" 参考")]),a._v(" "),t("p",[t("a",{attrs:{href:"https://kudu.apache.org/docs/administration.html#migrate_to_multi_master",target:"_blank",rel:"noopener noreferrer"}},[a._v("Apache: Migrating to Multiple Kudu Masters"),t("OutboundLink")],1)]),a._v(" "),t("p",[t("a",{attrs:{href:"https://docs.cloudera.com/documentation/enterprise/6/6.3/topics/kudu_administration_cli.html#migratingToMultipleKuduMasters.d12e306",target:"_blank",rel:"noopener noreferrer"}},[a._v("Cloudera: Migrating to Multiple Kudu Masters"),t("OutboundLink")],1)]),a._v(" "),t("h2",{attrs:{id:"kudu-rebalance"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#kudu-rebalance"}},[a._v("$")]),a._v(" Kudu Rebalance")]),a._v(" "),t("p",[a._v("参考：")]),a._v(" "),t("p",[t("a",{attrs:{href:"https://docs.cloudera.com/runtime/7.2.0/administering-kudu/topics/kudu-monitoring-cluster-health-with-ksck.html",target:"_blank",rel:"noopener noreferrer"}},[a._v("Monitoring cluster health with ksck"),t("OutboundLink")],1)]),a._v(" "),t("p",[t("a",{attrs:{href:"https://docs.cloudera.com/runtime/7.2.0/administering-kudu/topics/kudu-running-tablet-rebalancing-tool.html",target:"_blank",rel:"noopener noreferrer"}},[a._v("Running tablet rebalancing tool"),t("OutboundLink")],1)]),a._v(" "),t("p",[t("a",{attrs:{href:"https://docs.cloudera.com/runtime/7.2.7/kudu-management/topics/kudu-adding-new-tablet-servers.html",target:"_blank",rel:"noopener noreferrer"}},[a._v("Best practices when adding new tablet servers"),t("OutboundLink")],1)]),a._v(" "),t("p",[t("a",{attrs:{href:"https://docs.cloudera.com/documentation/enterprise/6/6.3/topics/kudu_scaling.html",target:"_blank",rel:"noopener noreferrer"}},[a._v("Kudu Scaling Guide"),t("OutboundLink")],1)]),a._v(" "),t("p",[t("a",{attrs:{href:"https://stackoverflow.com/questions/61103452/migrate-data-away-from-a-kudu-disk",target:"_blank",rel:"noopener noreferrer"}},[a._v("Migrate data away from a kudu disk"),t("OutboundLink")],1)]),a._v(" "),t("p",[t("a",{attrs:{href:"https://segmentfault.com/a/1190000021635655",target:"_blank",rel:"noopener noreferrer"}},[a._v("kudu表无法正常访问的一种情况"),t("OutboundLink")],1)]),a._v(" "),t("h2",{attrs:{id:"kudu数据迁移"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#kudu数据迁移"}},[a._v("$")]),a._v(" Kudu数据迁移")]),a._v(" "),t("h3",{attrs:{id:"table-copy方式"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#table-copy方式"}},[a._v("$")]),a._v(" Table copy方式")]),a._v(" "),t("p",[a._v("使用命令行工具"),t("code",[a._v("kudu table copy")]),a._v("：")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("kudu table copy <master_addresses> <table_name> <dest_master_addresses> [-nocreate_table] [-dst_table=<table>] [-num_threads=<threads>] [-predicates=<predicates>] [-tablets=<tablets>] [-write_type=<type>] [-negotiation_timeout_ms=<ms>] [-timeout_ms=<ms>]\n")])])]),t("p",[a._v("报错1：")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("Invalid argument: Table partitioning must be specified using add_hash_partitions or set_range_partition_columns\n")])])]),t("p",[a._v("原因：迁移的表需要设置分区。")]),a._v(" "),t("p",[a._v("报错2：")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("I0811 19:56:26.095109 16312 table_scanner.cc:429] Table impala:bdg_inf.id_name6 created successfully\n\nT a096989375c54f8fb3fc8b4a9fcb30a8 scanned count 857879 cost 3.41085 seconds\nT a6ec6df7fc6b442ea028b3b79e429010 scanned count 855723 cost 3.91296 seconds\nI0811 19:56:31.095449 16312 table_scanner.cc:612] Scanned count: 2436702\nT af000bf1847d43b5a943d4aa3fd1c541 scanned count 854948 cost 3.16102 seconds\nT 4599ec58b78848c7afd5b30cdf821aa1 scanned count 855450 cost 3.49121 seconds\nTotal count 3424000 cost 7.40447 seconds\nW0811 19:56:33.499917 16318 client.cc:1713] Couldn't close scanner 6e89b20d9140457b88fe84f413e3d496: Service unavailable: reactor is shutting down (error 108)\n")])])]),t("p",[a._v("当前1.9版本未支持，只能作罢。")]),a._v(" "),t("h3",{attrs:{id:"impala-sql方式"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#impala-sql方式"}},[a._v("$")]),a._v(" Impala SQL方式")]),a._v(" "),t("p",[a._v("将表T1从C1集群迁移到C2集群，在C2集群创建表T2以及指向C1集群T2表的外表T3，在C2集群执行Impala SQL：")]),a._v(" "),t("div",{staticClass:"language-sql extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("INSERT")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("INTO")]),a._v(" T2 "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("SELECT")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("*")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("FROM")]),a._v(" T3\n")])])]),t("h3",{attrs:{id:"kudubackuprestore方式"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#kudubackuprestore方式"}},[a._v("$")]),a._v(" KuduBackupRestore方式")]),a._v(" "),t("p",[a._v("备份：")]),a._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[a._v("spark-submit "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--class")]),a._v(" org.apache.kudu.backup.KuduBackup "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--master")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("yarn")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n  --deploy-mode cluster "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--conf")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("spark.executor.instances")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("10")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--conf")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("spark.executor.memory")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("5g "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n  kudu-backup2_2.11-1.14.0.jar "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--kuduMasterAddresses")]),a._v(" master1-host,master-2-host,master-3-host "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--rootPath")]),a._v(" hdfs:///kudu-backups "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n  tab1 tab2\n")])])]),t("p",[a._v("恢复：")]),a._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[a._v("spark-submit "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--class")]),a._v(" org.apache.kudu.backup.KuduRestore "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--master")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("yarn")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n  --deploy-mode cluster "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--conf")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("spark.executor.instances")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("10")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--conf")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("spark.executor.memory")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("5g "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n  kudu-backup2_2.11-1.14.0.jar "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--kuduMasterAddresses")]),a._v(" master1-host,master-2-host,master-3-host "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--rootPath")]),a._v(" hdfs:///kudu-backups "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n  tab1 tab2\n")])])]),t("h3",{attrs:{id:"waterdrop方式"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#waterdrop方式"}},[a._v("$")]),a._v(" Waterdrop方式")]),a._v(" "),t("p",[a._v("使用kudu source和kudu sink插件：")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v('source {\n    kudu {\n        kudu_master = "${SRC_KUDU_MASTER}"\n        kudu_table = "impala::${SRC_TABLE_NAME}"\n        result_table_name = "table_tmp"\n    }\n}\ntransform {\n}\nsink {\n    kudu {\n        kudu_master= "${DST_KUDU_MASTER}"\n        kudu_table = "impala::${DST_TABLE_NAME}"\n        mode = "upsert"\n    }\n}\n')])])]),t("h3",{attrs:{id:"总结"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[a._v("$")]),a._v(" 总结")]),a._v(" "),t("table",[t("thead",[t("tr",[t("th",[a._v("方案")]),a._v(" "),t("th",[a._v("配置")]),a._v(" "),t("th",[a._v("时间")])])]),a._v(" "),t("tbody",[t("tr",[t("td",[a._v("Waterdrop")]),a._v(" "),t("td",[a._v("5G内存 * 10 executor")]),a._v(" "),t("td",[a._v("6min")])]),a._v(" "),t("tr",[t("td",[a._v("Impala")]),a._v(" "),t("td",[a._v("128G内存 * 3 Impalad")]),a._v(" "),t("td",[a._v("11min")])]),a._v(" "),t("tr",[t("td",[a._v("KuduBackup")]),a._v(" "),t("td",[a._v("5G内存 * 6 executor")]),a._v(" "),t("td",[a._v("23min")])]),a._v(" "),t("tr",[t("td",[a._v("KuduRestore")]),a._v(" "),t("td",[a._v("5G内存 * 7 executor")]),a._v(" "),t("td",[a._v("12min")])])])]),a._v(" "),t("h3",{attrs:{id:"参考-3"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#参考-3"}},[a._v("$")]),a._v(" 参考")]),a._v(" "),t("p",[t("a",{attrs:{href:"https://kudu.apache.org/docs/command_line_tools_reference.html#table-copy",target:"_blank",rel:"noopener noreferrer"}},[a._v("copy: Copy table data to another table"),t("OutboundLink")],1)]),a._v(" "),t("h2",{attrs:{id:"kudu-api"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#kudu-api"}},[a._v("$")]),a._v(" Kudu API")]),a._v(" "),t("p",[a._v("在这里简要说下三种"),t("code",[a._v("Kudu")]),a._v("提交数据策略的含义：")]),a._v(" "),t("ul",[t("li",[t("code",[a._v("AUTO_FLUSH_SYNC")]),a._v("：同步刷新模式。调用"),t("code",[a._v("KuduSession.apply()")]),a._v("方法后，客户端会等数据刷新到服务器后再返回，这种情况就不能批量插入数据，调用"),t("code",[a._v("KuduSession.flush()")]),a._v("方法不会起任何作用，因为此时缓冲区数据已经被刷新到了服务器")]),a._v(" "),t("li",[t("code",[a._v("AUTO_FLUSH_BACKGROUND")]),a._v("：异步刷新模式。调用"),t("code",[a._v("KuduSession.apply()")]),a._v("方法后，客户端会立即返回，但是写入将在后台发送，可能与来自同一会话的其他写入一起进行批处理。如果没有足够的缓冲空间，"),t("code",[a._v("KuduSession.apply()")]),a._v("会阻塞直到缓冲空间可用。因为写入操作是在后台进行的，因此任何错误都将存储在一个会话本地（"),t("code",[a._v("session-local")]),a._v("）缓冲区中，调用"),t("code",[a._v("countPendingErrors()")]),a._v("或者"),t("code",[a._v("getPendingErrors()")]),a._v("可以获取错误相关的信息。注意：这种模式可能会导致数据写入的时候乱序，这是因为在这种模式下，多个写操作可以并行发送到服务器")]),a._v(" "),t("li",[t("code",[a._v("MANUAL_FLUSH")]),a._v("：手动刷新模式。调用"),t("code",[a._v("KuduSession.apply()")]),a._v("方法后，客户端会立即返回，但是写入请求不会被立即发送，需要我们手动调用"),t("code",[a._v("KuduSession.flush()")]),a._v("来发送写入请求。如果缓冲区超过了配置的大小，会返回错误")])]),a._v(" "),t("p",[a._v("除刷新方式设置外，还有以下参数会影响客户端的写入行为：")]),a._v(" "),t("ul",[t("li",[t("code",[a._v("kudu_mutation_buffer_size")]),a._v("："),t("code",[a._v("Kudu")]),a._v("客户端缓存操作数据的字节数，"),t("code",[a._v("KuduTableSink")]),a._v("中定义的默认值为"),t("code",[a._v("10MB")]),a._v("，该参数通过"),t("code",[a._v("KuduSession")]),a._v("的"),t("code",[a._v("SetMutationBufferSpace()")]),a._v("方法设置。可以在"),t("code",[a._v("impalad")]),a._v("的启动项中自定义"),t("code",[a._v("kudu_mutation_buffer_size")]),a._v("的大小")]),a._v(" "),t("li",[t("code",[a._v("kudu_error_buffer_size")]),a._v("："),t("code",[a._v("KuduSession")]),a._v("操作异常的"),t("code",[a._v("buffer")]),a._v("大小，"),t("code",[a._v("KuduTableSink")]),a._v("中定义的默认值为"),t("code",[a._v("10MB")]),a._v("，该参数通过"),t("code",[a._v("KuduSession")]),a._v("的"),t("code",[a._v("SetErrorBufferSpace()")]),a._v("方法设置。可以在"),t("code",[a._v("impalad")]),a._v("的启动项中自定义"),t("code",[a._v("kudu_error_buffer_size")]),a._v("的大小")]),a._v(" "),t("li",[a._v("触发"),t("code",[a._v("flush")]),a._v("操作的缓存阈值：仅在"),t("code",[a._v("AUTO_FLUSH_BACKGROUND")]),a._v("刷新模式下生效。"),t("code",[a._v("KuduTableSink")]),a._v("中定义的默认值为"),t("code",[a._v("70%")]),a._v("。当缓存大小达到"),t("code",[a._v("70%")]),a._v("的时候，"),t("code",[a._v("Kudu")]),a._v("客户端开始将缓存的数据发送给相应的"),t("code",[a._v("tablet")]),a._v("服务。"),t("code",[a._v("Kudu")]),a._v("客户端定义的阈值为"),t("code",[a._v("50%")]),a._v("。该阈值通过"),t("code",[a._v("KuduSession")]),a._v("的"),t("code",[a._v("SetMutationBufferFlushWatermark()")]),a._v("方法设置")]),a._v(" "),t("li",[a._v("每个"),t("code",[a._v("KuduSession")]),a._v("对象的最大缓存数："),t("code",[a._v("KuduTableSink")]),a._v("将其设置为"),t("code",[a._v("0")]),a._v("，表示无限制。该参数通过"),t("code",[a._v("KuduSession")]),a._v("的"),t("code",[a._v("SetMutationBufferMaxNum()")]),a._v("方法设置")])]),a._v(" "),t("p",[a._v("参考")]),a._v(" "),t("p",[t("a",{attrs:{href:"https://www.cnblogs.com/harrychinese/p/kudu_java_api.html",target:"_blank",rel:"noopener noreferrer"}},[a._v("kudu系列: Java API使用和效率测试"),t("OutboundLink")],1)]),a._v(" "),t("p",[t("a",{attrs:{href:"https://docs.cloudera.com/documentation/enterprise/6/6.3/topics/kudu_impala.html#concept_r3t_vtz_kt__section_sgh_4vz_kt",target:"_blank",rel:"noopener noreferrer"}},[a._v("KUDU高级分区"),t("OutboundLink")],1)]),a._v(" "),t("p",[t("a",{attrs:{href:"https://my.oschina.net/dabird/blog/3190668",target:"_blank",rel:"noopener noreferrer"}},[a._v("一次Impala upsert Kudu执行缓慢问题排查总结"),t("OutboundLink")],1)]),a._v(" "),t("h2",{attrs:{id:"kudu原理"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#kudu原理"}},[a._v("$")]),a._v(" Kudu原理")]),a._v(" "),t("p",[a._v("参考：")]),a._v(" "),t("p",[t("a",{attrs:{href:"http://www.jszja.com/contents/22/2163.html",target:"_blank",rel:"noopener noreferrer"}},[a._v("kudu基础入门-背景介绍,kudu是什么,kudu的应用场景,java代码操作kudu"),t("OutboundLink")],1)]),a._v(" "),t("p",[t("a",{attrs:{href:"https://daimajiaoliu.com/daima/4eda1fc5f1003fc",target:"_blank",rel:"noopener noreferrer"}},[a._v("kudu-列式存储管理器-第四篇（原理篇）"),t("OutboundLink")],1)]),a._v(" "),t("p",[t("a",{attrs:{href:"https://blog.csdn.net/weixin_39478115/article/details/78470294",target:"_blank",rel:"noopener noreferrer"}},[a._v("kudu和hbase的区别和联系"),t("OutboundLink")],1)]),a._v(" "),t("p",[t("a",{attrs:{href:"https://blog.csdn.net/weixin_39478115/article/details/79267330",target:"_blank",rel:"noopener noreferrer"}},[a._v("kudu底层存储原理"),t("OutboundLink")],1)]),a._v(" "),t("p",[t("a",{attrs:{href:"https://blog.csdn.net/weixin_39478115/article/details/78470269",target:"_blank",rel:"noopener noreferrer"}},[a._v("kudu读写流程"),t("OutboundLink")],1)]),a._v(" "),t("p",[t("a",{attrs:{href:"https://big-data.blog.csdn.net/article/details/109014814",target:"_blank",rel:"noopener noreferrer"}},[a._v("KUDU(二)kudu架构设计"),t("OutboundLink")],1)]),a._v(" "),t("p",[t("a",{attrs:{href:"https://blog.csdn.net/wwwzydcom/article/details/109039097",target:"_blank",rel:"noopener noreferrer"}},[a._v("KUDU(三)kudu数据读写,更新流程"),t("OutboundLink")],1)]),a._v(" "),t("p",[t("a",{attrs:{href:"https://big-data.blog.csdn.net/article/details/109063149",target:"_blank",rel:"noopener noreferrer"}},[a._v("KUDU(四)kudu的模式设计"),t("OutboundLink")],1)]),a._v(" "),t("p",[t("a",{attrs:{href:"https://big-data.blog.csdn.net/article/details/109152338",target:"_blank",rel:"noopener noreferrer"}},[a._v("KUDU(五)kudu优化"),t("OutboundLink")],1)]),a._v(" "),t("h2",{attrs:{id:"kudu实践"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#kudu实践"}},[a._v("$")]),a._v(" Kudu实践")]),a._v(" "),t("h3",{attrs:{id:"kudu运行指标"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#kudu运行指标"}},[a._v("$")]),a._v(" Kudu运行指标")]),a._v(" "),t("p",[a._v("我司kudu集群的一些运行指标：")]),a._v(" "),t("table",[t("thead",[t("tr",[t("th",[a._v("指标")]),a._v(" "),t("th",[a._v("值")]),a._v(" "),t("th",[a._v("备注")])])]),a._v(" "),t("tbody",[t("tr",[t("td",[a._v("on_disk_size")]),a._v(" "),t("td",[a._v("2883144414171B")]),a._v(" "),t("td",[a._v("可以用来估算总数据量")])]),a._v(" "),t("tr",[t("td",[a._v("du tserver:${fs_data_dirs}")]),a._v(" "),t("td",[a._v("2883116588K")]),a._v(" "),t("td")]),a._v(" "),t("tr",[t("td",[a._v("du tserver:${fs_wal_dir}")]),a._v(" "),t("td",[a._v("344735380K")]),a._v(" "),t("td")]),a._v(" "),t("tr",[t("td",[a._v("磁盘使用率")]),a._v(" "),t("td",[a._v("20%,30%")]),a._v(" "),t("td")]),a._v(" "),t("tr",[t("td",[a._v("CPU使用率")]),a._v(" "),t("td",[a._v("平均最大30%, 最大平均80%")]),a._v(" "),t("td")]),a._v(" "),t("tr",[t("td",[a._v("内存使用率")]),a._v(" "),t("td",[a._v("平均最大5%, 最大平均15%")]),a._v(" "),t("td")]),a._v(" "),t("tr",[t("td",[a._v("网络入口流量")]),a._v(" "),t("td",[a._v("低谷60KB/s, 高峰1.5MB/s")]),a._v(" "),t("td")]),a._v(" "),t("tr",[t("td",[a._v("网络出口流量")]),a._v(" "),t("td",[a._v("低谷60KB/s, 高峰4.8MB/s")]),a._v(" "),t("td")]),a._v(" "),t("tr",[t("td",[a._v("磁盘读")]),a._v(" "),t("td",[a._v("低谷为0KB/s,高峰5MB/s")]),a._v(" "),t("td")]),a._v(" "),t("tr",[t("td",[a._v("磁盘写")]),a._v(" "),t("td",[a._v("0.5MB/s")]),a._v(" "),t("td")]),a._v(" "),t("tr",[t("td",[a._v("查询QPS")]),a._v(" "),t("td"),a._v(" "),t("td")]),a._v(" "),t("tr",[t("td",[a._v("写入QPS")]),a._v(" "),t("td"),a._v(" "),t("td")])])]),a._v(" "),t("p",[t("a",{attrs:{href:"https://mp.weixin.qq.com/s/Y1_YO44SZbcQEYh1PYMwCA",target:"_blank",rel:"noopener noreferrer"}},[a._v("Kudu架构介绍及其在小米的应用实践"),t("OutboundLink")],1)]),a._v(" "),t("p",[t("a",{attrs:{href:"https://mp.weixin.qq.com/s/87Z7iTfat4yEbzzgbX1Xbg",target:"_blank",rel:"noopener noreferrer"}},[a._v("“他们团队都是committer!”—— 小米Kudu开源实践 "),t("OutboundLink")],1)]),a._v(" "),t("p",[t("a",{attrs:{href:"https://mp.weixin.qq.com/s/dlh_kbhEWGw0DRK3j5GtNQ",target:"_blank",rel:"noopener noreferrer"}},[a._v("我是如何成为Apache Kudu committer & PMC的？"),t("OutboundLink")],1)])])}),[],!1,null,null,null);t.default=r.exports}}]);